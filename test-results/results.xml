<testsuites id="" name="" tests="5" failures="5" skipped="0" errors="0" time="43.43775">
<testsuite name="projects.spec.ts" timestamp="2025-09-22T01:54:56.729Z" hostname="chromium" tests="1" failures="1" skipped="0" time="36.223" errors="0">
<testcase name="projects CRUD via API (in-memory)" classname="projects.spec.ts" time="36.223">
<failure message="projects.spec.ts:3:5 projects CRUD via API (in-memory)" type="FAILURE">
<![CDATA[  [chromium] › projects.spec.ts:3:5 › projects CRUD via API (in-memory) ────────────────────────────

    Error: expect(received).toBeTruthy()

    Received: false

      12 |     await new Promise(r => setTimeout(r, 1000));
      13 |   }
    > 14 |   expect(ready && ready.ok()).toBeTruthy();
         |                               ^
      15 |
      16 |   // Create a project
      17 |   const slug = `pwtest-${Date.now()}`;
        at C:\Users\kiri_\cursor-main\tests\e2e\projects.spec.ts:14:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="projects.spec.ts" timestamp="2025-09-22T01:54:56.729Z" hostname="firefox" tests="1" failures="1" skipped="0" time="36.223" errors="0">
<testcase name="projects CRUD via API (in-memory)" classname="projects.spec.ts" time="36.223">
<failure message="projects.spec.ts:3:5 projects CRUD via API (in-memory)" type="FAILURE">
<![CDATA[  [firefox] › projects.spec.ts:3:5 › projects CRUD via API (in-memory) ─────────────────────────────

    Error: expect(received).toBeTruthy()

    Received: false

      12 |     await new Promise(r => setTimeout(r, 1000));
      13 |   }
    > 14 |   expect(ready && ready.ok()).toBeTruthy();
         |                               ^
      15 |
      16 |   // Create a project
      17 |   const slug = `pwtest-${Date.now()}`;
        at C:\Users\kiri_\cursor-main\tests\e2e\projects.spec.ts:14:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="projects.spec.ts" timestamp="2025-09-22T01:54:56.729Z" hostname="webkit" tests="1" failures="1" skipped="0" time="36.223" errors="0">
<testcase name="projects CRUD via API (in-memory)" classname="projects.spec.ts" time="36.223">
<failure message="projects.spec.ts:3:5 projects CRUD via API (in-memory)" type="FAILURE">
<![CDATA[  [webkit] › projects.spec.ts:3:5 › projects CRUD via API (in-memory) ──────────────────────────────

    Error: expect(received).toBeTruthy()

    Received: false

      12 |     await new Promise(r => setTimeout(r, 1000));
      13 |   }
    > 14 |   expect(ready && ready.ok()).toBeTruthy();
         |                               ^
      15 |
      16 |   // Create a project
      17 |   const slug = `pwtest-${Date.now()}`;
        at C:\Users\kiri_\cursor-main\tests\e2e\projects.spec.ts:14:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="projects.spec.ts" timestamp="2025-09-22T01:54:56.729Z" hostname="Mobile Chrome" tests="1" failures="1" skipped="0" time="36.223" errors="0">
<testcase name="projects CRUD via API (in-memory)" classname="projects.spec.ts" time="36.223">
<failure message="projects.spec.ts:3:5 projects CRUD via API (in-memory)" type="FAILURE">
<![CDATA[  [Mobile Chrome] › projects.spec.ts:3:5 › projects CRUD via API (in-memory) ───────────────────────

    Error: expect(received).toBeTruthy()

    Received: false

      12 |     await new Promise(r => setTimeout(r, 1000));
      13 |   }
    > 14 |   expect(ready && ready.ok()).toBeTruthy();
         |                               ^
      15 |
      16 |   // Create a project
      17 |   const slug = `pwtest-${Date.now()}`;
        at C:\Users\kiri_\cursor-main\tests\e2e\projects.spec.ts:14:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="projects.spec.ts" timestamp="2025-09-22T01:54:56.729Z" hostname="Mobile Safari" tests="1" failures="1" skipped="0" time="36.223" errors="0">
<testcase name="projects CRUD via API (in-memory)" classname="projects.spec.ts" time="36.223">
<failure message="projects.spec.ts:3:5 projects CRUD via API (in-memory)" type="FAILURE">
<![CDATA[  [Mobile Safari] › projects.spec.ts:3:5 › projects CRUD via API (in-memory) ───────────────────────

    Error: expect(received).toBeTruthy()

    Received: false

      12 |     await new Promise(r => setTimeout(r, 1000));
      13 |   }
    > 14 |   expect(ready && ready.ok()).toBeTruthy();
         |                               ^
      15 |
      16 |   // Create a project
      17 |   const slug = `pwtest-${Date.now()}`;
        at C:\Users\kiri_\cursor-main\tests\e2e\projects.spec.ts:14:31
]]>
</failure>
</testcase>
</testsuite>
</testsuites>