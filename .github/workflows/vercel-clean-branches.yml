name: Vercel Cleanup Branch Deployments

on:
  delete:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      branch:
        description: Branch a limpiar
        required: true
      dry_run:
        description: No borrar (simulación)
        required: false
        default: "false"

jobs:
  cleanup:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Guard clause for event types
        if: ${{ !(github.event_name == 'workflow_dispatch' || (github.event_name == 'delete' && github.event.ref_type == 'branch') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)) }}
        run: |
          echo "Not a supported trigger (requires workflow_dispatch, branch delete, or merged PR). Exiting."
          exit 0

      - name: Debug inputs
        run: |
          echo "event=${{ github.event_name }}"
          echo "inputs.branch='${{ github.event.inputs.branch }}'"
          echo "inputs.dry_run='${{ github.event.inputs.dry_run }}'"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.3
          run_install: false

      - name: Determine target branch
        id: target
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "delete" ]; then
            echo "branch=${{ github.event.ref }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
          echo "Target branch: $(cat $GITHUB_OUTPUT)"

      - name: Cleanup Vercel deployments for branch
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
          TARGET_BRANCH: ${{ steps.target.outputs.branch }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            DRY_RUN=1 node scripts/cleanup-vercel-branch.mjs
          else
            node scripts/cleanup-vercel-branch.mjs
          fi

  skipped:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "PR closed without merge — skipping Vercel cleanup (deployments may be reused)."