[{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\login\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\posts\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":91,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":91,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3846,3849],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3846,3849],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/admin/posts/page.tsx\r\n\r\n2025-09-13T06:20:07.359Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 3890 caracteres, 94 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { revalidatePath, revalidateTag } from 'next/cache';\r\nimport { db } from '../../../db/client';\r\nimport { posts } from '../../../db/schema';\r\nimport { eq, desc } from 'drizzle-orm';\r\n\r\nasync function getItems() {\r\n  return await db\r\n    .select({ id: posts.id, slug: posts.slug, title: posts.title, date: posts.date, category: posts.category })\r\n    .from(posts)\r\n    .orderBy(desc(posts.date));\r\n}\r\n\r\nexport default async function AdminPostsPage() {\r\n  const items = await getItems();\r\n\r\n  async function upsert(formData: FormData) {\r\n    'use server';\r\n    const slug = String(formData.get('slug') || '').trim();\r\n    const title = String(formData.get('title') || '').trim();\r\n    const description = String(formData.get('description') || '');\r\n    const category = String(formData.get('category') || '');\r\n    const image = String(formData.get('image') || '');\r\n    const content = String(formData.get('content') || '');\r\n    const dateStr = String(formData.get('date') || '');\r\n    const date = dateStr ? new Date(dateStr) : new Date();\r\n    const now = new Date();\r\n    await db\r\n      .insert(posts)\r\n      .values({ slug, title, description: description || null, category: category || null, image: image || null, content, date, published: true, createdAt: now, updatedAt: now })\r\n      .onConflictDoUpdate({\r\n        target: posts.slug,\r\n        set: { title, description: description || null, category: category || null, image: image || null, content, date, published: true, updatedAt: now },\r\n      });\r\n    revalidateTag('blogs');\r\n    revalidatePath('/blog');\r\n    revalidatePath('/admin/posts');\r\n  }\r\n\r\n  async function remove(formData: FormData) {\r\n    'use server';\r\n    const slug = String(formData.get('slug') || '');\r\n    await db.delete(posts).where(eq(posts.slug, slug));\r\n    revalidateTag('blogs');\r\n    revalidatePath('/blog');\r\n    revalidatePath('/admin/posts');\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Posts</h1>\r\n\r\n      <form action={upsert} className=\"grid grid-cols-1 md:grid-cols-2 gap-3 p-4 border rounded mb-8\">\r\n        <input name=\"slug\" placeholder=\"slug\" className=\"border rounded px-2 py-2\" required />\r\n        <input name=\"title\" placeholder=\"t├¡tulo\" className=\"border rounded px-2 py-2\" required />\r\n        <input name=\"date\" type=\"datetime-local\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"category\" placeholder=\"categor├¡a\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"image\" placeholder=\"image URL\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"description\" placeholder=\"descripci├│n\" className=\"border rounded px-2 py-2 md:col-span-2\" />\r\n        <textarea name=\"content\" placeholder=\"contenido (markdown)\" className=\"border rounded px-2 py-2 md:col-span-2 h-40\" />\r\n        <div className=\"md:col-span-2\"><button className=\"bg-accent text-white px-4 py-2 rounded\">Crear/Actualizar</button></div>\r\n      </form>\r\n\r\n      <table className=\"w-full text-sm border-collapse\">\r\n        <thead>\r\n          <tr className=\"text-left border-b\">\r\n            <th className=\"py-2\">Slug</th>\r\n            <th>T├¡tulo</th>\r\n            <th>Fecha</th>\r\n            <th>Categor├¡a</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((p) => (\r\n            <tr key={p.slug} className=\"border-b\">\r\n              <td className=\"py-2\">{p.slug}</td>\r\n              <td>{p.title}</td>\r\n              <td>{p.date ? new Date(p.date as any).toLocaleString('es-ES') : ''}</td>\r\n              <td>{p.category}</td>\r\n              <td>\r\n                <form action={remove}>\r\n                  <input type=\"hidden\" name=\"slug\" value={p.slug} />\r\n                  <button className=\"text-red-600\">Eliminar</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport const dynamic = 'force-dynamic';\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\projects\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":39,"column":154,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":39,"endColumn":157,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1479,1482],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1479,1482],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":40,"column":190,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":40,"endColumn":193,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1708,1711],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1708,1711],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":82,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":82,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3694,3697],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3694,3697],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/admin/projects/page.tsx\r\n\r\n2025-09-13T06:20:07.360Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 3744 caracteres, 85 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { revalidatePath, revalidateTag } from 'next/cache';\r\nimport { db } from '../../../db/client';\r\nimport { projects } from '../../../db/schema';\r\nimport { eq, desc } from 'drizzle-orm';\r\n\r\nasync function getItems() {\r\n  return await db.select().from(projects).orderBy(desc(projects.date));\r\n}\r\n\r\nexport default async function AdminProjectsPage() {\r\n  const items = await getItems();\r\n\r\n  async function upsert(formData: FormData) {\r\n    'use server';\r\n    const slug = String(formData.get('slug') || '').trim();\r\n    const title = String(formData.get('title') || '').trim();\r\n    const description = String(formData.get('description') || '');\r\n    const content = String(formData.get('content') || '');\r\n    const image = String(formData.get('image') || '');\r\n    const category = String(formData.get('category') || '');\r\n    const dateStr = String(formData.get('date') || '');\r\n    const date = dateStr ? new Date(dateStr) : null;\r\n    const now = new Date();\r\n    await db\r\n      .insert(projects)\r\n      .values({ slug, title, description: description || null, content: content || null, image: image || null, category: category || null, date: date as any, createdAt: now, updatedAt: now })\r\n      .onConflictDoUpdate({ target: projects.slug, set: { title, description: description || null, content: content || null, image: image || null, category: category || null, date: date as any, updatedAt: now } });\r\n    revalidateTag('projects');\r\n    revalidatePath('/admin/projects');\r\n  }\r\n\r\n  async function remove(formData: FormData) {\r\n    'use server';\r\n    const slug = String(formData.get('slug') || '');\r\n    await db.delete(projects).where(eq(projects.slug, slug));\r\n    revalidateTag('projects');\r\n    revalidatePath('/admin/projects');\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Proyectos</h1>\r\n      <form action={upsert} className=\"grid grid-cols-1 md:grid-cols-2 gap-3 p-4 border rounded mb-8\">\r\n        <input name=\"slug\" placeholder=\"slug\" className=\"border rounded px-2 py-2\" required />\r\n        <input name=\"title\" placeholder=\"t├¡tulo\" className=\"border rounded px-2 py-2\" required />\r\n        <input name=\"date\" type=\"datetime-local\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"category\" placeholder=\"categor├¡a\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"image\" placeholder=\"image URL\" className=\"border rounded px-2 py-2\" />\r\n        <input name=\"description\" placeholder=\"descripci├│n\" className=\"border rounded px-2 py-2 md:col-span-2\" />\r\n        <textarea name=\"content\" placeholder=\"contenido\" className=\"border rounded px-2 py-2 md:col-span-2 h-40\" />\r\n        <div className=\"md:col-span-2\"><button className=\"bg-accent text-white px-4 py-2 rounded\">Crear/Actualizar</button></div>\r\n      </form>\r\n\r\n      <table className=\"w-full text-sm border-collapse\">\r\n        <thead>\r\n          <tr className=\"text-left border-b\">\r\n            <th className=\"py-2\">Slug</th>\r\n            <th>T├¡tulo</th>\r\n            <th>Fecha</th>\r\n            <th>Categor├¡a</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((p) => (\r\n            <tr key={p.slug} className=\"border-b\">\r\n              <td className=\"py-2\">{p.slug}</td>\r\n              <td>{p.title}</td>\r\n              <td>{p.date ? new Date(p.date as any).toLocaleString('es-ES') : ''}</td>\r\n              <td>{p.category}</td>\r\n              <td>\r\n                <form action={remove}>\r\n                  <input type=\"hidden\" name=\"slug\" value={p.slug} />\r\n                  <button className=\"text-red-600\">Eliminar</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport const dynamic = 'force-dynamic';\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\services\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\streams\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\admin\\login\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\db-ping\\route.ts","messages":[{"ruleId":"no-duplicate-imports","severity":2,"message":"'next/server' import is duplicated.","line":15,"column":1,"nodeType":"ImportDeclaration","messageId":"import","endLine":15,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'req' is defined but never used. Allowed unused args must match /^_/u.","line":18,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":30},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":23,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":23,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[723,726],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[723,726],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/api/db-ping/route.ts\r\n\r\n2025-09-13T06:20:07.360Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 506 caracteres, 14 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport type { NextRequest } from 'next/server'\r\nimport { NextResponse } from 'next/server'\r\nimport { sql } from '../../../db/client'\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    // Drizzle client exposes a low-level SQL client as `sql` in this repo\r\n    const rows = await sql`select version() as version limit 1`\r\n    return NextResponse.json({ ok: true, version: rows })\r\n  } catch (err: any) {\r\n    return NextResponse.json({ ok: false, error: String(err) }, { status: 500 })\r\n  }\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\debug\\blogs\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":30,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":30,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1060,1063],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1060,1063],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/api/debug/blogs/route.ts\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 832 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getPostsPage, getAllPosts } from '../../../../lib/db-posts';\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    // params quick preview\r\n    const url = new URL(request.url);\r\n    const page = Number(url.searchParams.get('page') || '1');\r\n    const pageSize = Number(url.searchParams.get('pageSize') || '9');\r\n    const category = url.searchParams.get('category') || undefined;\r\n    const q = url.searchParams.get('q') || undefined;\r\n\r\n    const pageResult = await getPostsPage({ page, pageSize, category, q });\r\n    const all = await getAllPosts();\r\n\r\n    return NextResponse.json({ ok: true, pageResult, allCount: all.length, sampleAll: all.slice(0, 10) });\r\n  } catch (e: any) {\r\n    return NextResponse.json({ ok: false, error: String(e?.message || e) }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\streams\\[slug]\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":51,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":51,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1915,1918],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1915,1918],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/api/streams/[slug]/route.ts\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 2037 caracteres, 53 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getStreamBySlug } from '../../../../lib/db-streams';\r\nimport { db } from '../../../../db/client';\r\nimport { streams } from '../../../../db/schema';\r\nimport { eq } from 'drizzle-orm';\r\nimport { revalidateTag } from 'next/cache';\r\n\r\nfunction isAuthorized(req: NextRequest): boolean {\r\n  const header = req.headers.get('authorization') || '';\r\n  const token = header.startsWith('Bearer ') ? header.slice(7) : header;\r\n  const expected = process.env.ADMIN_TOKEN || '';\r\n  return expected !== '' && token === expected;\r\n}\r\n\r\nexport async function GET(_req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const item = await getStreamBySlug(slug);\r\n  if (!item) {return NextResponse.json({ error: 'Not found' }, { status: 404 });}\r\n  return NextResponse.json(item);\r\n}\r\n\r\nexport async function PATCH(req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  if (!isAuthorized(req)) {return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });}\r\n  const { slug } = await params;\r\n  const patch = await req.json().catch(() => ({}));\r\n  const now = new Date();\r\n  const res = await db\r\n    .update(streams)\r\n    .set({\r\n      name: patch.name,\r\n      description: patch.description ?? null,\r\n      provider: patch.provider,\r\n      youtubeId: patch.youtubeId ?? null,\r\n      embedUrl: patch.embedUrl ?? null,\r\n      image: patch.image ?? null,\r\n      isLive: typeof patch.isLive === 'boolean' ? patch.isLive : undefined,\r\n      updatedAt: now,\r\n    } as any)\r\n    .where(eq(streams.slug, slug));\r\n\r\n  revalidateTag('streams');\r\n  return NextResponse.json({ ok: true, res });\r\n}\r\n\r\nexport async function DELETE(req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  if (!isAuthorized(req)) {return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });}\r\n  const { slug } = await params;\r\n  await db.delete(streams).where(eq(streams.slug, slug));\r\n  revalidateTag('streams');\r\n  return NextResponse.json({ ok: true });\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\streams\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\BlogListClient.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\[slug]\\page.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":208,"column":16,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":208,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/blog/[slug]/page.tsx\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 7543 caracteres, 231 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { Calendar, ArrowLeft, Clock } from 'lucide-react';\r\nimport { notFound, redirect } from 'next/navigation';\r\nimport Breadcrumb from '../../../components/Breadcrumb';\r\nimport RelatedPosts from '../../../components/RelatedPosts';\r\nimport { unstable_cache } from 'next/cache';\r\nimport { getAllPosts, getAllSlugs, getPostBySlug } from '../../../lib/db-posts';\r\nimport { marked } from 'marked';\r\n\r\nconst normalizeSlug = (s: string) =>\r\n  String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n\r\nconst canonicalSlugFor = (p: { slug?: string; title?: string }): string => {\r\n  const base = p.slug || p.title || '';\r\n  return normalizeSlug(base);\r\n};\r\n\r\nconst getCategoryColor = (category: string) => {\r\n  switch (category) {\r\n    case 'Seguridad':\r\n      return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n    case 'Electricidad':\r\n      return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n    case 'Inform├ítica':\r\n      return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n    case 'Sonido':\r\n      return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\r\n    default:\r\n      return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\r\n  }\r\n};\r\n\r\nconst estimateReadTime = (text: string) => {\r\n  const words = text ? text.trim().split(/\\s+/).length : 0;\r\n  const minutes = Math.max(1, Math.round(words / 200));\r\n  return `${minutes} min`;\r\n};\r\n\r\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\r\n  const { slug } = await params;\r\n  const incoming = normalizeSlug(slug);\r\n  const post = await getPostBySlug(incoming);\r\n  if (!post) {\r\n    return {\r\n      title: 'Art├¡culo no encontrado',\r\n      description: 'El art├¡culo que buscas no existe.'\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: `${post.title} - Duartec Blog`,\r\n    description: post.description || undefined,\r\n    openGraph: {\r\n      title: post.title,\r\n      description: post.description || undefined,\r\n      images: post.image ? [cleanSrc(post.image)] : [],\r\n    },\r\n  };\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  const slugs = await getAllSlugs();\r\n  return slugs.map((slug) => ({ slug }));\r\n}\r\n\r\ntype BlogCard = {\r\n  title: string;\r\n  slug: string;\r\n  category: string;\r\n  image: string;\r\n  date: string;\r\n  readTime: string;\r\n  excerpt: string;\r\n};\r\n\r\nconst cleanSrc = (s?: string) => (s || '').replace(/[\\r\\n]+/g, '').trim();\r\n\r\nconst getBlogCards = unstable_cache(\r\n  async (): Promise<{\r\n    title: string;\r\n    slug: string;\r\n    category: string;\r\n    image: string;\r\n    date: string;\r\n    readTime: string;\r\n    excerpt: string;\r\n  }[]> => {\r\n    const all = await getAllPosts();\r\n    return all\r\n      .map((p) => ({\r\n        title: p.title,\r\n        slug: canonicalSlugFor(p),\r\n        category: p.category ?? 'General',\r\n        image: cleanSrc(p.image || '') || '/images/proyectos/CCTV.jpeg',\r\n        date: p.date.toISOString(),\r\n        readTime: estimateReadTime(p.content || ''),\r\n        excerpt: p.description || '',\r\n      }))\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n  },\r\n  ['blog-cards-db-v1'],\r\n  { revalidate: 3600, tags: ['blogs'] }\r\n);\r\n\r\nexport default async function BlogPostPage({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const incoming = normalizeSlug(slug);\r\n  const post = await getPostBySlug(incoming);\r\n  if (!post) {\r\n    notFound();\r\n  }\r\n  const canonical = canonicalSlugFor(post);\r\n  if (slug !== canonical) {\r\n    redirect(`/blog/${canonical}`);\r\n  }\r\n\r\n  const html = (await marked.parse(post.content || '')) as string;\r\n  const readTime = estimateReadTime(post.content || '');\r\n\r\n  const allPosts: BlogCard[] = await getBlogCards();\r\n\r\n  const current: BlogCard = {\r\n    title: post.title,\r\n    slug: canonicalSlugFor(post),\r\n    category: post.category ?? 'General',\r\n    image: post.image || '/images/proyectos/CCTV.jpeg',\r\n    date: post.date.toISOString(),\r\n    readTime,\r\n    excerpt: post.description || '',\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"relative bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 py-20 px-4 overflow-hidden\">\r\n        <div className=\"absolute inset-0\">\r\n          <Image\r\n            src={current.image || '/images/proyectos/CCTV.jpeg'}\r\n            alt={current.title}\r\n            fill\r\n            className=\"object-cover opacity-10\"\r\n          />\r\n        </div>\r\n        <div className=\"relative max-w-4xl mx-auto\">\r\n          <Breadcrumb items={[\r\n            { label: 'Blog', href: '/blog' },\r\n            { label: current.title }\r\n          ]} />\r\n\r\n          <div className=\"flex items-center mb-6\">\r\n            <Link\r\n              href=\"/blog\"\r\n              className=\"flex items-center text-accent hover:text-accent-700 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5 mr-2\" />\r\n              Volver al blog\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"mb-6\">\r\n            <span className={`inline-block px-4 py-2 rounded-full text-sm font-medium ${getCategoryColor((current.category || '') )}`}>\r\n              {current.category}\r\n            </span>\r\n          </div>\r\n\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 text-primary dark:text-white\">\r\n            {current.title}\r\n          </h1>\r\n\r\n          <div className=\"flex items-center text-gray-600 dark:text-gray-300 space-x-6\">\r\n            <div className=\"flex items-center\">\r\n              <Calendar className=\"w-5 h-5 mr-2\" />\r\n              <span>{new Date(current.date).toLocaleDateString('es-ES', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n              })}</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <Clock className=\"w-5 h-5 mr-2\" />\r\n              <span>{current.readTime} de lectura</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-4xl mx-auto py-16 px-4\">\r\n        <article className=\"prose prose-lg dark:prose-invert max-w-none\">\r\n          <div dangerouslySetInnerHTML={{ __html: html }} />\r\n        </article>\r\n\r\n        <RelatedPosts\r\n          currentPost={current}\r\n          allPosts={allPosts}\r\n          maxPosts={3}\r\n        />\r\n\r\n        <div className=\"mt-16 bg-accent rounded-2xl p-8 text-white text-center\">\r\n          <h3 className=\"text-2xl font-bold mb-4\">\r\n            ┬┐Necesitas ayuda con tu proyecto?\r\n          </h3>\r\n          <p className=\"text-lg mb-6 opacity-90\">\r\n            Nuestros expertos est├ín aqu├¡ para ayudarte con cualquier consulta t├®cnica\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Link\r\n              href=\"/contacto\"\r\n              className=\"inline-flex items-center justify-center bg-white text-accent px-8 py-4 rounded-lg font-semibold hover:bg-gray-100 transition-colors duration-200\"\r\n            >\r\n              Contactar expertos\r\n            </Link>\r\n            <a\r\n              href=\"tel:+34947256430\"\r\n              className=\"inline-flex items-center justify-center bg-transparent border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-accent transition-colors duration-200\"\r\n            >\r\n              Llamar ahora\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\contacto\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\error.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\global-error.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\aviso-legal\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\condiciones\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\cookies\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\privacidad\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\proyectos\\[slug]\\page.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":72,"column":65,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":72,"endColumn":107}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/proyectos/[slug]/page.tsx\r\n\r\n2025-09-13T06:20:07.365Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 2416 caracteres, 65 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { getAllProjects, getProjectBySlug } from '../../../lib/db-projects.new';\r\nimport { marked } from 'marked';\r\n\r\nconst normalizeSlug = (s: string) =>\r\n  String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n\r\nexport async function generateStaticParams() {\r\n  const items = await getAllProjects();\r\n  return items.map((p) => ({ slug: p.slug }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\r\n  const { slug } = await params;\r\n  const p = await getProjectBySlug(normalizeSlug(slug));\r\n  if (!p) {return { title: 'Proyecto no encontrado' };}\r\n  return {\r\n    title: `${p.title} - Proyecto`,\r\n    description: p.description || undefined,\r\n    openGraph: { title: p.title, description: p.description || undefined, images: p.image ? [p.image] : undefined },\r\n  };\r\n}\r\n\r\nexport default async function ProjectPage({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const p = await getProjectBySlug(normalizeSlug(slug));\r\n  if (!p) {\r\n    return (\r\n      <div className=\"max-w-3xl mx-auto p-8\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Proyecto no encontrado</h1>\r\n        <Link href=\"/proyectos\" className=\"text-accent\">Volver a proyectos</Link>\r\n      </div>\r\n    );\r\n  }\r\n  const html = (await marked.parse(p.content || p.description || '')) as string;\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 py-16 px-4\">\r\n        <div className=\"max-w-5xl mx-auto\">\r\n          <Link href=\"/proyectos\" className=\"text-accent hover:underline\">ÔåÉ Volver a proyectos</Link>\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mt-4 text-primary dark:text-white\">{p.title}</h1>\r\n          {p.image && (\r\n            <div className=\"relative w-full h-72 rounded-xl overflow-hidden mt-6\">\r\n              <Image src={p.image} alt={p.title} fill className=\"object-cover\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-5xl mx-auto py-12 px-4\">\r\n        <article className=\"prose dark:prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: html }} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\proyectos\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":55,"column":54,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":55,"endColumn":57,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2417,2420],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2417,2420],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/proyectos/page.tsx\r\n\r\n2025-09-13T06:20:07.365Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 2690 caracteres, 59 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { ArrowRight } from 'lucide-react';\r\nimport { getAllProjects } from '../../lib/db-projects.new';\r\n\r\nexport const metadata: Metadata = {\r\n  title: 'Proyectos - Duartec Instalaciones Inform├íticas',\r\n  description:\r\n    'Proyectos realizados por Duartec en Burgos. Instalaciones de inform├ítica, videovigilancia, sonido y electricidad.',\r\n};\r\n\r\nexport const dynamic = 'force-dynamic';\r\n\r\nexport default async function ProyectosPage() {\r\n  const proyectos = await getAllProjects();\r\n  // Use fallback from contentlayer if DB query fails (handled inside getAllProjects)\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-slate-800 dark:to-slate-900 py-20 px-4\">\r\n        <div className=\"max-w-6xl mx-auto text-center\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 text-primary dark:text-white\">Nuestros Proyectos</h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n            Descubre algunos de los proyectos m├ís destacados que hemos realizado en Burgos y Castilla y Le├│n.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-6xl mx-auto py-16 px-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {proyectos.map((p) => (\r\n            <div key={p.slug} className=\"bg-white dark:bg-slate-800 rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-200 border border-gray-100 dark:border-slate-700 overflow-hidden\">\r\n              {p.image && (\r\n                <div className=\"relative h-40 w-full\">\r\n                  <Image src={p.image} alt={p.title} fill className=\"object-cover\" />\r\n                </div>\r\n              )}\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-center justify-between mb-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                  <span>{p.category}</span>\r\n                  <span>{p.date ? new Date(p.date as any).getFullYear() : ''}</span>\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold mb-2 text-gray-800 dark:text-white\">{p.title}</h3>\r\n                <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">{p.description}</p>\r\n                <Link href={`/proyectos/${p.slug}`} className=\"flex items-center text-accent hover:text-accent-700 text-sm font-medium transition-colors\">\r\n                  Ver detalles\r\n                  <ArrowRight className=\"w-4 h-4 ml-1\" />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\quienes-somos\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\[slug]\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\electricidad-baja-tension\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\electricidad\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\informatica\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\page_backup__codex.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\sonido\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\videovigilancia\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\streaming\\[slug]\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\streaming\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\auto_comment.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'__dirname' is assigned a value but never used.","line":24,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":24,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'fetch' is not defined.","line":100,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":172,"column":7,"nodeType":"MemberExpression","messageId":"limited","endLine":172,"endColumn":18,"suggestions":[{"fix":{"range":[6090,6118],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":176,"column":7,"nodeType":"MemberExpression","messageId":"limited","endLine":176,"endColumn":18,"suggestions":[{"fix":{"range":[6213,6240],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":181,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":181,"endColumn":16,"suggestions":[{"fix":{"range":[6297,6354],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":183,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":183,"endColumn":16,"suggestions":[{"fix":{"range":[6385,6457],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nauto_comment.js\r\n\r\n2025-09-13T06:20:07.367Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: auto_comment.js\r\nTama├▒o: 5708 caracteres, 170 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n/**\r\n * Inserta un resumen al inicio de cada archivo como comentario.\r\n * Ajusta OPENAI_API_KEY y el modelo. Revisa EXT_MAP para a├▒adir m├ís extensiones.\r\n */\r\n\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport { fileURLToPath } from \"url\";\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nconst ROOT = process.cwd();\r\n\r\n// === CONFIG ===\r\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY || \"\"; // export OPENAI_API_KEY=...\r\nconst MODEL = \"gpt-4o-mini\"; // cambia al que uses\r\nconst MAX_BYTES = 150_000; // no resumir archivos enormes (ajusta)\r\nconst DRY_RUN = process.env.DRY_RUN === \"1\"; // si quieres solo ver qu├® har├¡a\r\n\r\n// Mapea extensi├│n -> envoltura de comentario (inicio, fin, l├¡nea)\r\nconst EXT_MAP = {\r\n  \".ts\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".tsx\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".js\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".jsx\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".mjs\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".cjs\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  // \".json\": { blockStart: \"/*\", blockEnd: \"*/\" }, // JSON no soporta comentarios, se comenta esta l├¡nea\r\n  \".md\": { blockStart: \"<!--\", blockEnd: \"-->\" },\r\n  \".py\": { blockStart: '\"\"\"', blockEnd: '\"\"\"' },\r\n  \".rb\": { blockStart: \"=begin\", blockEnd: \"=end\" },\r\n  \".go\": { blockStart: \"/*\", blockEnd: \"*/\" },\r\n  \".java\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".kt\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".php\": { blockStart: \"/**\", blockEnd: \"*/\" },\r\n  \".css\": { blockStart: \"/*\", blockEnd: \"*/\" },\r\n  \".scss\": { blockStart: \"/*\", blockEnd: \"*/\" },\r\n  \".vue\": { blockStart: \"<!--\", blockEnd: \"-->\" },\r\n  \".svelte\": { blockStart: \"<!--\", blockEnd: \"-->\" },\r\n  \".sh\": { blockStart: \":\", blockEnd: \"EOF_SH\" }, // usaremos heredoc para no romper shebangs\r\n};\r\n\r\nconst IGNORE_DIRS = new Set([\".git\", \"node_modules\", \"dist\", \"build\", \"out\", \".next\", \".turbo\", \".cache\", \".vercel\"]);\r\nconst SKIP_FILES = new Set([\"package-lock.json\", \"pnpm-lock.yaml\", \"yarn.lock\"]);\r\n\r\nfunction* walk(dir) {\r\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\r\n  for (const e of entries) {\r\n    if (e.isDirectory()) {\r\n      if (IGNORE_DIRS.has(e.name)) {continue;}\r\n      yield* walk(path.join(dir, e.name));\r\n    } else if (e.isFile()) {\r\n      yield path.join(dir, e.name);\r\n    }\r\n  }\r\n}\r\n\r\nasync function summarize(content, relPath) {\r\n  // If no API key is provided, return a basic fallback summary\r\n  if (!OPENAI_API_KEY) {\r\n    const ext = path.extname(relPath);\r\n    const fileName = path.basename(relPath);\r\n    const lines = content.split('\\n').length;\r\n    const size = content.length;\r\n    \r\n    return `Archivo ${ext || 'sin extensi├│n'}: ${fileName}\r\nTama├▒o: ${size} caracteres, ${lines} l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.`;\r\n  }\r\n\r\n  const prompt = [\r\n    \"Resume el archivo en espa├▒ol, 3ÔÇô6 l├¡neas m├íximas, estilo t├®cnico claro.\",\r\n    \"Incluye: prop├│sito, puntos clave, dependencias externas si son evidentes, y efectos/side-effects.\",\r\n    \"No inventes; si no hay suficiente contexto, di que es limitado.\",\r\n    `Ruta: ${relPath}`,\r\n    `Contenido:\\n\\`\\`\\`\\n${  content.slice(0, 6000)  }\\n\\`\\`\\``,\r\n  ].join(\"\\n\\n\");\r\n\r\n  const body = {\r\n    model: MODEL,\r\n    messages: [{ role: \"user\", content: prompt }],\r\n    temperature: 0.2,\r\n  };\r\n\r\n  const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Authorization\": `Bearer ${OPENAI_API_KEY}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const t = await res.text();\r\n    throw new Error(`API error ${res.status}: ${t}`);\r\n  }\r\n  const json = await res.json();\r\n  return json.choices?.[0]?.message?.content?.trim() || \"\";\r\n}\r\n\r\nfunction wrapComment(ext, text) {\r\n  const cfg = EXT_MAP[ext];\r\n  if (!cfg) {return null;}\r\n\r\n  if (ext === \".sh\") {\r\n    // Evita romper shebang; usaremos bloque a partir de la 2┬¬ l├¡nea\r\n    return (original) => {\r\n      const lines = original.split(\"\\n\");\r\n      const hasShebang = lines[0]?.startsWith(\"#!\");\r\n      const header = hasShebang ? `${lines.shift()  }\\n` : \"\";\r\n      const block =\r\n        `${cfg.blockStart} <<'${cfg.blockEnd}'\\n${ \r\n        text \r\n        }\\n${cfg.blockEnd}\\n`;\r\n      return header + block + lines.join(\"\\n\");\r\n    };\r\n  }\r\n\r\n  return (original) => {\r\n    // Check for shebang in any file type\r\n    const lines = original.split(\"\\n\");\r\n    const hasShebang = lines[0]?.startsWith(\"#!\");\r\n    if (hasShebang) {\r\n      const header = `${lines.shift()  }\\n`;\r\n      const block = `${cfg.blockStart}\\n${text}\\n${cfg.blockEnd}\\n`;\r\n      return header + block + lines.join(\"\\n\");\r\n    } else {\r\n      return `${cfg.blockStart}\\n${text}\\n${cfg.blockEnd}\\n${  original}`;\r\n    }\r\n  };\r\n}\r\n\r\nasync function main() {\r\n  const changed = [];\r\n  for (const abs of walk(ROOT)) {\r\n    const rel = path.relative(ROOT, abs);\r\n    const ext = path.extname(abs);\r\n    if (!EXT_MAP[ext]) {continue;}\r\n    if (SKIP_FILES.has(path.basename(abs))) {continue;}\r\n\r\n    const stat = fs.statSync(abs);\r\n    if (stat.size > MAX_BYTES) {continue;}\r\n\r\n    const source = fs.readFileSync(abs, \"utf8\");\r\n\r\n    // Evitar duplicar si ya tiene un bloque al principio\r\n    const alreadyHasHeader = source.slice(0, 200).includes(\"Resumen generado\");\r\n    if (alreadyHasHeader) {continue;}\r\n\r\n    const commentWrapper = wrapComment(ext, `Resumen generado autom├íticamente.\\n\\n${rel}\\n\\n${new Date().toISOString()}\\n\\n${\"ÔÇö\".repeat(30)}\\n${  await summarize(source, rel)}`);\r\n    if (!commentWrapper) {continue;}\r\n\r\n    const updated = commentWrapper(source);\r\n\r\n    if (DRY_RUN) {\r\n      console.log(`[DRY] ${rel}`);\r\n    } else {\r\n      fs.writeFileSync(abs, updated, \"utf8\");\r\n      changed.push(rel);\r\n      console.log(`[OK] ${rel}`);\r\n    }\r\n  }\r\n\r\n  if (!DRY_RUN && changed.length) {\r\n    console.log(`\\nArchivos modificados: ${changed.length}`);\r\n  } else if (DRY_RUN) {\r\n    console.log(\"\\nFinalizado en modo DRY_RUN. No se han escrito cambios.\");\r\n  }\r\n}\r\n\r\nmain().catch((e) => {\r\n  console.error(e);\r\n  process.exit(1);\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\BlogCategories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\Breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\MapCamaras.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\MapCamaras.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\RelatedPosts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\footer.tsx","messages":[{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":14,"column":1,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":14,"endColumn":2}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ncomponents/footer.tsx\r\n\r\n2025-09-13T06:20:07.368Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: footer.tsx\r\nTama├▒o: 6637 caracteres, 151 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n´╗┐import Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { Phone, Mail, MapPin, Clock, Facebook, Twitter, Instagram, Linkedin } from 'lucide-react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"w-full bg-slate-900 text-white\">\r\n      {/* Contenido principal del footer */}\r\n      <div className=\"max-w-6xl mx-auto py-12 px-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n          {/* Informaci├│n de la empresa */}\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Image \r\n                src=\"/images/logo.png\"\r\n                alt=\"Duartec\"\r\n                width={80}\r\n                height={80}\r\n                className=\"h-20 w-auto\"\r\n                loading=\"lazy\"\r\n              />\r\n              <div className=\"ml-2 hidden\">\r\n                <div className=\"text-lg font-bold\">Duartec</div>\r\n                <div className=\"text-sm text-gray-300\">Instalaciones Inform├íticas</div>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-300 mb-4 max-w-md\">\r\n              M├ís de 10 a├▒os de experiencia en instalaciones Inform├íticas, videovigilancia, \r\n              sonido y electricidad en Burgos y Castilla y Le├│n. Calidad y profesionalidad garantizadas.\r\n            </p>\r\n            <div className=\"flex space-x-4\">\r\n              <a href=\"https://facebook.com/duartec\" className=\"text-gray-400 hover:text-accent transition-colors\" aria-label=\"Facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Facebook className=\"w-5 h-5\" />\r\n              </a>\r\n              <a href=\"https://twitter.com/duartec\" className=\"text-gray-400 hover:text-accent transition-colors\" aria-label=\"Twitter\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Twitter className=\"w-5 h-5\" />\r\n              </a>\r\n              <a href=\"https://instagram.com/duartec\" className=\"text-gray-400 hover:text-accent transition-colors\" aria-label=\"Instagram\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Instagram className=\"w-5 h-5\" />\r\n              </a>\r\n              <a href=\"https://linkedin.com/company/duartec\" className=\"text-gray-400 hover:text-accent transition-colors\" aria-label=\"LinkedIn\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Linkedin className=\"w-5 h-5\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Servicios */}\r\n          <div>\r\n            <h4 className=\"font-semibold text-lg mb-4\">Servicios</h4>\r\n            <ul className=\"space-y-2\">\r\n              <li>\r\n                <Link href=\"/servicios/informatica\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  Inform├ítica\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/servicios/videovigilancia\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  Videovigilancia\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/servicios/sonido\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  Sonido Profesional\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/servicios/electricidad\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  Electricidad\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/servicios\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  Ver todos los servicios\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Contacto */}\r\n          <div>\r\n            <h4 className=\"font-semibold text-lg mb-4\">Contacto</h4>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Phone className=\"w-4 h-4 text-accent\" />\r\n                <a href=\"tel:+34947256430\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  947 256 430\r\n                </a>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Mail className=\"w-4 h-4 text-accent\" />\r\n                <a href=\"mailto:info@duartec.es\" className=\"text-gray-300 hover:text-accent transition-colors\">\r\n                  info@duartec.es\r\n                </a>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <MapPin className=\"w-4 h-4 text-accent\" />\r\n                <span className=\"text-gray-300\">Burgos, Espa├▒a</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Clock className=\"w-4 h-4 text-accent\" />\r\n                <span className=\"text-gray-300\">L-V 9:00-18:00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* L├¡nea separadora */}\r\n      <div className=\"border-t border-slate-700\">\r\n        <div className=\"max-w-6xl mx-auto py-6 px-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\r\n            {/* Copyright */}\r\n            <div className=\"text-sm text-gray-400\">\r\n              <p>&copy; {new Date().getFullYear()} Duartec Instalaciones Inform├íticas. Todos los derechos reservados.</p>\r\n            </div>\r\n\r\n            {/* Enlaces legales */}\r\n            <nav className=\"flex flex-wrap gap-4 text-sm\">\r\n              <Link href=\"/legal/aviso-legal\" className=\"text-gray-400 hover:text-accent transition-colors\">\r\n                Aviso legal\r\n              </Link>\r\n              <Link href=\"/legal/privacidad\" className=\"text-gray-400 hover:text-accent transition-colors\">\r\n                Pol├¡tica de privacidad\r\n              </Link>\r\n              <Link href=\"/legal/cookies\" className=\"text-gray-400 hover:text-accent transition-colors\">\r\n                Pol├¡tica de cookies\r\n              </Link>\r\n              <Link href=\"/legal/condiciones\" className=\"text-gray-400 hover:text-accent transition-colors\">\r\n                Condiciones de uso\r\n              </Link>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Informaci├│n adicional */}\r\n      <div className=\"bg-slate-950 py-4 px-4\">\r\n        <div className=\"max-w-6xl mx-auto text-center text-xs text-gray-500\">\r\n          <p>\r\n            Empresa registrada en Burgos | CIF: B00000000 | Inscrita en el Registro Mercantil de Burgos\r\n          </p>\r\n          <p className=\"mt-1\">\r\n            Certificaciones: ISO 9001, ISO 14001 | Miembro de la Asociaci├│n de Empresas de Instalaciones de Burgos\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\content\\blog\\fix_blog_frontmatter_merge.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ncontent/blog/fix_blog_frontmatter_merge.js\r\n\r\n2025-09-13T06:20:07.368Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_frontmatter_merge.js\r\nTama├▒o: 6247 caracteres, 173 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * Fix MDX front matter and slugs robustly.\r\n *\r\n * Several of the MDX blog posts in this repository accidentally include\r\n * more than one frontÔÇæmatter block separated by `---` lines. When\r\n * processed by Next.js and contentlayer, only the first block is parsed\r\n * as metadata and subsequent blocks are treated as part of the page\r\n * content. This leads to errors at build time because the resulting\r\n * module exports are undefined. Additionally, some posts may define\r\n * slugs with accented characters, which results in URL encodings like\r\n * `ca3mo` or `implementacia3n` in the build output.\r\n *\r\n * This script walks through all `.mdx` files in a specified directory\r\n * (default: `content/blog`), merges multiple frontÔÇæmatter blocks into\r\n * a single block, normalises the `slug` field to ASCII characters\r\n * (lowerÔÇæcased, accents removed, and nonÔÇæalphanumerics collapsed to\r\n * hyphens), and renames the file to match the slug if necessary.\r\n *\r\n * Usage:\r\n *   node fix_blog_frontmatter_merge.js [directory]\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalise a string into a slug: lower case, remove accents, collapse\r\n// nonÔÇæalphanumeric characters into hyphens, trim leading/trailing hyphens.\r\nfunction normalizeSlug(value) {\r\n  return String(value || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Recursively collect all `.mdx` files under `dir`.\r\nfunction collectMdxFiles(dir, list = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const fullPath = path.join(dir, entry);\r\n    const stat = fs.statSync(fullPath);\r\n    if (stat.isDirectory()) {\r\n      collectMdxFiles(fullPath, list);\r\n    } else if (stat.isFile() && entry.toLowerCase().endsWith('.mdx')) {\r\n      list.push(fullPath);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\n/*\r\n * Parse one or more frontÔÇæmatter blocks at the top of an MDX file.\r\n *\r\n * We split the file by lines consisting solely of `---` using a\r\n * regular expression. A typical MDX with two blocks might look like:\r\n *\r\n * ---\\n\r\n * slug: foo\\n\r\n *\\n\r\n * ---\\n\r\n * title: Bar\\n\r\n * description: Baz\\n\r\n * ---\\n\r\n * # Content\r\n *\r\n * After splitting by /^---\\s*$/m we obtain an array where the first\r\n * element is an empty string (because the file starts with `---`), the\r\n * subsequent elements alternate between metadata blocks and other\r\n * sections. We treat any consecutive blocks that contain `:` as\r\n * metadata and merge their keyÔÇôvalue pairs. The remainder of the file\r\n * becomes the content body. If no frontÔÇæmatter block is found, the\r\n * entire file is returned as body with an empty metadata object.\r\n */\r\nfunction parseMultipleFrontMatter(content) {\r\n  // Use CRLF/CR to LF normalisation for splitting consistency.\r\n  const normalized = content.replace(/\\r\\n?/g, '\\n');\r\n  const parts = normalized.split(/^---\\s*$/m);\r\n  // If the file does not start with a frontÔÇæmatter delimiter, return as is.\r\n  if (parts.length === 1 || parts[0].trim() !== '') {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const frontMatterData = {};\r\n  let bodyStartIndex = 1;\r\n  // Iterate over blocks after the initial empty string. Collect all\r\n  // metadata blocks (those containing a colon) until we hit a block\r\n  // without a colon (the beginning of the body).\r\n  for (let i = 1; i < parts.length; i++) {\r\n    const block = parts[i].trim();\r\n    if (!block || !block.includes(':')) {\r\n      bodyStartIndex = i;\r\n      break;\r\n    }\r\n    for (const line of block.split(/\\n+/)) {\r\n      const idx = line.indexOf(':');\r\n      if (idx <= 0) {continue;}\r\n      const key = line.slice(0, idx).trim();\r\n      let value = line.slice(idx + 1).trim();\r\n      // Remove surrounding quotes from the value.\r\n      if ((value.startsWith('\"') && value.endsWith('\"')) || (value.startsWith(\"'\") && value.endsWith(\"'\"))) {\r\n        value = value.slice(1, -1);\r\n      }\r\n      frontMatterData[key] = value;\r\n    }\r\n    bodyStartIndex = i + 1;\r\n  }\r\n  // Reconstruct the body from the remaining parts. We must reinsert the\r\n  // frontÔÇæmatter delimiter before the body to avoid losing any `---`\r\n  // sequences inside the content.\r\n  const bodySections = parts.slice(bodyStartIndex);\r\n  const body = bodySections.join('---\\n');\r\n  return { frontMatter: frontMatterData, body };\r\n}\r\n\r\n// Serialize the merged front matter back into a single block.\r\nfunction serializeFrontMatter(data) {\r\n  const lines = ['---'];\r\n  for (const [key, val] of Object.entries(data)) {\r\n    lines.push(`${key}: ${val}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction processFile(filePath) {\r\n  const original = fs.readFileSync(filePath, 'utf8');\r\n  const { frontMatter, body } = parseMultipleFrontMatter(original);\r\n  // Determine slug source: explicit slug, title or filename.\r\n  const baseName = path.basename(filePath, '.mdx');\r\n  const slugSource = frontMatter.slug || frontMatter.title || baseName;\r\n  const normalizedSlug = normalizeSlug(slugSource);\r\n  let updated = false;\r\n  if (frontMatter.slug !== normalizedSlug) {\r\n    frontMatter.slug = normalizedSlug;\r\n    updated = true;\r\n  }\r\n  // Build new file content.\r\n  const newContent = serializeFrontMatter(frontMatter) + body;\r\n  if (newContent !== original) {\r\n    fs.writeFileSync(filePath, newContent, 'utf8');\r\n    updated = true;\r\n    console.log(`Fixed front matter in ${filePath}`);\r\n  }\r\n  // Rename file if needed.\r\n  if (baseName !== normalizedSlug) {\r\n    const dir = path.dirname(filePath);\r\n    const newPath = path.join(dir, `${normalizedSlug}.mdx`);\r\n    if (!fs.existsSync(newPath)) {\r\n      fs.renameSync(filePath, newPath);\r\n      console.log(`Renamed file ${filePath} -> ${newPath}`);\r\n    } else {\r\n      console.warn(`Cannot rename ${filePath}, ${newPath} already exists.`);\r\n    }\r\n  }\r\n  return updated;\r\n}\r\n\r\nfunction run(directory) {\r\n  const targetDir = path.resolve(directory);\r\n  if (!fs.existsSync(targetDir)) {\r\n    console.error(`Directory not found: ${targetDir}`);\r\n    process.exit(1);\r\n  }\r\n  const files = collectMdxFiles(targetDir);\r\n  let updatedCount = 0;\r\n  for (const file of files) {\r\n    if (processFile(file)) {updatedCount++;}\r\n  }\r\n  console.log(`Processed ${files.length} file(s). Updated ${updatedCount} file(s).`);\r\n}\r\n\r\nconst dirArg = process.argv[2] || path.join(__dirname, 'content', 'blog');\r\nrun(dirArg);","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\content\\blog\\fix_blog_slugs.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ncontent/blog/fix_blog_slugs.js\r\n\r\n2025-09-13T06:20:07.368Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_slugs.js\r\nTama├▒o: 3591 caracteres, 105 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * This utility scans every MDX file under the `content/blog` directory\r\n * and ensures that the `slug` field in the frontÔÇæmatter contains only\r\n * normalized ASCII characters. It uses the same normalization logic as\r\n * the `normalizeSlug` function in `app/blog/[slug]/page.tsx`:\r\n *   - convert to lowercase\r\n *   - decompose accented characters (NFD) and remove the diacritics\r\n *   - collapse any sequence of nonÔÇæalphanumeric characters into a single hyphen\r\n *   - trim leading or trailing hyphens\r\n * If a file is missing a `slug` field, the script derives the slug from the\r\n * file name (excluding the extension). After normalization, the slug is\r\n * written back into the frontÔÇæmatter if it differs from the existing value.\r\n *\r\n * Usage: node fix_blog_slugs.js\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalize a string to a URLÔÇæfriendly slug\r\nfunction normalizeSlug(s) {\r\n  return String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Locate all .mdx files within a directory recursively\r\nfunction getMdxFiles(dir, files = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const fullPath = path.join(dir, entry);\r\n    const stat = fs.statSync(fullPath);\r\n    if (stat.isDirectory()) {\r\n      getMdxFiles(fullPath, files);\r\n    } else if (stat.isFile() && fullPath.endsWith('.mdx')) {\r\n      files.push(fullPath);\r\n    }\r\n  }\r\n  return files;\r\n}\r\n\r\n// Read a file and return an object with front matter and body\r\nfunction parseFrontMatter(content) {\r\n  const fmRegex = /^---\\s*\\n([\\s\\S]*?)\\n---\\s*(\\n|$)/;\r\n  const match = content.match(fmRegex);\r\n  if (!match) {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const fmContent = match[1];\r\n  const body = content.slice(match[0].length);\r\n  const frontMatter = {};\r\n  for (const line of fmContent.split(/\\r?\\n/)) {\r\n    const idx = line.indexOf(':');\r\n    if (idx === -1) {continue;}\r\n    const key = line.slice(0, idx).trim();\r\n    let value = line.slice(idx + 1).trim();\r\n    // Remove surrounding quotes if present\r\n    if ((value.startsWith('\"') && value.endsWith('\"')) || (value.startsWith(\"'\") && value.endsWith(\"'\"))) {\r\n      value = value.slice(1, -1);\r\n    }\r\n    frontMatter[key] = value;\r\n  }\r\n  return { frontMatter, body };\r\n}\r\n\r\n// Serialize front matter back to a YAMLÔÇælike block\r\nfunction serializeFrontMatter(data) {\r\n  const lines = ['---'];\r\n  for (const [key, value] of Object.entries(data)) {\r\n    lines.push(`${key}: ${value}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction fixSlugs() {\r\n  const blogDir = path.join(__dirname, 'content', 'blog');\r\n  if (!fs.existsSync(blogDir)) {\r\n    console.error(`Directory not found: ${blogDir}`);\r\n    process.exit(1);\r\n  }\r\n  const mdxFiles = getMdxFiles(blogDir);\r\n  let updated = 0;\r\n  for (const file of mdxFiles) {\r\n    const content = fs.readFileSync(file, 'utf8');\r\n    const { frontMatter, body } = parseFrontMatter(content);\r\n    // Determine the source for slug: explicit field, or filename\r\n    const baseName = path.basename(file, '.mdx');\r\n    const currentSlug = frontMatter.slug || baseName;\r\n    const normalized = normalizeSlug(currentSlug);\r\n    if (frontMatter.slug !== normalized) {\r\n      frontMatter.slug = normalized;\r\n      const newContent = serializeFrontMatter(frontMatter) + body;\r\n      fs.writeFileSync(file, newContent, 'utf8');\r\n      updated++;\r\n      console.log(`Updated slug in ${path.relative(process.cwd(), file)} -> ${normalized}`);\r\n    }\r\n  }\r\n  console.log(`Finished. Updated ${updated} file(s).`);\r\n}\r\n\r\nfixSlugs();","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\contentlayer.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\db\\client.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'_' is defined but never used.","line":89,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":89,"endColumn":53},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'_err' is defined but never used.","line":90,"column":54,"nodeType":null,"messageId":"unusedVar","endLine":90,"endColumn":58}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ndb/client.ts\r\n\r\n2025-09-13T06:20:07.370Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: client.ts\r\nTama├▒o: 3569 caracteres, 88 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { drizzle } from 'drizzle-orm/postgres-js';\r\nimport postgres from 'postgres';\r\nimport * as schema from './schema';\r\n\r\n// Prefer Supabase-specific env vars when deploying to Vercel/Supabase\r\n// Order of precedence:\r\n// 1. SUPABASE_DB_URL (recommended for Supabase projects)\r\n// 2. POSTGRES_URL (used in this repo scripts)\r\n// 3. DATABASE_URL (generic)\r\n// Support legacy/local env var names (some environments use cxz_ prefix).\r\nconst rawConnectionString =\r\n  process.env.SUPABASE_DB_URL ||\r\n  process.env.POSTGRES_URL ||\r\n  process.env.DATABASE_URL ||\r\n  // fallbacks for local/dev .env that uses cxz_ prefixes\r\n  process.env.cxz_POSTGRES_URL ||\r\n  process.env.cxz_POSTGRES_PRISMA_URL ||\r\n  process.env.cxz_POSTGRES_URL_NON_POOLING ||\r\n  '';\r\n\r\n// Trim accidental surrounding quotes which sometimes appear when env vars\r\n// are injected with quotes (e.g. '\"postgres://...\"'). This prevents\r\n// URL parsing errors like ERR_INVALID_URL.\r\nconst connectionString = rawConnectionString.replace(/^\"|\"$/g, '').trim();\r\n\r\nconst skipDb = process.env.USE_IN_MEMORY_DB === '1' || process.env.SKIP_DB === '1';\r\n\r\nif (!connectionString) {\r\n  throw new Error(\r\n    'No se encontr├│ URL de base de datos. Define SUPABASE_DB_URL, POSTGRES_URL o DATABASE_URL en las variables de entorno.'\r\n  );\r\n}\r\n\r\n// If the environment requested skipping DB access, export a lightweight\r\n// fake `db` that behaves like a thenable query returning empty results.\r\n// This avoids runtime errors during static generation while keeping the\r\n// import surface stable.\r\nlet client: unknown = undefined;\r\nlet dbExport: unknown = undefined;\r\nif (!skipDb) {\r\n  // Try to use @supabase/postgres-js for serverless-friendly connections when available.\r\n  // If it's not installed or fails, fall back to the 'postgres' client.\r\n  let lowLevelClient: unknown;\r\n  try {\r\n    // Dynamic require so code still works if package not installed at runtime.\r\n    const req = eval('require');\r\n    const supabasePg = (() => {\r\n      try { return req('@supabase/postgres-js'); } catch { return undefined; }\r\n    })();\r\n    if (supabasePg && typeof supabasePg.createClient === 'function') {\r\n      lowLevelClient = supabasePg.createClient(connectionString);\r\n    }\r\n  } catch {\r\n    // ignore; we'll fallback to the 'postgres' client below\r\n  }\r\n\r\n  // If @supabase/postgres-js was available and created a client, use it.\r\n  // Otherwise create a client with the 'postgres' package.\r\n  client = lowLevelClient ?? postgres(connectionString, { prepare: false });\r\n\r\n  dbExport = drizzle(client, { schema });\r\n} else {\r\n  // Minimal thenable query used as a chainable stub. When awaited it resolves\r\n  // to an empty array. This covers typical usage patterns like\r\n  // `await db.select(...).from(...).where(...);` and count queries.\r\n  class FakeQuery {\r\n    from() { return this; }\r\n    where() { return this; }\r\n    orderBy() { return this; }\r\n    limit() { return this; }\r\n    offset() { return this; }\r\n    groupBy() { return this; }\r\n    then(onfulfilled?: (value: unknown) => unknown): Promise<unknown> {\r\n      if (typeof onfulfilled === 'function') {\r\n        try { onfulfilled([] as unknown); } catch (_) { /* ignore */ }\r\n          try { onfulfilled([] as unknown); } catch (_err) { /* ignore */ }\r\n      }\r\n      return Promise.resolve([] as unknown);\r\n    }\r\n  }\r\n\r\n  const fakeDb = {\r\n    select: () => new FakeQuery(),\r\n    // count-like queries expect an array with value field; return empty array.\r\n  };\r\n\r\n  dbExport = fakeDb;\r\n}\r\n\r\nexport const db = dbExport;\r\n\r\n// Export the low-level sql client too (may be undefined when DB is skipped)\r\nexport { client as sql };\r\n\r\n// Supabase client (JS) for auth/storage/other APIs. Prefer using\r\n// SUPABASE_URL + SUPABASE_SERVICE_ROLE_KEY (or SUPABASE_ANON_KEY) set in Vercel.\r\n// Accept cxz_ prefixed env vars commonly used in local .env files as fallbacks\r\nconst supabaseUrl = process.env.SUPABASE_URL || process.env.cxz_SUPABASE_URL || process.env.cxz_NEXT_PUBLIC_SUPABASE_URL || '';\r\nconst supabaseKey =\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY ||\r\n  process.env.SUPABASE_ANON_KEY ||\r\n  process.env.cxz_SUPABASE_SERVICE_ROLE_KEY ||\r\n  process.env.cxz_NEXT_PUBLIC_SUPABASE_ANON_KEY ||\r\n  '';\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  // Don't crash - some environments may not need the JS client. Log a helpful warning.\r\n  // In Vercel, set SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY as environment variables.\r\n  // If you only need DB access via Drizzle, the SUPABASE_* JS client is optional.\r\n   \r\n  console.warn(\r\n    'Advertencia: SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY/SUPABASE_ANON_KEY no definidos. Algunas funcionalidades de Supabase (auth/storage) podr├¡an no funcionar.'\r\n  );\r\n}\r\n\r\nexport const supabase = supabaseUrl && supabaseKey\r\n  ? createClient(supabaseUrl, supabaseKey, {\r\n      auth: { autoRefreshToken: false, persistSession: false },\r\n    })\r\n  : undefined;\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\db\\schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\drizzle.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\drizzle\\neon-http.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":25,"column":3,"nodeType":"MemberExpression","messageId":"limited","endLine":25,"endColumn":14,"suggestions":[{"fix":{"range":[703,741],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ndrizzle/neon-http.ts\r\n\r\n2025-09-13T06:20:07.371Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: neon-http.ts\r\nTama├▒o: 506 caracteres, 19 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// scripts/db/migrate-neon.ts\r\nimport 'dotenv/config'\r\nimport { neon } from '@neondatabase/serverless'\r\nimport { drizzle } from 'drizzle-orm/neon-http'\r\nimport { migrate } from 'drizzle-orm/neon-http/migrator'\r\n\r\nasync function main() {\r\n  const sql = neon(process.env.DATABASE_URL!)\r\n  const db = drizzle(sql, { logger: true })\r\n\r\n  await migrate(db, { migrationsFolder: 'drizzle' })\r\n  console.log('Ô£à Migraciones aplicadas')\r\n}\r\n\r\nmain().catch((err) => {\r\n  console.error('ÔØî Error migrando:', err)\r\n  process.exit(1)\r\n})\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_frontmatter.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nfix_blog_frontmatter.js\r\n\r\n2025-09-13T06:20:07.371Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_frontmatter.js\r\nTama├▒o: 4864 caracteres, 142 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * Fix MDX front matter and slugs.\r\n *\r\n * This script scans all `.mdx` files in a given directory (default\r\n * `content/blog`) and performs two fixes:\r\n *\r\n * 1. **Merge multiple frontÔÇæmatter blocks**: some files may contain more than\r\n *    one `---` delimited block at the top. The script merges all such\r\n *    blocks into a single frontÔÇæmatter section. If the same key appears in\r\n *    multiple blocks, the value from the last block wins.\r\n *\r\n * 2. **Normalize the `slug` field and rename files**: After merging the\r\n *    front matter, the script ensures the `slug` value contains only ASCII\r\n *    characters (lowerÔÇæcased, accents removed, and nonÔÇæalphanumerics\r\n *    collapsed to hyphens). If the slug differs from the file name, the\r\n *    file is renamed to match. It also writes back the normalized slug to\r\n *    the frontÔÇæmatter.\r\n *\r\n * Usage:\r\n *   node fix_blog_frontmatter.js [directory]\r\n *\r\n * When no directory is provided, it defaults to `content/blog` relative to\r\n * the script location.\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalize a string into a slug: lower case, remove accents, collapse\r\n// nonÔÇæalphanumeric characters into hyphens, trim extra hyphens.\r\nfunction normalizeSlug(value) {\r\n  return String(value || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Collect all `.mdx` files recursively under a directory\r\nfunction collectMdxFiles(dir, list = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const fullPath = path.join(dir, entry);\r\n    const stat = fs.statSync(fullPath);\r\n    if (stat.isDirectory()) {\r\n      collectMdxFiles(fullPath, list);\r\n    } else if (stat.isFile() && entry.toLowerCase().endsWith('.mdx')) {\r\n      list.push(fullPath);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\n// Parse one or more frontÔÇæmatter blocks at the top of the file.\r\n// Returns an object { frontMatter: object, body: string }.\r\nfunction parseMultipleFrontMatter(content) {\r\n  let index = 0;\r\n  const fmData = {};\r\n  while (content.startsWith('---', index)) {\r\n    const start = index + 3; // skip '---'\r\n    const next = content.indexOf('\\n---', start);\r\n    if (next === -1) {break;}\r\n    const block = content.slice(start, next).trim();\r\n    for (const line of block.split(/\\r?\\n/)) {\r\n      const idx = line.indexOf(':');\r\n      if (idx <= 0) {continue;}\r\n      const key = line.slice(0, idx).trim();\r\n      let value = line.slice(idx + 1).trim();\r\n      // Remove surrounding quotes\r\n      if ((value.startsWith(\"'\") && value.endsWith(\"'\")) || (value.startsWith('\"') && value.endsWith('\"'))) {\r\n        value = value.slice(1, -1);\r\n      }\r\n      fmData[key] = value;\r\n    }\r\n    index = next + 4; // move past '\\n---'\r\n  }\r\n  const body = content.slice(index);\r\n  return { frontMatter: fmData, body };\r\n}\r\n\r\n// Serialize front matter back into a single block\r\nfunction serializeFrontMatter(data) {\r\n  const lines = ['---'];\r\n  for (const [key, val] of Object.entries(data)) {\r\n    lines.push(`${key}: ${val}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction processFile(filePath) {\r\n  const content = fs.readFileSync(filePath, 'utf8');\r\n  const { frontMatter, body } = parseMultipleFrontMatter(content);\r\n  // Determine source for slug: explicit slug or title or filename\r\n  const baseName = path.basename(filePath, '.mdx');\r\n  const slugSource = frontMatter.slug || frontMatter.title || baseName;\r\n  const normalizedSlug = normalizeSlug(slugSource);\r\n  let modified = false;\r\n  if (frontMatter.slug !== normalizedSlug) {\r\n    frontMatter.slug = normalizedSlug;\r\n    modified = true;\r\n  }\r\n  // Rebuild file with single front matter block\r\n  const newContent = serializeFrontMatter(frontMatter) + body;\r\n  if (newContent !== content) {\r\n    fs.writeFileSync(filePath, newContent, 'utf8');\r\n    modified = true;\r\n    console.log(`Merged front matter in ${filePath}`);\r\n  }\r\n  // Rename file if basename differs\r\n  if (baseName !== normalizedSlug) {\r\n    const newPath = path.join(path.dirname(filePath), `${normalizedSlug}.mdx`);\r\n    if (!fs.existsSync(newPath)) {\r\n      fs.renameSync(filePath, newPath);\r\n      console.log(`Renamed file ${filePath} -> ${newPath}`);\r\n    } else {\r\n      console.warn(`File ${newPath} already exists; skipping rename of ${filePath}`);\r\n    }\r\n  }\r\n  return modified;\r\n}\r\n\r\nfunction run(directory) {\r\n  const targetDir = path.resolve(directory);\r\n  if (!fs.existsSync(targetDir)) {\r\n    console.error(`Directory not found: ${targetDir}`);\r\n    process.exit(1);\r\n  }\r\n  const files = collectMdxFiles(targetDir);\r\n  let count = 0;\r\n  for (const file of files) {\r\n    if (processFile(file)) {\r\n      count++;\r\n    }\r\n  }\r\n  console.log(`Processed ${files.length} files. Updated ${count} file(s).`);\r\n}\r\n\r\n// Determine directory from CLI argument or default\r\nconst dirArg = process.argv[2] || path.join(__dirname, 'content', 'blog');\r\nrun(dirArg);","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_frontmatter_merge.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nfix_blog_frontmatter_merge.js\r\n\r\n2025-09-13T06:20:07.371Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_frontmatter_merge.js\r\nTama├▒o: 6247 caracteres, 173 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * Fix MDX front matter and slugs robustly.\r\n *\r\n * Several of the MDX blog posts in this repository accidentally include\r\n * more than one frontÔÇæmatter block separated by `---` lines. When\r\n * processed by Next.js and contentlayer, only the first block is parsed\r\n * as metadata and subsequent blocks are treated as part of the page\r\n * content. This leads to errors at build time because the resulting\r\n * module exports are undefined. Additionally, some posts may define\r\n * slugs with accented characters, which results in URL encodings like\r\n * `ca3mo` or `implementacia3n` in the build output.\r\n *\r\n * This script walks through all `.mdx` files in a specified directory\r\n * (default: `content/blog`), merges multiple frontÔÇæmatter blocks into\r\n * a single block, normalises the `slug` field to ASCII characters\r\n * (lowerÔÇæcased, accents removed, and nonÔÇæalphanumerics collapsed to\r\n * hyphens), and renames the file to match the slug if necessary.\r\n *\r\n * Usage:\r\n *   node fix_blog_frontmatter_merge.js [directory]\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalise a string into a slug: lower case, remove accents, collapse\r\n// nonÔÇæalphanumeric characters into hyphens, trim leading/trailing hyphens.\r\nfunction normalizeSlug(value) {\r\n  return String(value || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Recursively collect all `.mdx` files under `dir`.\r\nfunction collectMdxFiles(dir, list = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const fullPath = path.join(dir, entry);\r\n    const stat = fs.statSync(fullPath);\r\n    if (stat.isDirectory()) {\r\n      collectMdxFiles(fullPath, list);\r\n    } else if (stat.isFile() && entry.toLowerCase().endsWith('.mdx')) {\r\n      list.push(fullPath);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\n/*\r\n * Parse one or more frontÔÇæmatter blocks at the top of an MDX file.\r\n *\r\n * We split the file by lines consisting solely of `---` using a\r\n * regular expression. A typical MDX with two blocks might look like:\r\n *\r\n * ---\\n\r\n * slug: foo\\n\r\n *\\n\r\n * ---\\n\r\n * title: Bar\\n\r\n * description: Baz\\n\r\n * ---\\n\r\n * # Content\r\n *\r\n * After splitting by /^---\\s*$/m we obtain an array where the first\r\n * element is an empty string (because the file starts with `---`), the\r\n * subsequent elements alternate between metadata blocks and other\r\n * sections. We treat any consecutive blocks that contain `:` as\r\n * metadata and merge their keyÔÇôvalue pairs. The remainder of the file\r\n * becomes the content body. If no frontÔÇæmatter block is found, the\r\n * entire file is returned as body with an empty metadata object.\r\n */\r\nfunction parseMultipleFrontMatter(content) {\r\n  // Use CRLF/CR to LF normalisation for splitting consistency.\r\n  const normalized = content.replace(/\\r\\n?/g, '\\n');\r\n  const parts = normalized.split(/^---\\s*$/m);\r\n  // If the file does not start with a frontÔÇæmatter delimiter, return as is.\r\n  if (parts.length === 1 || parts[0].trim() !== '') {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const frontMatterData = {};\r\n  let bodyStartIndex = 1;\r\n  // Iterate over blocks after the initial empty string. Collect all\r\n  // metadata blocks (those containing a colon) until we hit a block\r\n  // without a colon (the beginning of the body).\r\n  for (let i = 1; i < parts.length; i++) {\r\n    const block = parts[i].trim();\r\n    if (!block || !block.includes(':')) {\r\n      bodyStartIndex = i;\r\n      break;\r\n    }\r\n    for (const line of block.split(/\\n+/)) {\r\n      const idx = line.indexOf(':');\r\n      if (idx <= 0) {continue;}\r\n      const key = line.slice(0, idx).trim();\r\n      let value = line.slice(idx + 1).trim();\r\n      // Remove surrounding quotes from the value.\r\n      if ((value.startsWith('\"') && value.endsWith('\"')) || (value.startsWith(\"'\") && value.endsWith(\"'\"))) {\r\n        value = value.slice(1, -1);\r\n      }\r\n      frontMatterData[key] = value;\r\n    }\r\n    bodyStartIndex = i + 1;\r\n  }\r\n  // Reconstruct the body from the remaining parts. We must reinsert the\r\n  // frontÔÇæmatter delimiter before the body to avoid losing any `---`\r\n  // sequences inside the content.\r\n  const bodySections = parts.slice(bodyStartIndex);\r\n  const body = bodySections.join('---\\n');\r\n  return { frontMatter: frontMatterData, body };\r\n}\r\n\r\n// Serialize the merged front matter back into a single block.\r\nfunction serializeFrontMatter(data) {\r\n  const lines = ['---'];\r\n  for (const [key, val] of Object.entries(data)) {\r\n    lines.push(`${key}: ${val}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction processFile(filePath) {\r\n  const original = fs.readFileSync(filePath, 'utf8');\r\n  const { frontMatter, body } = parseMultipleFrontMatter(original);\r\n  // Determine slug source: explicit slug, title or filename.\r\n  const baseName = path.basename(filePath, '.mdx');\r\n  const slugSource = frontMatter.slug || frontMatter.title || baseName;\r\n  const normalizedSlug = normalizeSlug(slugSource);\r\n  let updated = false;\r\n  if (frontMatter.slug !== normalizedSlug) {\r\n    frontMatter.slug = normalizedSlug;\r\n    updated = true;\r\n  }\r\n  // Build new file content.\r\n  const newContent = serializeFrontMatter(frontMatter) + body;\r\n  if (newContent !== original) {\r\n    fs.writeFileSync(filePath, newContent, 'utf8');\r\n    updated = true;\r\n    console.log(`Fixed front matter in ${filePath}`);\r\n  }\r\n  // Rename file if needed.\r\n  if (baseName !== normalizedSlug) {\r\n    const dir = path.dirname(filePath);\r\n    const newPath = path.join(dir, `${normalizedSlug}.mdx`);\r\n    if (!fs.existsSync(newPath)) {\r\n      fs.renameSync(filePath, newPath);\r\n      console.log(`Renamed file ${filePath} -> ${newPath}`);\r\n    } else {\r\n      console.warn(`Cannot rename ${filePath}, ${newPath} already exists.`);\r\n    }\r\n  }\r\n  return updated;\r\n}\r\n\r\nfunction run(directory) {\r\n  const targetDir = path.resolve(directory);\r\n  if (!fs.existsSync(targetDir)) {\r\n    console.error(`Directory not found: ${targetDir}`);\r\n    process.exit(1);\r\n  }\r\n  const files = collectMdxFiles(targetDir);\r\n  let updatedCount = 0;\r\n  for (const file of files) {\r\n    if (processFile(file)) {updatedCount++;}\r\n  }\r\n  console.log(`Processed ${files.length} file(s). Updated ${updatedCount} file(s).`);\r\n}\r\n\r\nconst dirArg = process.argv[2] || path.join(__dirname, 'content', 'blog');\r\nrun(dirArg);","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_slugs.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nfix_blog_slugs.js\r\n\r\n2025-09-13T06:20:07.371Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_slugs.js\r\nTama├▒o: 3591 caracteres, 105 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * This utility scans every MDX file under the `content/blog` directory\r\n * and ensures that the `slug` field in the frontÔÇæmatter contains only\r\n * normalized ASCII characters. It uses the same normalization logic as\r\n * the `normalizeSlug` function in `app/blog/[slug]/page.tsx`:\r\n *   - convert to lowercase\r\n *   - decompose accented characters (NFD) and remove the diacritics\r\n *   - collapse any sequence of nonÔÇæalphanumeric characters into a single hyphen\r\n *   - trim leading or trailing hyphens\r\n * If a file is missing a `slug` field, the script derives the slug from the\r\n * file name (excluding the extension). After normalization, the slug is\r\n * written back into the frontÔÇæmatter if it differs from the existing value.\r\n *\r\n * Usage: node fix_blog_slugs.js\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalize a string to a URLÔÇæfriendly slug\r\nfunction normalizeSlug(s) {\r\n  return String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Locate all .mdx files within a directory recursively\r\nfunction getMdxFiles(dir, files = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const fullPath = path.join(dir, entry);\r\n    const stat = fs.statSync(fullPath);\r\n    if (stat.isDirectory()) {\r\n      getMdxFiles(fullPath, files);\r\n    } else if (stat.isFile() && fullPath.endsWith('.mdx')) {\r\n      files.push(fullPath);\r\n    }\r\n  }\r\n  return files;\r\n}\r\n\r\n// Read a file and return an object with front matter and body\r\nfunction parseFrontMatter(content) {\r\n  const fmRegex = /^---\\s*\\n([\\s\\S]*?)\\n---\\s*(\\n|$)/;\r\n  const match = content.match(fmRegex);\r\n  if (!match) {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const fmContent = match[1];\r\n  const body = content.slice(match[0].length);\r\n  const frontMatter = {};\r\n  for (const line of fmContent.split(/\\r?\\n/)) {\r\n    const idx = line.indexOf(':');\r\n    if (idx === -1) {continue;}\r\n    const key = line.slice(0, idx).trim();\r\n    let value = line.slice(idx + 1).trim();\r\n    // Remove surrounding quotes if present\r\n    if ((value.startsWith('\"') && value.endsWith('\"')) || (value.startsWith(\"'\") && value.endsWith(\"'\"))) {\r\n      value = value.slice(1, -1);\r\n    }\r\n    frontMatter[key] = value;\r\n  }\r\n  return { frontMatter, body };\r\n}\r\n\r\n// Serialize front matter back to a YAMLÔÇælike block\r\nfunction serializeFrontMatter(data) {\r\n  const lines = ['---'];\r\n  for (const [key, value] of Object.entries(data)) {\r\n    lines.push(`${key}: ${value}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction fixSlugs() {\r\n  const blogDir = path.join(__dirname, 'content', 'blog');\r\n  if (!fs.existsSync(blogDir)) {\r\n    console.error(`Directory not found: ${blogDir}`);\r\n    process.exit(1);\r\n  }\r\n  const mdxFiles = getMdxFiles(blogDir);\r\n  let updated = 0;\r\n  for (const file of mdxFiles) {\r\n    const content = fs.readFileSync(file, 'utf8');\r\n    const { frontMatter, body } = parseFrontMatter(content);\r\n    // Determine the source for slug: explicit field, or filename\r\n    const baseName = path.basename(file, '.mdx');\r\n    const currentSlug = frontMatter.slug || baseName;\r\n    const normalized = normalizeSlug(currentSlug);\r\n    if (frontMatter.slug !== normalized) {\r\n      frontMatter.slug = normalized;\r\n      const newContent = serializeFrontMatter(frontMatter) + body;\r\n      fs.writeFileSync(file, newContent, 'utf8');\r\n      updated++;\r\n      console.log(`Updated slug in ${path.relative(process.cwd(), file)} -> ${normalized}`);\r\n    }\r\n  }\r\n  console.log(`Finished. Updated ${updated} file(s).`);\r\n}\r\n\r\nfixSlugs();","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_slugs_extended.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nfix_blog_slugs_extended.js\r\n\r\n2025-09-13T06:20:07.372Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_slugs_extended.js\r\nTama├▒o: 4745 caracteres, 134 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * Extended blog slug fixer.\r\n *\r\n * This script scans all `.mdx` files inside a given directory (default\r\n * `content/blog`) and normalizes the slug of each post using the same\r\n * logic as in your Next.js application. It goes beyond simply updating\r\n * the `slug` field: if the normalized slug differs from the current file\r\n * name, it will also rename the file accordingly. This helps avoid\r\n * situations where the file name and slug diverge, which can be a\r\n * source of confusion or build errors. The script logs all changes it\r\n * makes and reports a summary at the end.\r\n *\r\n * Usage:\r\n *   node fix_blog_slugs_extended.js [directory]\r\n *\r\n *   directory: (optional) root directory to search for `.mdx` files.\r\n *              Defaults to `content/blog` relative to the script's\r\n *              location.\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Normalize a string into a slug: lower case, remove accents, collapse\r\n// non-alphanumeric characters into hyphens, trim extra hyphens.\r\nfunction normalizeSlug(s) {\r\n  return String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n// Recursively collect all `.mdx` files under a directory\r\nfunction collectMdxFiles(dir, list = []) {\r\n  for (const entry of fs.readdirSync(dir)) {\r\n    const full = path.join(dir, entry);\r\n    const stat = fs.statSync(full);\r\n    if (stat.isDirectory()) {\r\n      collectMdxFiles(full, list);\r\n    } else if (stat.isFile() && entry.toLowerCase().endsWith('.mdx')) {\r\n      list.push(full);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\n// Very simple frontÔÇæmatter parser. It returns an object with\r\n// `frontMatter` (key/value pairs) and `body` (string). Only top-level\r\n// singleÔÇæline key: value entries are supported. If no front matter is\r\n// found, `frontMatter` is empty.\r\nfunction parseFrontMatter(content) {\r\n  const fmStart = content.indexOf('---\\n');\r\n  if (fmStart !== 0) {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const fmEnd = content.indexOf('\\n---', fmStart + 4);\r\n  if (fmEnd === -1) {\r\n    return { frontMatter: {}, body: content };\r\n  }\r\n  const fmLines = content.slice(4, fmEnd).split(/\\r?\\n/);\r\n  const frontMatter = {};\r\n  for (const line of fmLines) {\r\n    const idx = line.indexOf(':');\r\n    if (idx <= 0) {continue;}\r\n    const key = line.slice(0, idx).trim();\r\n    let val = line.slice(idx + 1).trim();\r\n    if ((val.startsWith('\"') && val.endsWith('\"')) || (val.startsWith(\"'\") && val.endsWith(\"'\"))) {\r\n      val = val.slice(1, -1);\r\n    }\r\n    frontMatter[key] = val;\r\n  }\r\n  const body = content.slice(fmEnd + 4);\r\n  return { frontMatter, body };\r\n}\r\n\r\nfunction serializeFrontMatter(obj) {\r\n  const lines = ['---'];\r\n  for (const [key, val] of Object.entries(obj)) {\r\n    lines.push(`${key}: ${val}`);\r\n  }\r\n  lines.push('---\\n');\r\n  return lines.join('\\n');\r\n}\r\n\r\nfunction fixSlugs(rootDir) {\r\n  const resolvedDir = path.resolve(rootDir);\r\n  if (!fs.existsSync(resolvedDir)) {\r\n    console.error(`Error: directory not found: ${resolvedDir}`);\r\n    process.exit(1);\r\n  }\r\n  const files = collectMdxFiles(resolvedDir);\r\n  let updatedCount = 0;\r\n  let renamedCount = 0;\r\n  for (const file of files) {\r\n    const content = fs.readFileSync(file, 'utf8');\r\n    const { frontMatter, body } = parseFrontMatter(content);\r\n    const fileName = path.basename(file, '.mdx');\r\n    const source = frontMatter.slug || frontMatter.title || fileName;\r\n    const normalized = normalizeSlug(source);\r\n    let changed = false;\r\n    // Update slug field if different\r\n    if (frontMatter.slug !== normalized) {\r\n      frontMatter.slug = normalized;\r\n      changed = true;\r\n    }\r\n    // Build new content if anything changed\r\n    if (changed) {\r\n      const newContent = serializeFrontMatter(frontMatter) + body;\r\n      fs.writeFileSync(file, newContent, 'utf8');\r\n      updatedCount++;\r\n      console.log(`Updated slug in ${path.relative(process.cwd(), file)} -> ${normalized}`);\r\n    }\r\n    // Rename file if its basename differs from normalized slug\r\n    if (fileName !== normalized) {\r\n      const newPath = path.join(path.dirname(file), `${normalized  }.mdx`);\r\n      // If destination exists, avoid overwriting\r\n      if (!fs.existsSync(newPath)) {\r\n        fs.renameSync(file, newPath);\r\n        renamedCount++;\r\n        console.log(`Renamed file ${path.relative(process.cwd(), file)} -> ${path.relative(process.cwd(), newPath)}`);\r\n      } else {\r\n        console.warn(`Skipped renaming ${file} because ${newPath} already exists`);\r\n      }\r\n    }\r\n  }\r\n  console.log(`Finished. Updated ${updatedCount} slug(s), renamed ${renamedCount} file(s).`);\r\n}\r\n\r\n// Determine directory from CLI argument or default\r\nconst targetDir = process.argv[2] || path.join(__dirname, 'content', 'blog');\r\nfixSlugs(targetDir);","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\instrumentation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\.disabled.contentlayer.config.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[814,817],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[814,817],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/.disabled.contentlayer.config.ts\r\n\r\n2025-09-13T06:20:07.372Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: .disabled.contentlayer.config.ts\r\nTama├▒o: 565 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files';\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n  name: 'Blog',\r\n  filePathPattern: `blog/*.mdx`,\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    description: { type: 'string', required: false },\r\n    slug: { type: 'string', required: true },\r\n  },\r\n  computedFields: {\r\n    url: { type: 'string', resolve: (doc: any) => `/blog/${doc.slug}` },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Blog],\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\admin\\projects\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":46,"column":60,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":46,"endColumn":63,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1689,1692],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1689,1692],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":53,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":53,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1899,1902],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1899,1902],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":126,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":126,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4502,4505],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4502,4505],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":153,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":153,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5284,5287],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5284,5287],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":185,"column":11,"nodeType":"JSXOpeningElement","endLine":185,"endColumn":70},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":189,"column":11,"nodeType":"JSXOpeningElement","endLine":189,"endColumn":70}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/admin/projects/page.tsx\r\n\r\n2025-09-13T06:20:07.373Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 9183 caracteres, 206 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ntype Project = { id: number; slug: string; title: string; description?: string };\r\n\r\nexport default function AdminProjects() {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [slug, setSlug] = useState(\"\");\r\n  const [editing, setEditing] = useState<Project | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage] = useState(10);\r\n  const [showConfirm, setShowConfirm] = useState<{ id: number; title: string } | null>(null);\r\n  const [clientToken, setClientToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    setLoading(true);\r\n    fetch('/api/projects')\r\n      .then(r => r.json())\r\n      .then(data => { if (mounted) { setProjects(data); } })\r\n      .catch(err => { console.error(err); if (mounted) { setError(String(err)); } })\r\n      .finally(() => { if (mounted) { setLoading(false); } });\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // read injected token (only present in non-production dev/test)\r\n    try {\r\n      const t = typeof window !== 'undefined' ? (window as any).__INTRANET_DEBUG_TOKEN : null;\r\n      if (t) { setClientToken(String(t)); }\r\n    } catch {\r\n      // Ignore errors when accessing debug token\r\n    }\r\n  }, []);\r\n\r\n  async function createOrUpdateProject(e: any) {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      // simple client-side validation to avoid server 422\r\n      if (!slug || !title) {\r\n        setError('Slug and title are required');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const headers: Record<string, string> = { 'Content-Type': 'application/json' };\r\n      if (clientToken) { headers['x-debug-token'] = clientToken; }\r\n      if (editing) {\r\n        const res = await fetch(`/api/projects/${editing.id}`, { method: 'PUT', body: JSON.stringify({ slug, title }), headers });\r\n        if (res.ok) {\r\n          const updated = await res.json();\r\n          setProjects(prev => prev.map(p => p.id === updated.id ? updated : p));\r\n          setEditing(null);\r\n          setTitle(''); setSlug('');\r\n        } else {\r\n          // Handle conflict (409) gracefully\r\n          if (res.status === 409) {\r\n            let msg = 'Slug already exists';\r\n            try {\r\n              const json = await res.json();\r\n              msg = json?.error || msg;\r\n            } catch { /* ignore */ }\r\n            setError(msg);\r\n            return;\r\n          }\r\n          // try to parse JSON error body first\r\n          let msg = 'Failed to update';\r\n          try {\r\n            const json = await res.json();\r\n            msg = json?.error || JSON.stringify(json) || msg;\r\n          } catch {\r\n            const txt = await res.text();\r\n            msg = txt || msg;\r\n          }\r\n          throw new Error(msg);\r\n        }\r\n      } else {\r\n        const res = await fetch('/api/projects', { method: 'POST', body: JSON.stringify({ slug, title }), headers });\r\n        if (res.ok) {\r\n          const p = await res.json();\r\n          setProjects(prev => [p, ...prev]);\r\n          setTitle(''); setSlug('');\r\n        } else {\r\n          // Handle common validation/conflict responses gracefully\r\n          if (res.status === 409) {\r\n            // slug already exists\r\n            let msg = 'Slug already exists';\r\n            try {\r\n              const json = await res.json();\r\n              msg = json?.error || msg;\r\n            } catch {\r\n              // ignore parse errors\r\n            }\r\n            setError(msg);\r\n            return;\r\n          }\r\n          let msg = 'Failed to create';\r\n          try {\r\n            const json = await res.json();\r\n            msg = json?.error || JSON.stringify(json) || msg;\r\n          } catch {\r\n            const txt = await res.text();\r\n            msg = txt || msg;\r\n          }\r\n          throw new Error(msg);\r\n        }\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err);\r\n      setError(err?.message ?? String(err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function startEdit(p: Project) {\r\n    setEditing(p);\r\n    setTitle(p.title || '');\r\n    setSlug(p.slug || '');\r\n  }\r\n\r\n  async function deleteProject(id: number) {\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      const headers: Record<string, string> = {};\r\n      if (clientToken) { headers['x-debug-token'] = clientToken; }\r\n      const res = await fetch(`/api/projects/${id}`, { method: 'DELETE', headers });\r\n      if (res.ok) {\r\n        setProjects(prev => prev.filter(p => p.id !== id));\r\n      } else {\r\n        const txt = await res.text();\r\n        throw new Error(txt || 'Failed to delete');\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err);\r\n      setError(err?.message ?? String(err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // search + pagination derived list\r\n  const filtered = projects.filter(p => p.title.toLowerCase().includes(search.toLowerCase()) || p.slug.toLowerCase().includes(search.toLowerCase()));\r\n  const total = filtered.length;\r\n  const pages = Math.max(1, Math.ceil(total / perPage));\r\n  const visible = filtered.slice((page - 1) * perPage, page * perPage);\r\n\r\n  function cancelEdit() {\r\n    setEditing(null);\r\n    setTitle(''); setSlug('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h1 className=\"text-2xl font-semibold\">Admin ÔÇö Proyectos</h1>\r\n        <div className=\"text-sm text-gray-500\">E2E-friendly (no blocking confirms)</div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-3 bg-red-50 text-red-800 border border-red-100 rounded\">{error}</div>\r\n      )}\r\n\r\n      <form onSubmit={createOrUpdateProject} className=\"bg-white p-4 rounded shadow mb-6 grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n        <div className=\"md:col-span-1\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">Slug</label>\r\n          <input className=\"mt-1 block w-full border rounded px-3 py-2\" placeholder=\"demo-slug\" value={slug} onChange={e => setSlug(e.target.value)} disabled={loading} />\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n          <input className=\"mt-1 block w-full border rounded px-3 py-2\" placeholder=\"Demo Project\" value={title} onChange={e => setTitle(e.target.value)} disabled={loading} />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-3 flex items-center gap-3 mt-2\">\r\n          <button type=\"submit\" className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded disabled:opacity-60\" disabled={loading}>\r\n            {loading ? (\r\n              <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" /><path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\" /></svg>\r\n            ) : null}\r\n            {editing ? 'Actualizar proyecto' : 'Crear proyecto'}\r\n          </button>\r\n          {editing && <button type=\"button\" onClick={cancelEdit} className=\"px-3 py-2 border rounded\" disabled={loading}>Cancelar</button>}\r\n        </div>\r\n      </form>\r\n\r\n      <section className=\"bg-white rounded shadow divide-y\">\r\n        <div className=\"p-4 flex items-center justify-between\">\r\n          <h2 className=\"text-lg font-medium\">Listado de proyectos</h2>\r\n          <div className=\"text-sm text-gray-500\">{projects.length} items</div>\r\n        </div>\r\n\r\n        <div className=\"p-4\">\r\n          <div className=\"mb-4 flex items-center justify-between gap-4\">\r\n            <input aria-label=\"Buscar\" placeholder=\"Buscar por t├¡tulo o slug\" value={search} onChange={e => { setSearch(e.target.value); setPage(1); }} className=\"border rounded px-3 py-2 w-full max-w-md\" />\r\n            <div className=\"text-sm text-gray-500\">Mostrando {visible.length} de {total}</div>\r\n          </div>\r\n\r\n          {loading && projects.length === 0 ? (\r\n            <div className=\"p-8 text-center text-gray-500\">Cargando proyectosÔÇª</div>\r\n          ) : (\r\n            <ul>\r\n              {visible.map(p => (\r\n                <li key={p.id} className=\"p-4 flex items-center justify-between\">\r\n                  <div>\r\n                    <div className=\"font-semibold\">{p.title}</div>\r\n                    <div className=\"text-sm text-gray-500\">{p.slug}</div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button onClick={() => startEdit(p)} className=\"px-3 py-1 border rounded text-sm\" disabled={loading}>Editar</button>\r\n                    <button onClick={() => setShowConfirm({ id: p.id, title: p.title })} className=\"px-3 py-1 bg-red-600 text-white rounded text-sm\" disabled={loading}>Borrar</button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n              {total === 0 && (\r\n                <li className=\"p-6 text-center text-gray-500\">No hay proyectos ÔÇö crea uno arriba.</li>\r\n              )}\r\n            </ul>\r\n          )}\r\n\r\n          <div className=\"p-4 flex items-center justify-between\">\r\n            <div className=\"text-sm text-gray-500\">P├ígina {page} de {pages}</div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button onClick={() => setPage(p => Math.max(1, p - 1))} className=\"px-3 py-1 border rounded\" disabled={page === 1}>Anterior</button>\r\n              <button onClick={() => setPage(p => Math.min(pages, p + 1))} className=\"px-3 py-1 border rounded\" disabled={page === pages}>Siguiente</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Non-blocking confirm modal */}\r\n      {showConfirm ? (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40\">\r\n          <div className=\"bg-white p-6 rounded shadow max-w-md w-full\">\r\n            <h3 className=\"text-lg font-medium mb-2\">Confirmar borrado</h3>\r\n            <p className=\"mb-4\">┬┐Borrar <strong>{showConfirm.title}</strong>?</p>\r\n            <div className=\"flex justify-end gap-2\">\r\n              <button onClick={() => setShowConfirm(null)} className=\"px-3 py-2 border rounded\">Cancelar</button>\r\n              <button onClick={async () => { const { id } = (showConfirm!); setShowConfirm(null); await deleteProject(id); }} className=\"px-3 py-2 bg-red-600 text-white rounded\">Borrar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\db\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":34,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":34,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[972,975],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[972,975],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":36,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":36,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1054,1057],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1054,1057],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/api/_debug/db/route.ts\r\n\r\n2025-09-13T06:20:07.373Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 797 caracteres, 27 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getDb } from '../../../../lib/db';\r\n\r\nfunction checkDebugAccess(req: Request) {\r\n  const token = process.env.INTRANET_DEBUG_TOKEN;\r\n  if (token) {\r\n    const provided = req.headers.get('x-debug-token') || '';\r\n    if (provided !== token) {return false;}\r\n    return true;\r\n  }\r\n  if (process.env.NODE_ENV === 'production') {return false;}\r\n  return true;\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  if (!checkDebugAccess(req)) {\r\n    return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\r\n  }\r\n  try {\r\n    const sql = getDb();\r\n    const state = (sql && (sql as any).__state) || null;\r\n    return NextResponse.json({ state });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: String(err) || 'Internal Error' }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\env\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":42,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":42,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1247,1250],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1247,1250],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":47,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":47,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1465,1468],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1465,1468],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/api/_debug/env/route.ts\r\n\r\n2025-09-13T06:20:07.373Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 1200 caracteres, 38 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getDb } from '../../../../lib/db';\r\n\r\nfunction checkDebugAccess(req: Request) {\r\n  const token = process.env.INTRANET_DEBUG_TOKEN;\r\n  if (token) {\r\n    const provided = req.headers.get('x-debug-token') || '';\r\n    if (provided !== token) {return false;}\r\n    return true;\r\n  }\r\n  // If no token configured, only allow outside production\r\n  if (process.env.NODE_ENV === 'production') {return false;}\r\n  return true;\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  if (!checkDebugAccess(req)) {\r\n    return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\r\n  }\r\n  try {\r\n    const envVal = process.env.USE_IN_MEMORY_DB;\r\n    let usingInMemory = false;\r\n    let hasState = false;\r\n    try {\r\n      if (envVal === '1' || envVal === 'true') {\r\n        usingInMemory = true;\r\n      }\r\n      const sql = getDb();\r\n      hasState = !!(sql && (sql as any).__state);\r\n    } catch {\r\n      // getDb may throw if DB not configured; still return env info\r\n    }\r\n    return NextResponse.json({ USE_IN_MEMORY_DB: envVal ?? null, usingInMemory, hasState });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: err?.message ?? 'Internal Error' }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\ready\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[828,831],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[828,831],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":22,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":22,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[953,956],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[953,956],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextResponse } from 'next/server'\r\nimport { getDb } from '../../../../lib/db'\r\n\r\n// Readiness endpoint used by automated tests. If USE_IN_MEMORY_DB is set,\r\n// returns inMemoryDb=true. Otherwise attempts a lightweight DB check (SELECT 1).\r\nexport async function GET() {\r\n  const useInMemory = process.env.USE_IN_MEMORY_DB === '1' || process.env.USE_IN_MEMORY_DB === 'true'\r\n  if (useInMemory) {\r\n    return NextResponse.json({ status: 'ok', inMemoryDb: true, timestamp: Date.now() }, { status: 200 })\r\n  }\r\n\r\n  try {\r\n    const sql = getDb();\r\n    // run a minimal check\r\n    try {\r\n      // postgres client returns number rows or similar; we only care it resolves\r\n      await sql`SELECT 1`;\r\n      return NextResponse.json({ status: 'ok', inMemoryDb: false, timestamp: Date.now() }, { status: 200 })\r\n    } catch (e: any) {\r\n      return NextResponse.json({ status: 'unavailable', error: String(e) }, { status: 503 })\r\n    }\r\n  } catch (err: any) {\r\n    return NextResponse.json({ status: 'missing-config', error: String(err) }, { status: 503 })\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\projects\\[id]\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[831,834],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[831,834],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":64,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":64,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2445,2448],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2445,2448],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":74,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":74,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2893,2896],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2893,2896],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":83,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":83,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3217,3220],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3217,3220],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/api/projects/[id]/route.ts\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 3011 caracteres, 76 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getDb } from '../../../../lib/db';\r\n\r\nfunction checkAdminAccess(req: Request) {\r\n  const token = process.env.INTRANET_DEBUG_TOKEN;\r\n  if (token) {\r\n    const provided = req.headers.get('x-debug-token') || '';\r\n    return provided === token;\r\n  }\r\n  if (process.env.NODE_ENV === 'production') {return false;}\r\n  return true;\r\n}\r\n\r\nexport async function PUT(req: Request, { params }: { params: { id: string } }) {\r\n  const resolvedParams: any = await params;\r\n  const id = Number(resolvedParams.id);\r\n  if (!checkAdminAccess(req)) {\r\n    return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\r\n  }\r\n  try {\r\n    const body = await req.json();\r\n    const { slug, title, description, hero_image } = body;\r\n    const sql = getDb();\r\n    if (!slug || !title) {\r\n      return NextResponse.json({ error: 'slug and title are required' }, { status: 422 });\r\n    }\r\n    const updated = await sql`\r\n      UPDATE projects SET slug = ${slug}, title = ${title}, description = ${description}, hero_image = ${hero_image}\r\n      WHERE id = ${id}\r\n      RETURNING id, slug, title, description, hero_image, created_at\r\n    `;\r\n    if (!updated || updated.length === 0) {\r\n      // Fallback: if nothing was updated by id, try to find the record by slug and update by that id.\r\n      if (slug) {\r\n        const found = await sql`SELECT id FROM projects WHERE slug = ${slug}`;\r\n        const foundId = found && found[0] && found[0].id;\r\n        if (foundId) {\r\n          const updatedByFoundId = await sql`\\\r\n            UPDATE projects SET slug = ${slug}, title = ${title}, description = ${description}, hero_image = ${hero_image}\\\r\n            WHERE id = ${foundId}\\\r\n            RETURNING id, slug, title, description, hero_image, created_at\\\r\n          `;\r\n          if (updatedByFoundId && updatedByFoundId.length > 0) {\r\n            return NextResponse.json(updatedByFoundId[0]);\r\n          }\r\n        }\r\n      }\r\n      return NextResponse.json({ message: 'Not found' }, { status: 404 });\r\n    }\r\n    return NextResponse.json(updated[0]);\r\n  } catch (err: any) {\r\n    console.error('API /api/projects/[id] PUT error:', err);\r\n    if (err && /Database URL not configured/i.test(err.message)) {\r\n      return NextResponse.json({ error: 'DB not configured' }, { status: 503 });\r\n    }\r\n    return NextResponse.json({ error: err?.message ?? 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(_req: Request, { params }: { params: { id: string } }) {\r\n  const resolvedParams: any = await params;\r\n  const id = Number(resolvedParams.id);\r\n  if (!checkAdminAccess(_req)) {\r\n    return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\r\n  }\r\n  try {\r\n    const sql = getDb();\r\n    await sql`DELETE FROM projects WHERE id = ${id}`;\r\n    return NextResponse.json({ ok: true });\r\n  } catch (err: any) {\r\n    console.error('API /api/projects/[id] DELETE error:', err);\r\n    if (err && /Database URL not configured/i.test(err.message)) {\r\n      return NextResponse.json({ error: 'DB not configured' }, { status: 503 });\r\n    }\r\n    return NextResponse.json({ error: err?.message ?? 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\projects\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":33,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":33,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1018,1021],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1018,1021],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":70,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":70,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2571,2574],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2571,2574],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/api/projects/route.ts\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 2388 caracteres, 63 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getDb } from '../../../lib/db';\r\n\r\nfunction checkAdminAccess(req: Request) {\r\n  const token = process.env.INTRANET_DEBUG_TOKEN;\r\n  if (token) {\r\n    const provided = req.headers.get('x-debug-token') || '';\r\n    return provided === token;\r\n  }\r\n  // if no token configured, allow in non-production\r\n  if (process.env.NODE_ENV === 'production') {return false;}\r\n  return true;\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    const sql = getDb();\r\n    const rows = await sql`SELECT id, slug, title, description, hero_image, created_at FROM projects ORDER BY created_at DESC`;\r\n    return NextResponse.json(rows);\r\n  } catch (err: any) {\r\n    console.error('API /api/projects GET error:', err);\r\n    // If DB is not configured (common in local dev), return empty list instead of 500\r\n    if (err && /Database URL not configured/i.test(err.message)) {\r\n      return NextResponse.json([]);\r\n    }\r\n    // Unknown error -> bubble up as 500\r\n    return NextResponse.json({ error: err?.message ?? 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  if (!checkAdminAccess(req)) {\r\n    return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\r\n  }\r\n  try {\r\n    const body = await req.json();\r\n    const { slug, title, description, hero_image } = body;\r\n    if (!slug || !title) {\r\n      return NextResponse.json({ error: 'slug and title are required' }, { status: 422 });\r\n    }\r\n    // basic slug sanity\r\n    if (!/^[a-z0-9-_]+$/i.test(slug)) {\r\n      return NextResponse.json({ error: 'slug contains invalid characters' }, { status: 422 });\r\n    }\r\n    const sql = getDb();\r\n    // uniqueness check\r\n    const exists = await sql`SELECT id FROM projects WHERE slug = ${slug}`;\r\n    if (exists && exists.length > 0) {\r\n      return NextResponse.json({ error: 'slug already exists' }, { status: 409 });\r\n    }\r\n    const inserted = await sql`\r\n      INSERT INTO projects (slug, title, description, hero_image)\r\n      VALUES (${slug}, ${title}, ${description}, ${hero_image})\r\n      RETURNING id, slug, title, description, hero_image, created_at\r\n    `;\r\n    return NextResponse.json(inserted[0], { status: 201 });\r\n  } catch (err: any) {\r\n      console.error('API /api/projects POST error:', err);\r\n    if (err && /Database URL not configured/i.test(err.message)) {\r\n      return NextResponse.json({ error: 'DB not configured' }, { status: 503 });\r\n    }\r\n    return NextResponse.json({ error: err?.message ?? 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\blog\\[slug]\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":23,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":15}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/blog/[slug]/page.tsx\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 625 caracteres, 22 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// Ensure the correct path and file exist for mdx.ts and getPost export\r\nimport { getPostSerialized } from '../../../lib/mdx';\r\nimport { MDXRemote } from 'next-mdx-remote/rsc';\r\nimport { notFound } from 'next/navigation';\r\n\r\nexport default async function BlogPage({ params }: { params: { slug: string } }) {\r\n  let post;\r\n  try {\r\n    post = await getPostSerialized(params.slug);\r\n  } catch (err) {\r\n    return notFound();\r\n  }\r\n  const { source, frontmatter } = post;\r\n  return (\r\n    <main style={{ padding: 24 }}>\r\n      <h1>{frontmatter.title}</h1>\r\n      <p>{frontmatter.date}</p>\r\n      <MDXRemote source={source} />\r\n    </main>\r\n  );\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\blog\\page.tsx","messages":[{"ruleId":"react/no-array-index-key","severity":1,"message":"Do not use Array index in keys","line":24,"column":20,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":24,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/blog/page.tsx\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 760 caracteres, 25 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport Link from 'next/link';\r\nimport { getAllPosts } from '../../lib/mdx';\r\n\r\nexport default function BlogListPage() {\r\n  const posts = getAllPosts();\r\n  return (\r\n    <main style={{ padding: 24 }}>\r\n      <h1>Blog</h1>\r\n      <ul>\r\n        {posts.map((post, idx) => (\r\n          <li key={idx} style={{ marginBottom: 24 }}>\r\n            <Link href={`/blog/${post.frontmatter.slug}`}>\r\n              <strong>{post.frontmatter.title}</strong>\r\n            </Link>\r\n            <span style={{ marginLeft: 8, color: '#888' }}>{post.frontmatter.date}</span>\r\n            {post.frontmatter.description && (\r\n              <p style={{ margin: '4px 0 0 0', color: '#555' }}>{post.frontmatter.description}</p>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\layout.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":32,"column":19,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":32,"endColumn":142}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/layout.tsx\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: layout.tsx\r\nTama├▒o: 655 caracteres, 25 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport '../styles/globals.css';\r\n\r\nexport const metadata = {\r\n  title: 'Duartec Intranet',\r\n  description: 'Scaffold de intranet de Duartec',\r\n}\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <html lang=\"es\">\r\n      <body>\r\n        {children}\r\n        {/* Expose debug token to client in non-production for E2E runs only */}\r\n        {process.env.INTRANET_DEBUG_TOKEN && process.env.NODE_ENV !== 'production' ? (\r\n          <script dangerouslySetInnerHTML={{ __html: `window.__INTRANET_DEBUG_TOKEN = ${JSON.stringify(process.env.INTRANET_DEBUG_TOKEN)}` }} />\r\n        ) : null}\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\contentlayer.config.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[794,797],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[794,797],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/contentlayer.config.ts\r\n\r\n2025-09-13T06:20:07.375Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: contentlayer.config.ts\r\nTama├▒o: 565 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files';\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n  name: 'Blog',\r\n  filePathPattern: `blog/*.mdx`,\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    description: { type: 'string', required: false },\r\n    slug: { type: 'string', required: true },\r\n  },\r\n  computedFields: {\r\n    url: { type: 'string', resolve: (doc: any) => `/blog/${doc.slug}` },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Blog],\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\db\\schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\e2e\\admin-ui.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\lib\\db.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":18,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":18,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[505,508],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[505,508],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":29,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":32,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[566,569],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[566,569],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":21,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":24,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[664,667],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[664,667],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":31,"column":83,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":31,"endColumn":86,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[842,845],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[842,845],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":94,"column":8,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":94,"endColumn":11,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3207,3210],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3207,3210],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":99,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":99,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3371,3374],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3371,3374],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/lib/db.ts\r\n\r\n2025-09-13T06:20:07.375Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: db.ts\r\nTama├▒o: 4101 caracteres, 122 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport postgres from \"postgres\";\r\n\r\n// Provide either a real Postgres client (postgres) or a lightweight\r\n// in-memory adapter used for local E2E when USE_IN_MEMORY_DB=1 is set.\r\nlet sql: any = null;\r\n\r\ndeclare global {\r\n  var __inMemorySqlAdapter: any | undefined;\r\n}\r\n\r\nfunction createInMemoryAdapter() {\r\n  const state = {\r\n    projects: [] as any[],\r\n    nextId: 1,\r\n  };\r\n\r\n  // sql should be callable as a template tag: sql`SELECT ...`\r\n  const adapter = async function sqlTag(strings: TemplateStringsArray, ...values: any[]) {\r\n    // Reconstruct a best-effort query string for routing decisions\r\n    let q = '';\r\n    for (let i = 0; i < strings.length; i++) {\r\n      q += strings[i];\r\n      if (i < values.length) {q += values[i];}\r\n    }\r\n    const nq = q.replace(/\\s+/g, ' ').trim().toLowerCase();\r\n\r\n    // SELECT all projects\r\n    if (nq.startsWith('select') && nq.includes('from projects')) {\r\n      // Return a shallow copy sorted by created_at desc\r\n      const rows = state.projects.slice().sort((a, b) => (b.created_at || 0) - (a.created_at || 0));\r\n      return rows;\r\n    }\r\n\r\n    // INSERT INTO projects (...) VALUES (${slug}, ${title}, ${description}, ${hero_image}) RETURNING ...\r\n    if (nq.includes('insert into projects')) {\r\n      // values = [slug, title, description, hero_image]\r\n      const [slug, title, description, hero_image] = values;\r\n      const now = Date.now();\r\n      const row = {\r\n        id: state.nextId++,\r\n        slug: slug ?? null,\r\n        title: title ?? null,\r\n        description: description ?? null,\r\n        hero_image: hero_image ?? null,\r\n        created_at: now,\r\n      };\r\n      state.projects.push(row);\r\n      return [row];\r\n    }\r\n\r\n    // UPDATE projects SET ... WHERE id = ${id} RETURNING ...\r\n    if (nq.includes('update projects set')) {\r\n      // Expect values = [slug, title, description, hero_image, id]\r\n      const id = values[values.length - 1];\r\n      const slug = values[0];\r\n      const title = values[1];\r\n      const description = values[2];\r\n      const hero_image = values[3];\r\n      const idx = state.projects.findIndex(p => p.id === Number(id));\r\n      if (idx === -1) {return [];}\r\n      const updated = Object.assign({}, state.projects[idx], {\r\n        slug: slug ?? state.projects[idx].slug,\r\n        title: title ?? state.projects[idx].title,\r\n        description: description ?? state.projects[idx].description,\r\n        hero_image: hero_image ?? state.projects[idx].hero_image,\r\n      });\r\n      state.projects[idx] = updated;\r\n      return [updated];\r\n    }\r\n\r\n    // DELETE FROM projects WHERE id = ${id}\r\n    if (nq.includes('delete from projects')) {\r\n      const id = values[0];\r\n      const idx = state.projects.findIndex(p => p.id === Number(id));\r\n      if (idx !== -1) {state.projects.splice(idx, 1);}\r\n      return { ok: true };\r\n    }\r\n\r\n    // Fallback: return empty\r\n    return [];\r\n  } as any;\r\n\r\n  adapter.end = async function () { /* no-op */ };\r\n  // Attach internal state for debugging/inspection when running in-memory DB\r\n  try {\r\n    (adapter as any).__state = state;\r\n  } catch (e) {\r\n    // ignore if read-only\r\n  }\r\n  return adapter;\r\n}\r\n\r\nexport function getDb() {\r\n  if (!sql) {\r\n    // If requested, use in-memory adapter (useful for local dev/E2E)\r\n    if (process.env.USE_IN_MEMORY_DB === '1' || process.env.USE_IN_MEMORY_DB === 'true') {\r\n      // Preserve adapter instance across HMR / module reloads in Next dev\r\n      if (typeof globalThis.__inMemorySqlAdapter !== 'undefined') {\r\n        sql = globalThis.__inMemorySqlAdapter;\r\n      } else {\r\n        sql = createInMemoryAdapter();\r\n        try { globalThis.__inMemorySqlAdapter = sql; } catch (e) { /* ignore */ }\r\n      }\r\n      return sql;\r\n    }\r\n\r\n    const dbUrl = process.env.SUPABASE_DB_URL || process.env.DATABASE_URL || process.env.POSTGRES_URL || process.env.cxz_POSTGRES_URL;\r\n    if (!dbUrl) {throw new Error(\"Database URL not configured. Set SUPABASE_DB_URL or DATABASE_URL.\");}\r\n    sql = postgres(dbUrl, { ssl: 'require' });\r\n  }\r\n  return sql;\r\n}\r\n\r\nexport async function closeDb() {\r\n  if (sql) {\r\n    if (typeof sql.end === 'function') {\r\n      await sql.end({ timeout: 5 }).catch(() => { /* ignore */ });\r\n    }\r\n    sql = null;\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\lib\\mdx.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\next-env.d.ts","messages":[{"ruleId":"@typescript-eslint/triple-slash-reference","severity":2,"message":"Do not use a triple slash reference for ./.next/types/routes.d.ts, use `import` style instead.","line":4,"column":1,"nodeType":"Line","messageId":"tripleSlashReference","endLine":4,"endColumn":51}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/// <reference types=\"next\" />\r\n/// <reference types=\"next/image-types/global\" />\r\n/// <reference types=\"next/navigation-types/compat/navigation\" />\r\n/// <reference path=\"./.next/types/routes.d.ts\" />\r\n\r\n// NOTE: This file should not be edited\r\n// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\pages\\_app.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\pages\\_document.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\postcss.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\db\\migrate-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\db\\seed-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\demo-crud.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\dev-no-contentlayer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\e2e-crud.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\run-intranet-e2e-simple.js","messages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'readySignal' is not modified in this loop.","line":36,"column":13,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":36,"endColumn":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { spawn } = require('child_process');\r\nconst { once } = require('events');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nasync function main() {\r\n    const nextBin = require.resolve('next/dist/bin/next');\r\n    const cwd = path.resolve(__dirname, '..');\r\n    const env = Object.assign({}, process.env, {\r\n        USE_IN_MEMORY_DB: process.env.USE_IN_MEMORY_DB || '1',\r\n        SKIP_CONTENTLAYER: process.env.SKIP_CONTENTLAYER || '1',\r\n        INTRANET_DEBUG_TOKEN: process.env.INTRANET_DEBUG_TOKEN || 'test-token-123',\r\n    });\r\n\r\n    console.log('Spawning next from', nextBin);\r\n    const child = spawn(process.execPath, [nextBin, 'dev', '-H', '127.0.0.1', '-p', '3000'], {\r\n        cwd,\r\n        env,\r\n        stdio: ['ignore', 'pipe', 'pipe'],\r\n    });\r\n\r\n    child.stdout.setEncoding('utf8');\r\n    child.stderr.setEncoding('utf8');\r\n\r\n    let readySignal = false;\r\n    child.stdout.on('data', (d) => {\r\n        process.stdout.write(`[next] ${  d}`);\r\n        if (!readySignal && /Ready/.test(d)) {readySignal = true;}\r\n    });\r\n    child.stderr.on('data', (d) => process.stderr.write(`[next-err] ${  d}`));\r\n\r\n    // wait for Ready (configurable via INTRANET_E2E_TIMEOUT ms)\r\n    const nextReadyTimeoutMs = parseInt(process.env.INTRANET_E2E_TIMEOUT || '40000', 10);\r\n    console.log('Waiting up to', nextReadyTimeoutMs, 'ms for Next dev Ready signal');\r\n    const start = Date.now();\r\n    while (!readySignal && Date.now() - start < nextReadyTimeoutMs) {\r\n        await new Promise((r) => setTimeout(r, 500));\r\n    }\r\n    if (!readySignal) {\r\n        console.error('Next did not signal Ready within timeout');\r\n        child.kill();\r\n        process.exit(2);\r\n    }\r\n\r\n    // poll readiness endpoint\r\n    // Number of seconds to poll readiness (INTRANET_E2E_POLL_MAX)\r\n    const maxPoll = parseInt(process.env.INTRANET_E2E_POLL_MAX || '60', 10);\r\n    let ok = false;\r\n    for (let i = 0; i < maxPoll; i++) {\r\n        try {\r\n            console.log('poll attempt', i + 1, 'of', maxPoll);\r\n            const r = await fetch('http://127.0.0.1:3000/api/_debug/ready');\r\n            console.log('ready status', r.status);\r\n            const txt = await r.text();\r\n            console.log('ready body', txt.substring(0, 2000));\r\n            if (r.ok) { ok = true; break; }\r\n        } catch (e) {\r\n            // ignore\r\n        }\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n\r\n    if (!ok) {\r\n        console.error('Readiness endpoint did not return ok');\r\n        child.kill();\r\n        process.exit(3);\r\n    }\r\n\r\n    // perform CRUD\r\n    try {\r\n        const slug = `e2e-${  Date.now()}`;\r\n        const payload = { slug, title: 'E2E simple test', description: 'auto', hero_image: '' };\r\n        const p = await fetch('http://127.0.0.1:3000/api/projects', {\r\n            method: 'POST', headers: { 'Content-Type': 'application/json', 'x-debug-token': env.INTRANET_DEBUG_TOKEN }, body: JSON.stringify(payload)\r\n        });\r\n        console.log('post status', p.status);\r\n        const created = await p.json().catch(() => null);\r\n        console.log('post body', created);\r\n        if (p.status !== 201 || !created || !created.id) {throw new Error('POST failed');}\r\n\r\n        const list = await fetch('http://127.0.0.1:3000/api/projects');\r\n        console.log('list status', list.status);\r\n        const items = await list.json().catch(() => []);\r\n        const found = (items || []).find((x) => x.slug === slug);\r\n        if (!found) {throw new Error('Created item not found in list');}\r\n\r\n        const del = await fetch(`http://127.0.0.1:3000/api/projects/${created.id}`, { method: 'DELETE' });\r\n        console.log('delete status', del.status);\r\n        if (!del.ok) {throw new Error('Delete failed');}\r\n\r\n        console.log('E2E simple flow succeeded');\r\n        child.kill();\r\n        await once(child, 'close');\r\n        process.exit(0);\r\n    } catch (e) {\r\n        console.error('E2E flow error', e);\r\n        child.kill();\r\n        await once(child, 'close');\r\n        process.exit(4);\r\n    }\r\n}\r\n\r\nmain().catch((e) => { console.error('script error', e); process.exit(1); });\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\run-intranet-e2e.js","messages":[{"ruleId":"no-unused-expressions","severity":2,"message":"Expected an assignment or function call and instead saw an expression.","line":96,"column":7,"nodeType":"ExpressionStatement","messageId":"unusedExpression","endLine":96,"endColumn":38},{"ruleId":"@typescript-eslint/no-unused-expressions","severity":2,"message":"Expected an assignment or function call and instead saw an expression.","line":96,"column":7,"nodeType":"ExpressionStatement","messageId":"unusedExpression","endLine":96,"endColumn":38},{"ruleId":"no-const-assign","severity":2,"message":"'dev' is constant.","line":98,"column":7,"nodeType":"Identifier","messageId":"const","endLine":98,"endColumn":10}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/scripts/run-intranet-e2e.js\r\n\r\n2025-09-13T06:20:07.377Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: run-intranet-e2e.js\r\nTama├▒o: 4021 caracteres, 103 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// (Shebang removed; script executed via `node` to avoid TS 18026 warning when analyzed)\r\nconst { spawn } = require('child_process');\r\nconst path = require('path');\r\n// Use global fetch (Node 18+/22). If not available, throw a helpful error.\r\nif (typeof fetch !== 'function') {\r\n  throw new Error('Global fetch is not available in this Node runtime. Please use Node 18+ or install a fetch polyfill.');\r\n}\r\n\r\nasync function waitForServer(base='http://127.0.0.1:3000', timeoutMs=60000) {\r\n  const start = Date.now();\r\n  let attempt = 0;\r\n  while (Date.now() - start < timeoutMs) {\r\n    attempt++;\r\n    try {\r\n      const res = await fetch(`${base}/api/projects`);\r\n      if (res.ok) {\r\n        console.log('server ready after', attempt, 'attempts');\r\n        return true;\r\n      }\r\n      console.log('waitForServer: got', res.status);\r\n    } catch (e) {\r\n      if (attempt % 5 === 0) {console.log('waitForServer attempt', attempt, 'failed', e && e.message);}\r\n    }\r\n    await new Promise(r => setTimeout(r, 500));\r\n  }\r\n  throw new Error('Server did not respond within timeout');\r\n}\r\n\r\n(async () => {\r\n  const cwd = path.resolve(__dirname, '..');\r\n  console.log('Starting Next dev in', cwd);\r\n  const env = Object.assign({}, process.env, { CONTENTLAYER_SKIP_TYPEGEN: '1', CONTENTLAYER_HIDE_WARNING: '1', SKIP_CONTENTLAYER: '1' });\r\n  // Ensure the runner picks up the same PORT (default 3000) so e2e-crud targets the correct base URL\r\n  env.PORT = env.PORT || '3000';\r\n\r\n  // If a .env.local exists in the repo root, load and merge it so child processes inherit DB params.\r\n  try {\r\n    const fs = require('fs');\r\n    const dotenv = require('dotenv');\r\n    const repoRootEnv = require('path').join(cwd, '..', '.env.local');\r\n    if (fs.existsSync(repoRootEnv)) {\r\n      const parsed = dotenv.parse(fs.readFileSync(repoRootEnv));\r\n      for (const k of Object.keys(parsed)) {\r\n        if (typeof env[k] === 'undefined') {env[k] = parsed[k];}\r\n      }\r\n      console.log('Merged vars from .env.local into orchestrator env');\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load .env.local:', e && e.message ? e.message : e);\r\n  }\r\n\r\n  // If a real DB URL is present, prefer it; otherwise enable in-memory DB for local E2E.\r\n  const hasDbUrl = env.SUPABASE_DB_URL || env.DATABASE_URL || env.POSTGRES_URL;\r\n  if (!hasDbUrl) {\r\n    env.USE_IN_MEMORY_DB = env.USE_IN_MEMORY_DB || '1';\r\n  } else {\r\n    console.log('Database URL detected in environment; running against real DB');\r\n  }\r\n  const dev = spawn('pnpm', ['dev'], { cwd, stdio: 'inherit', env });\r\n\r\n  // wait for server (fast check first: 10s)\r\n  try {\r\n  await waitForServer('http://127.0.0.1:3000', 15000);\r\n  } catch (e) {\r\n    console.warn('Initial wait failed:', e && e.message, '- attempting recovery');\r\n    try { dev.kill('SIGINT'); } catch (er) {}\r\n    // remove .next to force fresh build\r\n    const fs = require('fs');\r\n    const nextDir = require('path').join(cwd, '.next');\r\n    try {\r\n      if (fs.existsSync(nextDir)) {\r\n        console.log('Removing .next to recover build...');\r\n        fs.rmSync(nextDir, { recursive: true, force: true });\r\n      }\r\n    } catch (rmErr) { console.warn('Failed to remove .next', rmErr && rmErr.message); }\r\n\r\n    // restart dev and wait longer\r\n    console.log('Restarting dev server and waiting up to 60s...');\r\n    const dev2 = spawn('pnpm', ['dev'], { cwd, stdio: 'inherit', env });\r\n    try {\r\n      await waitForServer('http://127.0.0.1:3000', 60000);\r\n      // replace dev handle for shutdown later\r\n      dev.kill && dev.kill('SIGINT');\r\n      // use dev2 for shutdown\r\n      dev = dev2;  \r\n    } catch (e2) {\r\n      console.error('Recovery failed:', e2 && e2.message);\r\n      try { dev2.kill('SIGINT'); } catch (er) {}\r\n      process.exit(1);\r\n    }\r\n  }\r\n\r\n  // run e2e\r\n  console.log('Running E2E script...');\r\n  const runner = spawn(process.execPath, [path.join(cwd, 'scripts', 'e2e-crud.js')], { cwd, stdio: 'inherit', env });\r\n  runner.on('close', (code) => {\r\n    console.log('E2E script finished with code', code);\r\n    // shutdown dev\r\n    try { dev.kill('SIGINT'); } catch (e) {}\r\n    process.exit(code === 0 ? 0 : 1);\r\n  });\r\n})();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\spawn-next-and-test.js","messages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'ready' is not modified in this loop.","line":33,"column":13,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":33,"endColumn":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { spawn } = require('child_process');\r\nconst { once } = require('events');\r\n\r\nasync function main() {\r\n  try {\r\n    const nextBin = require.resolve('next/dist/bin/next');\r\n    const env = Object.assign({}, process.env, {\r\n      USE_IN_MEMORY_DB: '1',\r\n      INTRANET_DEBUG_TOKEN: 'test-token-123',\r\n      SKIP_CONTENTLAYER: '1',\r\n    });\r\n\r\n    console.log('Spawning next from', nextBin);\r\n    const child = spawn(process.execPath, [nextBin, 'dev', '-H', '127.0.0.1', '-p', '3000'], {\r\n      env,\r\n      stdio: ['ignore', 'pipe', 'pipe'],\r\n    });\r\n\r\n    child.stdout.setEncoding('utf8');\r\n    child.stderr.setEncoding('utf8');\r\n\r\n    let ready = false;\r\n    child.stdout.on('data', (d) => {\r\n      process.stdout.write(`[next] ${  d}`);\r\n      if (!ready && /Ready/.test(d)) {\r\n        ready = true;\r\n      }\r\n    });\r\n    child.stderr.on('data', (d) => process.stderr.write(`[next-err] ${  d}`));\r\n\r\n    // Wait up to 40s for Ready\r\n    const start = Date.now();\r\n    while (!ready && Date.now() - start < 40000) {\r\n      await new Promise((r) => setTimeout(r, 500));\r\n    }\r\n\r\n    if (!ready) {\r\n      console.error('Next did not signal Ready within timeout');\r\n      child.kill();\r\n      process.exit(2);\r\n    }\r\n\r\n    // perform requests\r\n    try {\r\n      const r = await fetch('http://127.0.0.1:3000/api/_debug/ready');\r\n      console.log('ready status', r.status);\r\n      console.log('ready body', await r.text());\r\n    } catch (e) {\r\n      console.error('GET /api/_debug/ready failed', e);\r\n    }\r\n\r\n    try {\r\n      const payload = { slug: `spawn-test-${  Date.now()}`, title: 'Spawn test' };\r\n      const p = await fetch('http://127.0.0.1:3000/api/projects', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'x-debug-token': 'test-token-123' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      console.log('post status', p.status);\r\n      try { console.log('post body', await p.text()); } catch(e){}\r\n    } catch (e) {\r\n      console.error('POST /api/projects failed', e);\r\n    }\r\n\r\n    // kill next child\r\n    child.kill();\r\n    await once(child, 'close');\r\n    process.exit(0);\r\n  } catch (err) {\r\n    console.error('script error', err);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nmain();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\start-next-dev.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\ui-e2e-runner.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\test-fetch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\jest.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\blog-data.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-posts.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":116,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":116,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3317,3320],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3317,3320],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3358,3361],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3358,3361],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":49,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":52,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3371,3374],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3371,3374],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":57,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":60,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3379,3382],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3379,3382],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":118,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":118,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3423,3426],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3423,3426],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":119,"column":12,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":119,"endColumn":15,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3439,3442],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3439,3442],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":127,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":127,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3583,3586],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3583,3586],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":128,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":128,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3680,3683],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3680,3683],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":137,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":137,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3879,3882],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3879,3882],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":157,"column":44,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":157,"endColumn":47,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4504,4507],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4504,4507],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":188,"column":21,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":188,"endColumn":24,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5489,5492],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5489,5492],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":202,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":202,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5987,5990],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5987,5990],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":221,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":221,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6556,6559],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6556,6559],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nlib/db-posts.ts\r\n\r\n2025-09-13T06:20:07.379Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: db-posts.ts\r\nTama├▒o: 8477 caracteres, 273 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { db } from '../db/client';\r\nimport { posts } from '../db/schema';\r\nimport { and, asc, count, desc, eq, ilike, or, SQL } from 'drizzle-orm';\r\nimport { allBlogs, type Blog } from 'contentlayer/generated';\r\n\r\nexport type PostRow = {\r\n  id: number;\r\n  slug: string;\r\n  title: string;\r\n  description: string | null;\r\n  content: string;\r\n  category: string | null;\r\n  image: string | null;\r\n  date: Date;\r\n  published: boolean;\r\n};\r\n\r\nconst hasDb = () => Boolean(process.env.POSTGRES_URL || process.env.POSTGRES_URL_NON_POOLING || process.env.DATABASE_URL);\r\n\r\nexport async function getAllPostsFromDb(): Promise<PostRow[]> {\r\n  if (!hasDb()) {return [];}\r\n  try {\r\n    const rows = await db\r\n      .select({\r\n        id: posts.id,\r\n        slug: posts.slug,\r\n        title: posts.title,\r\n        description: posts.description,\r\n        content: posts.content,\r\n        category: posts.category,\r\n        image: posts.image,\r\n        date: posts.date,\r\n        published: posts.published,\r\n      })\r\n      .from(posts)\r\n      .orderBy(desc(posts.date));\r\n\r\n    // Drizzle may return date as Date\r\n    return rows as unknown as PostRow[];\r\n  } catch (e) {\r\n    console.error('DB getAllPostsFromDb error', e);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function getPostBySlugFromDb(slug: string): Promise<PostRow | null> {\r\n  if (!hasDb()) {return null;}\r\n  try {\r\n    const [row] = await db\r\n      .select({\r\n        id: posts.id,\r\n        slug: posts.slug,\r\n        title: posts.title,\r\n        description: posts.description,\r\n        content: posts.content,\r\n        category: posts.category,\r\n        image: posts.image,\r\n        date: posts.date,\r\n        published: posts.published,\r\n      })\r\n      .from(posts)\r\n      .where(eq(posts.slug, slug))\r\n      .limit(1);\r\n    return (row as unknown as PostRow) || null;\r\n  } catch (e) {\r\n    console.error('DB getPostBySlugFromDb error', e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getAllSlugsFromDb(): Promise<string[]> {\r\n  if (!hasDb()) {return [];}\r\n  try {\r\n    const rows = await db.select({ slug: posts.slug }).from(posts);\r\n    return rows.map((r) => r.slug);\r\n  } catch (e) {\r\n    console.error('DB getAllSlugsFromDb error', e);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport type PostsPageParams = {\r\n  page?: number;\r\n  pageSize?: number;\r\n  category?: string | null;\r\n  q?: string | null;\r\n  sortBy?: 'date' | 'title';\r\n  sortDir?: 'asc' | 'desc';\r\n};\r\n\r\nexport async function getPostsPageFromDb(\r\n  { page = 1, pageSize = 9, category, q, sortBy = 'date', sortDir = 'desc' }: PostsPageParams\r\n): Promise<{ items: PostRow[]; total: number; page: number; pageSize: number }> {\r\n  if (!hasDb()) {return { items: [], total: 0, page, pageSize };}\r\n  const offset = Math.max(0, (page - 1) * pageSize);\r\n\r\n  const conds: SQL[] = [];\r\n  if (category && category !== 'Todas') {conds.push(eq(posts.category, category));}\r\n  if (q && q.trim().length > 0) {\r\n    const like = `%${q.trim()}%`;\r\n    conds.push(\r\n      or(\r\n        ilike(posts.title, like) as any,\r\n        ilike(posts.description as any, like as any) as any,\r\n        ilike(posts.content, like) as any\r\n      ) as any\r\n    );\r\n  }\r\n  const where = conds.length > 0 ? and(...conds) : undefined;\r\n\r\n  // total count\r\n  let total = 0;\r\n  try {\r\n    let countQ: any = db.select({ value: count() }).from(posts);\r\n    if (where) {countQ = countQ.where(where as any);}\r\n    const countRows = await countQ;\r\n    total = Number(countRows?.[0]?.value ?? 0);\r\n  } catch (e) {\r\n    console.error('DB count error', e);\r\n  }\r\n\r\n  // page items\r\n  try {\r\n    let qsel: any = db\r\n      .select({\r\n        id: posts.id,\r\n        slug: posts.slug,\r\n        title: posts.title,\r\n        description: posts.description,\r\n        content: posts.content,\r\n        category: posts.category,\r\n        image: posts.image,\r\n        date: posts.date,\r\n        published: posts.published,\r\n      })\r\n      .from(posts)\r\n      .orderBy(\r\n        sortBy === 'title'\r\n          ? (sortDir === 'asc' ? asc(posts.title) : desc(posts.title))\r\n          : (sortDir === 'asc' ? asc(posts.date) : desc(posts.date))\r\n      )\r\n      .limit(pageSize)\r\n      .offset(offset);\r\n    if (where) {qsel = qsel.where(where as any);}\r\n    const rows = await qsel;\r\n    return { items: rows as unknown as PostRow[], total, page, pageSize };\r\n  } catch (e) {\r\n    console.error('DB page error', e);\r\n    return { items: [], total, page, pageSize };\r\n  }\r\n}\r\n\r\nexport async function getDistinctCategoriesFromDb(): Promise<string[]> {\r\n  if (!hasDb()) {return [];}\r\n  try {\r\n    // group by to get distinct categories\r\n    const rows = await db.select({ category: posts.category }).from(posts).groupBy(posts.category);\r\n    return rows.map((r) => r.category).filter((x): x is string => !!x);\r\n  } catch (e) {\r\n    console.error('DB categories error', e);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Fallbacks using Contentlayer (for local/dev without DB)\r\nconst normalizeSlug = (s: string) =>\r\n  String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n\r\nconst canonicalSlugFor = (p: Blog): string => {\r\n  const raw = (p as any)?._raw?.flattenedPath as string | undefined;\r\n  const base = p.slug || (raw ? (raw.split('/').pop() || raw) : p.title);\r\n  return normalizeSlug(base);\r\n};\r\n\r\nexport async function getAllPosts(): Promise<PostRow[]> {\r\n  const dbRows = await getAllPostsFromDb();\r\n  if (dbRows.length > 0) {return dbRows;}\r\n  // Fallback to Contentlayer\r\n  return allBlogs.map((p) => ({\r\n    id: 0,\r\n    slug: canonicalSlugFor(p),\r\n    title: p.title,\r\n    description: p.description ?? null,\r\n    content: (p as any)?.body?.raw ?? '',\r\n    category: p.category ?? null,\r\n    image: p.image ?? null,\r\n    date: new Date(p.date),\r\n    published: true,\r\n  }));\r\n}\r\n\r\nexport async function getPostBySlug(slug: string): Promise<PostRow | null> {\r\n  const norm = normalizeSlug(slug);\r\n  const row = await getPostBySlugFromDb(norm);\r\n  if (row) {return row;}\r\n  const p = allBlogs.find((x) => canonicalSlugFor(x) === norm);\r\n  if (!p) {return null;}\r\n  return {\r\n    id: 0,\r\n    slug: canonicalSlugFor(p),\r\n    title: p.title,\r\n    description: p.description ?? null,\r\n    content: (p as any)?.body?.raw ?? '',\r\n    category: p.category ?? null,\r\n    image: p.image ?? null,\r\n    date: new Date(p.date),\r\n    published: true,\r\n  };\r\n}\r\n\r\nexport async function getAllSlugs(): Promise<string[]> {\r\n  const slugs = await getAllSlugsFromDb();\r\n  if (slugs.length > 0) {return slugs.map(normalizeSlug);}\r\n  return allBlogs.map((p) => canonicalSlugFor(p));\r\n}\r\n\r\nexport async function getPostsPage(params: PostsPageParams): Promise<{ items: PostRow[]; total: number; page: number; pageSize: number }>{\r\n  const dbResult = await getPostsPageFromDb(params);\r\n  // If DB has items and is configured, prefer DB results.\r\n  if (hasDb() && dbResult.items.length > 0) {\r\n    return dbResult;\r\n  }\r\n\r\n  // Otherwise, try to fallback to Contentlayer (local MDX files).\r\n  // Load all posts once and use them for pagination below.\r\n  const all = await getAllPosts();\r\n  // If Contentlayer doesn't have posts either, return the DB result (empty)\r\n  // so callers keep the same shape.\r\n  if (!all || all.length === 0) {\r\n    return dbResult;\r\n  }\r\n  const category = params.category && params.category !== 'Todas' ? params.category : undefined;\r\n  const q = params.q?.trim();\r\n  let filtered = all;\r\n  if (category) {filtered = filtered.filter((p) => (p.category || '').toLowerCase() === category.toLowerCase());}\r\n  if (q && q.length > 0) {\r\n    const needle = q.toLowerCase();\r\n    filtered = filtered.filter(\r\n      (p) => p.title.toLowerCase().includes(needle) || (p.description || '').toLowerCase().includes(needle) || (p.content || '').toLowerCase().includes(needle)\r\n    );\r\n  }\r\n  const sortBy = params.sortBy || 'date';\r\n  const sortDir = params.sortDir || 'desc';\r\n  filtered = filtered.sort((a, b) => {\r\n    if (sortBy === 'title') {\r\n      const cmp = a.title.localeCompare(b.title);\r\n      return sortDir === 'asc' ? cmp : -cmp;\r\n    }\r\n    const cmp = a.date.getTime() - b.date.getTime();\r\n    return sortDir === 'asc' ? cmp : -cmp;\r\n  });\r\n  const page = params.page || 1;\r\n  const pageSize = params.pageSize || 9;\r\n  const start = (page - 1) * pageSize;\r\n  const items = filtered.slice(start, start + pageSize);\r\n  return { items, total: filtered.length, page, pageSize };\r\n}\r\n\r\nexport async function getDistinctCategories(): Promise<string[]> {\r\n  const cats = await getDistinctCategoriesFromDb();\r\n  if (cats.length > 0 || hasDb()) {return cats;}\r\n  const set = new Set<string>();\r\n  for (const p of allBlogs) {\r\n    if (p.category) {set.add(p.category);}\r\n  }\r\n  return Array.from(set);\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-projects.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-services.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-services.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-streams.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-streams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-utils.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'db' is defined but never used.","line":14,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":12},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":49,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":49,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1583,1586],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1583,1586],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":49,"column":63,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":49,"endColumn":66,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1609,1612],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1609,1612],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":50,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":50,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1682,1685],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1682,1685],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":50,"column":66,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":50,"endColumn":69,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1705,1708],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1705,1708],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nlib/db-utils.ts\r\n\r\n2025-09-13T06:20:07.380Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: db-utils.ts\r\nTama├▒o: 1932 caracteres, 50 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { db } from '../db/client';\r\n\r\n// Detecta si hay configuraci├│n de base de datos disponible en el entorno.\r\n// Soporta nombres est├índar y tambi├®n los prefijos `cxz_` usados en .env local.\r\nexport const hasDb = () => {\r\n  // In development, avoid attempting DB connections unless explicitly enabled.\r\n  // Set ENABLE_DB_IN_DEV=1 or FORCE_DB_CONNECT=1 to override in local dev.\r\n  const isProd = process.env.NODE_ENV === 'production' || process.env.VERCEL === '1' || Boolean(process.env.VERCEL_ENV);\r\n  if (!isProd && process.env.ENABLE_DB_IN_DEV !== '1' && process.env.FORCE_DB_CONNECT !== '1') {\r\n    return false;\r\n  }\r\n\r\n  return Boolean(\r\n    process.env.SUPABASE_DB_URL ||\r\n    process.env.POSTGRES_URL ||\r\n    process.env.POSTGRES_URL_NON_POOLING ||\r\n    process.env.DATABASE_URL ||\r\n    process.env.cxz_POSTGRES_URL ||\r\n    process.env.cxz_POSTGRES_PRISMA_URL ||\r\n    process.env.cxz_POSTGRES_URL_NON_POOLING\r\n  );\r\n};\r\n\r\nexport async function withDb<T>(\r\n  operation: () => Promise<T>,\r\n  fallback: T\r\n): Promise<T> {\r\n  if (!hasDb()) {\r\n    return fallback;\r\n  }\r\n  \r\n  try {\r\n    return await operation();\r\n  } catch (error) {\r\n    // Si es un error de red com├║n (host no resuelto, DNS, etc.), emitir un warning conciso.\r\n    const msg = (error && (error as any).message) ? (error as any).message : String(error);\r\n    const causeCode = (error && (error as any).code) ? (error as any).code : undefined;\r\n    const isNetworkError = /getaddrinfo|ENOTFOUND|EAI_AGAIN/i.test(msg) || causeCode === 'ENOTFOUND';\r\n    if (isNetworkError) {\r\n       \r\n      console.warn('Database unavailable (network error). Falling back to contentlayer. Message:', msg);\r\n    } else {\r\n      // Para otros errores, imprimir un mensaje m├ís corto pero sin el stack completo.\r\n       \r\n      console.warn('Database operation failed, falling back to contentlayer. Message:', msg);\r\n    }\r\n    return fallback;\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\middleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\next-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\next.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\probe-inline.js","messages":[{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":1,"column":12,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":1,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":19},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":2,"column":18,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":2,"endColumn":37},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":3,"column":216,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":217},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":13,"column":3,"nodeType":"MemberExpression","messageId":"limited","endLine":13,"endColumn":14,"suggestions":[{"fix":{"range":[1086,1119],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":15,"column":44,"nodeType":"MemberExpression","messageId":"limited","endLine":15,"endColumn":55,"suggestions":[{"fix":{"range":[1231,1261],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":15,"column":100,"nodeType":"MemberExpression","messageId":"limited","endLine":15,"endColumn":111,"suggestions":[{"fix":{"range":[1287,1321],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":15,"column":160,"nodeType":"BlockStatement","messageId":"unexpected","endLine":15,"endColumn":162,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1348,1348],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst postgres = require('postgres');\nfunction mask(u){try{ const s = u.split('@'); if(s.length>1){ const left = s[0]; const parts = left.split('//'); const creds = parts[1].split(':'); return `${parts[0]}//${creds[0]}:*****@${s[1]}`; } return u }catch(e){return u}}\nconst raw = fs.readFileSync('.env','utf8');\nconst env = Object.fromEntries(raw.split(/\\r?\\n/).map(l => l.split('=').filter(Boolean)).map(a => [a[0],a.slice(1).join('=').replace(/^\"|\"$/g,'')]));\nconst cand = [];\nif(env.cxz_POSTGRES_URL_NON_POOLING) {cand.push(['cxz_POSTGRES_URL_NON_POOLING',env.cxz_POSTGRES_URL_NON_POOLING]);}\nif(env.cxz_POSTGRES_PRISMA_URL) {cand.push(['cxz_POSTGRES_PRISMA_URL',env.cxz_POSTGRES_PRISMA_URL]);}\nif(env.cxz_POSTGRES_URL) {cand.push(['cxz_POSTGRES_URL',env.cxz_POSTGRES_URL]);}\nif(env.cxz_POSTGRES_HOST && env.cxz_POSTGRES_PASSWORD && env.cxz_POSTGRES_DATABASE) {cand.push(['built',`postgres://postgres:${env.cxz_POSTGRES_PASSWORD}@${env.cxz_POSTGRES_HOST}:5432/${env.cxz_POSTGRES_DATABASE}?sslmode=require`]);}\n(async() => {\n for(const [name,url] of cand){\n  console.log('->',name,mask(url));\n  const sql = postgres(url,{ssl:{rejectUnauthorized:false},max:1});\n  try{const r = await sql`SELECT 1 as ok`; console.log('  success',r[0]); await sql.end()}catch(e){console.log('  failed',e.message); try{await sql.end()}catch{}}\n }\n})();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\probe2-inline.js","messages":[{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":1,"column":12,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":1,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":19},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":2,"column":18,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":2,"endColumn":37},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":3,"column":216,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":217},{"ruleId":"no-undef","severity":2,"message":"'URL' is not defined.","line":9,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":49},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":9,"column":81,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":82},{"ruleId":"no-undef","severity":2,"message":"'URL' is not defined.","line":15,"column":173,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":176},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":15,"column":208,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":209},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":21,"column":1,"nodeType":"MemberExpression","messageId":"limited","endLine":21,"endColumn":12,"suggestions":[{"fix":{"range":[1388,1424],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":22,"column":24,"nodeType":"MemberExpression","messageId":"limited","endLine":22,"endColumn":35,"suggestions":[{"fix":{"range":[1448,1471],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":23,"column":28,"nodeType":"MemberExpression","messageId":"limited","endLine":23,"endColumn":39,"suggestions":[{"fix":{"range":[1500,1523],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":24,"column":1,"nodeType":"MemberExpression","messageId":"limited","endLine":24,"endColumn":12},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":31,"column":9,"nodeType":"MemberExpression","messageId":"limited","endLine":31,"endColumn":20,"suggestions":[{"fix":{"range":[1779,1810],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":35,"column":11,"nodeType":"MemberExpression","messageId":"limited","endLine":35,"endColumn":22,"suggestions":[{"fix":{"range":[1955,1986],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":38,"column":11,"nodeType":"MemberExpression","messageId":"limited","endLine":38,"endColumn":22,"suggestions":[{"fix":{"range":[2043,2099],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":39,"column":39,"nodeType":"BlockStatement","messageId":"unexpected","endLine":39,"endColumn":41,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2139,2139],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst postgres = require('postgres');\nfunction mask(u){try{ const s = u.split('@'); if(s.length>1){ const left = s[0]; const parts = left.split('//'); const creds = parts[1].split(':'); return `${parts[0]}//${creds[0]}:*****@${s[1]}`; } return u }catch(e){return u}}\nconst raw = fs.readFileSync('.env','utf8');\nconst env = Object.fromEntries(raw.split(/\\r?\\n/).map(l => l.split('=').filter(Boolean)).map(a => [a[0],a.slice(1).join('=').replace(/^\"|\"$/g,'')]));\n\nconst poolerHost = (() => {\n  const u = env.cxz_POSTGRES_URL_NON_POOLING || env.cxz_POSTGRES_PRISMA_URL || env.cxz_POSTGRES_URL;\n  if(!u) {return null;} try{ const url = new URL(u); return url.hostname }catch(e){ const m = u.match(/@([^:]+):/); return m?m[1]:null }\n})();\nconst directHost = env.cxz_POSTGRES_HOST || null;\nconst password = env.cxz_POSTGRES_PASSWORD || '';\nconst database = env.cxz_POSTGRES_DATABASE || 'postgres';\n\nconst originalUser = (() => { const u = env.cxz_POSTGRES_URL_NON_POOLING || env.cxz_POSTGRES_PRISMA_URL || env.cxz_POSTGRES_URL; if(!u) {return null;} try{ const url = new URL(u); return url.username }catch(e){ const m = u.match(/postgres:\\/\\/([^:]+):/); return m?m[1]:null }} )();\n\nconst usernames = Array.from(new Set([originalUser,'postgres'].filter(Boolean)));\nconst hosts = Array.from(new Set([poolerHost,directHost].filter(Boolean)));\nconst ports = [5432,6543];\n\nconsole.log('Trying combinations:');\nfor(const h of hosts) {console.log(' host',h);}\nfor(const u of usernames) {console.log(' user',u);}\nconsole.log(' ports',ports.join(','));\n\n(async() => {\n  for(const host of hosts){\n    for(const port of ports){\n      for(const user of usernames){\n        const url = `postgres://${user}:${password}@${host}:${port}/${database}?sslmode=require`;\n        console.log('\\n->', mask(url));\n        const sql = postgres(url,{ssl:{rejectUnauthorized:false},max:1});\n        try{\n          const r = await sql`SELECT 1 as ok`;\n          console.log('  success', r[0]);\n          await sql.end();\n        }catch(e){\n          console.log('  failed', e && e.message ? e.message : e);\n          try{ await sql.end(); }catch{}\n        }\n      }\n    }\n  }\n})();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\router\\route.router.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'z' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'publicProcedure' is defined but never used.","line":6,"column":2,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":17}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { z } from 'zod';\r\n\r\nimport {\r\n\tcreateTRPCRouter,\r\n\t// protectedProcedure,\r\n\tpublicProcedure,\r\n} from '~/server/api/trpc';\r\n\r\nexport const routeRouter = createTRPCRouter({\r\n\t// prefix: t.procedure.input(callable).query(async (args) => handler(args)),\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\check-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\clean_contentlayer.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\clean_contentlayer.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nscripts/clean_contentlayer.js\r\n\r\n2025-09-13T06:20:07.384Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: clean_contentlayer.js\r\nTama├▒o: 567 caracteres, 25 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n// Remove stale Contentlayer artifacts to avoid stale indexes during builds.\r\n// This is safe on Vercel and local. Ignore errors if the folder doesn't exist.\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst targets = [\r\n  path.resolve('.contentlayer'),\r\n];\r\n\r\nfor (const p of targets) {\r\n  try {\r\n    if (fs.existsSync(p)) {\r\n      fs.rmSync(p, { recursive: true, force: true });\r\n      console.log(`[clean] removed ${p}`);\r\n    }\r\n  } catch (e) {\r\n    console.warn(`[clean] failed to remove ${p}: ${e && e.message}`);\r\n  }\r\n}\r\n\r\nprocess.exit(0);\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\check-version.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[535,538],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[535,538],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nscripts/db/check-version.ts\r\n\r\n2025-09-13T06:20:07.384Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: check-version.ts\r\nTama├▒o: 642 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// scripts/db/check-version.ts\r\n// Small helper to check DB connectivity and version via exported client\r\n(async () => {\r\n  try {\r\n    const mod = await import('../../db/client')\r\n    const exported = (mod as any).default ?? mod\r\n    const {sql} = exported\r\n    if (typeof sql !== 'function') {\r\n      console.error('El cliente sql exportado no es una funci├│n. exports:', Object.keys(exported))\r\n      process.exit(2)\r\n    }\r\n\r\n    const res = await sql`select version()`\r\n    console.log('pg version:', res[0].version)\r\n    await sql.end()\r\n  } catch (err) {\r\n    console.error('Error comprobando versi├│n de Postgres:', err)\r\n    process.exit(1)\r\n  }\r\n})()\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-neon.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-production.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-simple.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\ping-neon.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-comments.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-from-mdx.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-services.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-streams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\dependency-monitor.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\fix_blog_frontmatter_strict.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nscripts/fix_blog_frontmatter_strict.js\r\n\r\n2025-09-13T06:20:07.385Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: fix_blog_frontmatter_strict.js\r\nTama├▒o: 3765 caracteres, 122 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n/*\r\n * Normalize MDX front matter strictly and separate body correctly.\r\n * - Keeps only known keys for Blog docs.\r\n * - Stops front matter at the first non `key: value` line.\r\n * - Removes stray closing `---` at EOF if present.\r\n * - Normalizes `slug` and, if needed, renames file to match.\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst BLOG_KEYS = new Set(['title', 'date', 'description', 'slug', 'category', 'image', 'schema']);\r\n\r\nfunction normalizeSlug(s) {\r\n  return String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\nfunction fixFile(fp) {\r\n  const raw = fs.readFileSync(fp, 'utf8');\r\n  const lines = raw.replace(/\\r\\n?/g, '\\n').split('\\n');\r\n  let i = 0;\r\n  const fm = {};\r\n  let bodyStart = 0;\r\n\r\n  // If starts with '---', parse front matter header lines\r\n  if (lines[0] && lines[0].trim() === '---') {\r\n    i = 1;\r\n    for (; i < lines.length; i++) {\r\n      const line = lines[i];\r\n      const trimmed = line.trim();\r\n      if (trimmed === '---') { // found explicit closing\r\n        i++;\r\n        break;\r\n      }\r\n      const idx = line.indexOf(':');\r\n      if (idx <= 0) { // not a key: value => body starts here\r\n        break;\r\n      }\r\n      const key = line.slice(0, idx).trim();\r\n      let val = line.slice(idx + 1).trim();\r\n      if (!BLOG_KEYS.has(key)) {\r\n        // Encountered a key we don't care about; still allow it but only if simple\r\n        if (!/^[^:]+: *.+$/.test(line)) { break; }\r\n      }\r\n      if ((val.startsWith('\"') && val.endsWith('\"')) || (val.startsWith(\"'\") && val.endsWith(\"'\"))) {\r\n        val = val.slice(1, -1);\r\n      }\r\n      fm[key] = val;\r\n    }\r\n    bodyStart = i;\r\n  }\r\n\r\n  // Body is the rest of the file from bodyStart\r\n  let body = lines.slice(bodyStart).join('\\n');\r\n  // Remove a trailing standalone '---' at the end if present\r\n  body = body.replace(/\\n?-{3}\\s*$/,'').trimStart();\r\n\r\n  // Compute slug\r\n  const baseName = path.basename(fp, '.mdx');\r\n  const slugSource = fm.slug || fm.title || baseName;\r\n  const normalizedSlug = normalizeSlug(slugSource);\r\n  fm.slug = normalizedSlug;\r\n\r\n  // Rebuild content\r\n  const fmOut = ['---'];\r\n  const keys = ['title', 'description', 'date', 'slug', 'category', 'image'];\r\n  for (const key of keys) {\r\n    const v = fm[key];\r\n    if (v === null || v === undefined || String(v).length === 0) {continue;}\r\n    let outVal = String(v);\r\n    // Quote all string values to avoid YAML parse errors with ':' and unicode\r\n    if (key === 'date') {\r\n      // keep ISO date as-is\r\n      // No necesitamos reasignar el valor\r\n    } else {\r\n      // escape existing quotes\r\n      outVal = `\"${  outVal.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')  }\"`;\r\n    }\r\n    fmOut.push(`${key}: ${outVal}`);\r\n  }\r\n  fmOut.push('---', '');\r\n  const out = fmOut.join('\\n') + body.replace(/^\\n+/, '');\r\n\r\n  if (out !== raw) {\r\n    fs.writeFileSync(fp, out, 'utf8');\r\n    console.log(`[fix] rewrote ${fp}`);\r\n  }\r\n\r\n  // Rename if needed\r\n  const newPath = path.join(path.dirname(fp), `${normalizedSlug  }.mdx`);\r\n  if (newPath !== fp) {\r\n    if (!fs.existsSync(newPath)) {\r\n      fs.renameSync(fp, newPath);\r\n      console.log(`[fix] renamed ${fp} -> ${newPath}`);\r\n      return newPath;\r\n    } else {\r\n      console.warn(`[fix] target exists, skip rename: ${newPath}`);\r\n    }\r\n  }\r\n  return fp;\r\n}\r\n\r\nfunction run(dir) {\r\n  const root = path.resolve(dir);\r\n  const files = fs.readdirSync(root).filter(f => f.endsWith('.mdx')).map(f => path.join(root, f));\r\n  let changed = 0;\r\n  for (const fp of files) {\r\n    const newFp = fixFile(fp);\r\n    if (newFp !== fp) {changed++;}\r\n  }\r\n  console.log(`[fix] done. processed ${files.length} file(s).`);\r\n}\r\n\r\nconst target = process.argv[2] || path.join(process.cwd(), 'content', 'blog');\r\nrun(target);\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\fix_text_encoding.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\generate_missing_images_runner.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\generate_missing_images_runner.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: '#!' can only be used at the start of a file.","line":14,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nscripts/generate_missing_images_runner.js\r\n\r\n2025-09-13T06:20:07.386Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: generate_missing_images_runner.js\r\nTama├▒o: 7314 caracteres, 203 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n#!/usr/bin/env node\r\n// Lightweight wrapper to run the Python placeholder generator when available.\r\n// On environments without Python (e.g., Vercel build), it logs a warning and exits 0.\r\n\r\nconst { spawnSync } = require('child_process');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nconst isVercel = process.env.VERCEL === '1' || process.env.VERCEL_ENV;\r\nconst repoRoot = __dirname ? path.resolve(__dirname, '..') : process.cwd();\r\nconst scriptPath = path.join(repoRoot, 'tools', 'generate_missing_images.py');\r\n\r\n// Default args if none provided\r\nconst userArgs = process.argv.slice(2);\r\nconst defaultArgs = ['--only-missing', '--min-bytes', '1000'];\r\n// Build args for the python script (it doesn't support --force)\r\nconst passthrough = (userArgs.length ? userArgs : defaultArgs).filter(a => a !== '--force');\r\nconst args = [scriptPath, ...passthrough];\r\n\r\nfunction parseFlag(name, fallback) {\r\n  const idx = userArgs.findIndex(a => a === `--${name}`);\r\n  if (idx === -1) {return fallback;}\r\n  const val = userArgs[idx + 1];\r\n  if (val === undefined || val.startsWith('--')) {return true;}\r\n  if (name === 'min-bytes') {return parseInt(val, 10) || fallback;}\r\n  return val;\r\n}\r\n\r\nconst onlyMissing = userArgs.includes('--only-missing') || !userArgs.length;\r\nconst force = userArgs.includes('--force') || process.env.PLACEHOLDERS_FORCE === '1';\r\nconst dryRun = userArgs.includes('--dry-run');\r\nconst minBytes = parseFlag('min-bytes', 1000);\r\nconst preferNode = userArgs.includes('--node') || userArgs.includes('--skip-python') || process.env.PLACEHOLDERS_PREFER_NODE === '1';\r\nconst filterText = parseFlag('filter', null);\r\n\r\nfunction tryRun(interpreter) {\r\n  try {\r\n    const res = spawnSync(interpreter, args, { stdio: 'inherit' });\r\n    if (res.error && res.error.code === 'ENOENT') {return { ran: false };}\r\n    // Non-zero exit: on Vercel, do not fail the build; otherwise bubble up\r\n    if (typeof res.status === 'number' && res.status !== 0) {\r\n      const msg = `generate_missing_images failed with code ${res.status} using ${interpreter}`;\r\n      if (isVercel) {\r\n        console.warn(`[WARN] ${msg} ÔÇö skipping on Vercel.`);\r\n        return { ran: true, skipped: true };\r\n      }\r\n      process.exit(res.status);\r\n    }\r\n    return { ran: true };\r\n  } catch (e) {\r\n    if (e && e.code === 'ENOENT') {return { ran: false };}\r\n    // Any other unexpected error: do not break Vercel builds\r\n    console.warn(`[WARN] Unexpected error running ${interpreter}: ${e && e.message}`);\r\n    if (!isVercel) {process.exit(1);}\r\n    return { ran: false, skipped: true };\r\n  }\r\n}\r\n\r\nif (!preferNode && fs.existsSync(scriptPath)) {\r\n  let result = tryRun('python');\r\n  if (!result.ran) {result = tryRun('python3');}\r\n  if (result.ran) {process.exit(0);}\r\n  console.warn('[WARN] Python not available, will try Node fallback (sharp).');\r\n}\r\n\r\n// Node fallback: generate simple WEBP placeholders using sharp\r\nlet sharp;\r\ntry {\r\n  sharp = require('sharp');\r\n} catch (e) {\r\n  console.warn('[WARN] sharp is not installed. Skipping placeholder generation.');\r\n  process.exit(0);\r\n}\r\n\r\nconst ROOT = path.resolve(__dirname, '..');\r\nconst CONTENT_DIR = path.join(ROOT, 'content', 'blog');\r\nconst IMAGES_DIR = path.join(ROOT, 'public', 'images', 'blog');\r\nconst STOCK_DIR = path.join(ROOT, 'public', 'images', 'proyectos');\r\n\r\nfunction extractFrontmatter(text) {\r\n  if (!text.startsWith('---')) {return null;}\r\n  const end = text.indexOf('\\n---', 3);\r\n  if (end === -1) {return null;}\r\n  return text.slice(3, end).trim();\r\n}\r\n\r\nfunction extractField(fm, key) {\r\n  const re = new RegExp(`^${key}:\\\\s*(.+)$`, 'm');\r\n  const m = fm.match(re);\r\n  if (!m) {return null;}\r\n  let v = m[1].trim();\r\n  if ((v.startsWith(\"'\") && v.endsWith(\"'\")) || (v.startsWith('\"') && v.endsWith('\"'))) {\r\n    v = v.slice(1, -1);\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction targetFromImageField(imagePath, fallbackSlug) {\r\n  if (imagePath && imagePath.includes('/images/blog/')) {\r\n    try {\r\n      const tail = imagePath.split('/images/blog/')[1];\r\n      const dirSlug = tail.split('/')[0];\r\n      const filename = `${dirSlug}-hero-001.webp`;\r\n      return { dirSlug, target: path.join(IMAGES_DIR, dirSlug, filename) };\r\n    } catch (e) {\r\n      // fall through\r\n    }\r\n  }\r\n  const dirSlug = fallbackSlug;\r\n  const filename = `${dirSlug}-hero-001.webp`;\r\n  return { dirSlug, target: path.join(IMAGES_DIR, dirSlug, filename) };\r\n}\r\n\r\nfunction stockForCategory(category) {\r\n  const map = new Map([\r\n    ['Seguridad', 'CCTV.jpeg'],\r\n    ['Electricidad', 'electricidad.jpeg'],\r\n    ['Inform├ítica', 'servers.jpeg'],\r\n    ['Informatica', 'servers.jpeg'],\r\n    ['Inform├ítica', 'servers.jpeg'],\r\n    ['Sonido', 'sonido.jpeg'],\r\n    ['General', 'seguridad_red.jpeg'],\r\n  ]);\r\n  const key = (category || 'General').trim();\r\n  const file = map.get(key) || map.get('General');\r\n  const p = path.join(STOCK_DIR, file);\r\n  return fs.existsSync(p) ? p : null;\r\n}\r\n\r\nfunction listMDX(dir) {\r\n  try {\r\n    return fs.readdirSync(dir).filter(f => f.endsWith('.mdx')).map(f => path.join(dir, f));\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function createWebpFromStock(srcPath, outPath) {\r\n  const width = 1920, height = 1080;\r\n  await fs.promises.mkdir(path.dirname(outPath), { recursive: true });\r\n  await sharp(srcPath)\r\n    .resize(width, height, { fit: 'cover', position: 'centre' })\r\n    .webp({ quality: 85 })\r\n    .toFile(outPath);\r\n}\r\n\r\nasync function createWebpPlaceholder(outPath) {\r\n  const width = 1920, height = 1080;\r\n  const background = '#e2e8f0'; // slate-200\r\n  await fs.promises.mkdir(path.dirname(outPath), { recursive: true });\r\n  await sharp({ create: { width, height, channels: 3, background } })\r\n    .webp({ quality: 80 })\r\n    .toFile(outPath);\r\n}\r\n\r\n(async () => {\r\n  const files = listMDX(CONTENT_DIR);\r\n  let created = 0, skipped = 0, candidates = 0;\r\n  for (const file of files) {\r\n    const text = fs.readFileSync(file, 'utf8');\r\n    const fm = extractFrontmatter(text);\r\n    const slug = (fm && extractField(fm, 'slug')) || path.basename(file, '.mdx');\r\n    const category = (fm && extractField(fm, 'category')) || 'General';\r\n    const image = fm && extractField(fm, 'image');\r\n    const title = (fm && extractField(fm, 'title')) || slug.replace(/-/g, ' ');\r\n\r\n    if (filterText) {\r\n      const key = `${slug} ${title}`.toLowerCase();\r\n      if (!key.includes(String(filterText).toLowerCase())) {\r\n        continue;\r\n      }\r\n    }\r\n    const { target } = targetFromImageField(image, slug);\r\n    let size = 0;\r\n    if (fs.existsSync(target)) {\r\n      try { size = fs.statSync(target).size; } catch {}\r\n    }\r\n    const needs = force || (!fs.existsSync(target)) || (size < minBytes);\r\n    if (onlyMissing && !needs) { skipped++; continue; }\r\n    candidates++;\r\n    console.log(`[GEN] ${path.basename(file)} -> ${path.relative(ROOT, target)}`);\r\n    if (dryRun) {continue;}\r\n    try {\r\n      const stock = stockForCategory(category);\r\n      if (stock) {\r\n        await createWebpFromStock(stock, target);\r\n      } else {\r\n        await createWebpPlaceholder(target);\r\n      }\r\n      const outSize = fs.statSync(target).size;\r\n      console.log(`   created: ${path.relative(ROOT, target)} (${outSize} bytes)`);\r\n      created++;\r\n    } catch (e) {\r\n      console.warn(`   error: ${e && e.message}`);\r\n    }\r\n  }\r\n  console.log('\\nSummary:');\r\n  console.log(`  Candidates: ${candidates}`);\r\n  console.log(`  Created:    ${created}`);\r\n  console.log(`  Skipped:    ${skipped}`);\r\n  process.exit(0);\r\n})().catch(() => process.exit(0));\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\git-pull.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\guard-pm.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\inspect-mdx-frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\lint-changed.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\lint-staged.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\prebuild.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\print-db-env.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\run-playwright-if-needed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\temp-api-ping.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":27,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":27,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[928,931],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[928,931],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\nResumen generado autom├íticamente.\n\nscripts/temp-api-ping.ts\n\n2025-09-13T06:20:07.386Z\n\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\nArchivo .ts: temp-api-ping.ts\nTama├▒o: 1139 caracteres, 31 l├¡neas\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\nContenido detectado basado en extensi├│n y estructura b├ísica.\n*/\nimport http from 'http';\r\nimport { sql } from '../db/client';\r\n\r\nconst PORT = process.env.TEMP_API_PING_PORT ? Number(process.env.TEMP_API_PING_PORT) : 4000;\r\n\r\nconst server = http.createServer(async (req, res) => {\r\n  if (!req.url) {return res.end();}\r\n  if (req.url === '/api/db-ping') {\r\n    try {\r\n      const result = await sql`select version()`;\r\n      const version = result && result.rows && result.rows[0] ? result.rows[0].version || result.rows[0] : result.rows[0];\r\n      res.writeHead(200, { 'Content-Type': 'application/json' });\r\n      res.end(JSON.stringify({ ok: true, version }));\r\n    } catch (err: any) {\r\n      res.writeHead(500, { 'Content-Type': 'application/json' });\r\n      res.end(JSON.stringify({ ok: false, error: String(err.message || err) }));\r\n    }\r\n    return;\r\n  }\r\n\r\n  res.writeHead(404, { 'Content-Type': 'application/json' });\r\n  res.end(JSON.stringify({ ok: false, error: 'Not found' }));\r\n});\r\n\r\nserver.listen(PORT, () => {\r\n   \r\n  console.log(`temp-api-ping listening on http://localhost:${PORT}/api/db-ping`);\r\n});\r\n\r\nprocess.on('SIGINT', () => process.exit(0));\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\validate-mdx-frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\validate_and_fix_mdx_frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"no-new-symbol","replacedBy":["no-new-native-nonconstructor"],"info":{"message":"The rule was replaced with a more general rule.","url":"https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended","deprecatedSince":"9.0.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-new-native-nonconstructor","url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\verify-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\server\\api\\trpc.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[304,307],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[304,307],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":7,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":7,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[333,336],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[333,336],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":10,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":10,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[374,377],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[374,377],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":13,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":13,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[512,515],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[512,515],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":14,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":14,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[550,553],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[550,553],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[655,658],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[655,658],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Minimal tRPC stub used for local type-checking and simple dev runs.\r\n// This file intentionally provides lightweight, 'any'-typed helpers\r\n// matching the shape used across the app. Replace with real tRPC\r\n// initialization when integrating full tRPC backend.\r\n\r\nexport function createTRPCRouter(def: any = {}) {\r\n  return def as any;\r\n}\r\n\r\nexport const publicProcedure: any = {\r\n  // A very small adapter that allows `.input()`/`.query()` chains in code\r\n  input() { return publicProcedure; },\r\n  query(fn?: any) { return fn; },\r\n  mutation(fn?: any) { return fn; },\r\n};\r\n\r\nexport const protectedProcedure = publicProcedure;\r\n\r\nexport default null as any;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\global-setup.ts","messages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'signaledReady' is not modified in this loop.","line":46,"column":11,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":46,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":61,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":15}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { spawn } from 'child_process';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport { fileURLToPath } from 'url';\r\nimport { createRequire } from 'module';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\nconst cwd = path.resolve(__dirname, '../../intranet-scaffold');\r\nconst require = createRequire(import.meta.url);\r\n\r\nexport default async function globalSetup() {\r\n  // Ensure tests run against the in-memory DB by default\r\n  process.env.USE_IN_MEMORY_DB = '1';\r\n  process.env.SKIP_CONTENTLAYER = '1';\r\n\r\n  // Provide a known debug token for endpoints that require it in dev\r\n  process.env.INTRANET_DEBUG_TOKEN = 'test-token-123';\r\n\r\n  // Start Next dev as a child process so Playwright can hit the running server\r\n  // Resolve next's actual JS entry in a cross-platform way\r\n  const nextBin = require.resolve('next/dist/bin/next');\r\n  const child = spawn(process.execPath, [nextBin, 'dev', '-H', '127.0.0.1', '-p', '3000'], {\r\n    cwd,\r\n    env: process.env,\r\n    stdio: ['ignore', 'pipe', 'pipe'],\r\n    // don't use shell on Windows to avoid \"C:\\Program Files\" splitting\r\n    shell: false,\r\n  });\r\n\r\n  // Store PID so teardown can kill it\r\n  fs.writeFileSync(path.resolve(cwd, '.playwright-dev.pid'), String(child.pid));\r\n\r\n  child.stdout.setEncoding('utf8');\r\n  child.stderr.setEncoding('utf8');\r\n\r\n  let signaledReady = false;\r\n  child.stdout.on('data', (d: string) => {\r\n    process.stdout.write(`[next] ${  d}`);\r\n    if (!signaledReady && /Ready/.test(d)) {signaledReady = true;}\r\n  });\r\n  child.stderr.on('data', (d: string) => process.stderr.write(`[next-err] ${  d}`));\r\n\r\n  // Wait up to 40s for Next to emit Ready\r\n  const start = Date.now();\r\n  while (!signaledReady && Date.now() - start < 40000) {\r\n    await new Promise((r) => setTimeout(r, 500));\r\n  }\r\n  if (!signaledReady) {\r\n    child.kill();\r\n    throw new Error('Next did not signal Ready within timeout');\r\n  }\r\n\r\n  // After Next signals Ready, poll the readiness endpoint until it returns ok\r\n  const maxPoll = 120; // seconds (increase to allow full compilation)\r\n  for (let i = 0; i < maxPoll; i++) {\r\n    try {\r\n      const res = await fetch('http://127.0.0.1:3000/api/_debug/ready');\r\n      if (res.ok) {return;}\r\n      // if not ok, continue polling\r\n    } catch (e) {\r\n      // ignore network errors while server finalizes\r\n    }\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n  }\r\n\r\n  // If we reach here, server did not expose readiness\r\n  child.kill();\r\n  throw new Error('Dev server did not become ready in time after Ready signal');\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\global-teardown.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":16,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":22,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":13}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'fs';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nexport default async function globalTeardown() {\r\n  const pidPath = path.resolve(__dirname, '../../intranet-scaffold/.playwright-dev.pid');\r\n  try {\r\n    if (fs.existsSync(pidPath)) {\r\n      const pid = Number(fs.readFileSync(pidPath, 'utf8'));\r\n      if (pid) {\r\n        try {\r\n          process.kill(pid);\r\n        } catch (e) {\r\n          // ignore\r\n        }\r\n      }\r\n      fs.unlinkSync(pidPath);\r\n    }\r\n  } catch (e) {\r\n    // ignore\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\projects.spec.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":29,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":29,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1080,1083],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1080,1083],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { test, expect } from '@playwright/test';\r\n\r\ntest('projects CRUD via API (in-memory)', async ({ request }) => {\r\n  // Wait for readiness explicitly with retries to avoid compilation race\r\n  const max = 30; // seconds\r\n  let ready;\r\n  for (let i = 0; i < max; i++) {\r\n    ready = await request.get('/api/_debug/ready');\r\n    if (ready.ok()) {break;}\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n  }\r\n  expect(ready && ready.ok()).toBeTruthy();\r\n\r\n  // Create a project\r\n  const slug = `pwtest-${Date.now()}`;\r\n  const res = await request.post('/api/projects', {\r\n    headers: { 'Content-Type': 'application/json', 'x-debug-token': 'test-token-123' },\r\n    data: { slug, title: 'Playwright test', description: 'e2e', hero_image: '' },\r\n  });\r\n  expect(res.status()).toBe(201);\r\n  const body = await res.json();\r\n  expect(body.slug).toBe(slug);\r\n  expect(body.id).toBeTruthy();\r\n\r\n  // Read back list and find it\r\n  const list = await request.get('/api/projects');\r\n  expect(list.ok()).toBeTruthy();\r\n  const items = await list.json();\r\n  const found = items.find((p: any) => p.slug === slug);\r\n  expect(found).toBeTruthy();\r\n\r\n  // Delete the created project\r\n  const del = await request.fetch(`/api/projects/${body.id}`, { method: 'DELETE' });\r\n  expect(del.ok()).toBeTruthy();\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\types\\contentlayer-generated.d.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":17,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":17,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[573,576],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[573,576],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":18,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":18,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[606,609],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[606,609],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[643,646],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[643,646],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":20,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":20,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[680,683],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[680,683],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[715,718],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[715,718],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":22,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":22,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[747,750],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[747,750],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":24,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":24,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[778,781],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[778,781],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[805,808],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[805,808],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[836,839],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[836,839],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":27,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":27,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[867,870],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[867,870],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[896,899],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[896,899],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":30,"column":41,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":30,"endColumn":44,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[944,947],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[944,947],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":32,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":32,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[979,982],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[979,982],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ntypes/contentlayer-generated.d.ts\r\n\r\n2025-09-13T06:20:07.391Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: contentlayer-generated.d.ts\r\nTama├▒o: 652 caracteres, 22 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\ndeclare module 'contentlayer/generated' {\r\n  // Minimal ambient types for Contentlayer generated output used in scripts.\r\n  // Export the common collections and basic types as 'any' to satisfy TS checks.\r\n  export const allPosts: any[];\r\n  export const allBlogs: any[];\r\n  export const allProyectos: any[];\r\n  export const allServicios: any[];\r\n  export const allStreams: any[];\r\n  export const allDocs: any[];\r\n\r\n  export type Post = any;\r\n  export type Blog = any;\r\n  export type Proyecto = any;\r\n  export type Servicio = any;\r\n  export type Stream = any;\r\n\r\n  export function canonicalSlugFor(doc: any): string;\r\n\r\n  const _default: any;\r\n  export default _default;\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":["@stylistic/no-extra-semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-extra-semi","url":"https://eslint.style/rules/no-extra-semi"}}]}},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":["@stylistic/no-mixed-spaces-and-tabs"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-mixed-spaces-and-tabs","url":"https://eslint.style/rules/no-mixed-spaces-and-tabs"}}]}},{"ruleId":"arrow-spacing","replacedBy":["@stylistic/arrow-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"arrow-spacing","url":"https://eslint.style/rules/arrow-spacing"}}]}}]}]
