
> duartec-web@1.0.0 lint C:\Users\kiri_\cursor-main
> eslint . --max-warnings=0 "--format" "json"

[{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\login\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\posts\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\projects\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\services\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\admin\\streams\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\admin\\login\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\db-ping\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\debug\\blogs\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":30,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":30,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1060,1063],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1060,1063],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/api/debug/blogs/route.ts\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 832 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextResponse } from 'next/server';\r\nimport { getPostsPage, getAllPosts } from '../../../../lib/db-posts';\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    // params quick preview\r\n    const url = new URL(request.url);\r\n    const page = Number(url.searchParams.get('page') || '1');\r\n    const pageSize = Number(url.searchParams.get('pageSize') || '9');\r\n    const category = url.searchParams.get('category') || undefined;\r\n    const q = url.searchParams.get('q') || undefined;\r\n\r\n    const pageResult = await getPostsPage({ page, pageSize, category, q });\r\n    const all = await getAllPosts();\r\n\r\n    return NextResponse.json({ ok: true, pageResult, allCount: all.length, sampleAll: all.slice(0, 10) });\r\n  } catch (e: any) {\r\n    return NextResponse.json({ ok: false, error: String(e?.message || e) }, { status: 500 });\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\streams\\[slug]\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":51,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":51,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1915,1918],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1915,1918],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/api/streams/[slug]/route.ts\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: route.ts\r\nTama├▒o: 2037 caracteres, 53 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getStreamBySlug } from '../../../../lib/db-streams';\r\nimport { db } from '../../../../db/client';\r\nimport { streams } from '../../../../db/schema';\r\nimport { eq } from 'drizzle-orm';\r\nimport { revalidateTag } from 'next/cache';\r\n\r\nfunction isAuthorized(req: NextRequest): boolean {\r\n  const header = req.headers.get('authorization') || '';\r\n  const token = header.startsWith('Bearer ') ? header.slice(7) : header;\r\n  const expected = process.env.ADMIN_TOKEN || '';\r\n  return expected !== '' && token === expected;\r\n}\r\n\r\nexport async function GET(_req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const item = await getStreamBySlug(slug);\r\n  if (!item) {return NextResponse.json({ error: 'Not found' }, { status: 404 });}\r\n  return NextResponse.json(item);\r\n}\r\n\r\nexport async function PATCH(req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  if (!isAuthorized(req)) {return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });}\r\n  const { slug } = await params;\r\n  const patch = await req.json().catch(() => ({}));\r\n  const now = new Date();\r\n  const res = await db\r\n    .update(streams)\r\n    .set({\r\n      name: patch.name,\r\n      description: patch.description ?? null,\r\n      provider: patch.provider,\r\n      youtubeId: patch.youtubeId ?? null,\r\n      embedUrl: patch.embedUrl ?? null,\r\n      image: patch.image ?? null,\r\n      isLive: typeof patch.isLive === 'boolean' ? patch.isLive : undefined,\r\n      updatedAt: now,\r\n    } as any)\r\n    .where(eq(streams.slug, slug));\r\n\r\n  revalidateTag('streams');\r\n  return NextResponse.json({ ok: true, res });\r\n}\r\n\r\nexport async function DELETE(req: NextRequest, { params }: { params: Promise<{ slug: string }> }) {\r\n  if (!isAuthorized(req)) {return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });}\r\n  const { slug } = await params;\r\n  await db.delete(streams).where(eq(streams.slug, slug));\r\n  revalidateTag('streams');\r\n  return NextResponse.json({ ok: true });\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\api\\streams\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\BlogListClient.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\[slug]\\page.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":208,"column":16,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":208,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/blog/[slug]/page.tsx\r\n\r\n2025-09-13T06:20:07.361Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 7543 caracteres, 231 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { Calendar, ArrowLeft, Clock } from 'lucide-react';\r\nimport { notFound, redirect } from 'next/navigation';\r\nimport Breadcrumb from '../../../components/Breadcrumb';\r\nimport RelatedPosts from '../../../components/RelatedPosts';\r\nimport { unstable_cache } from 'next/cache';\r\nimport { getAllPosts, getAllSlugs, getPostBySlug } from '../../../lib/db-posts';\r\nimport { marked } from 'marked';\r\n\r\nconst normalizeSlug = (s: string) =>\r\n  String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n\r\nconst canonicalSlugFor = (p: { slug?: string; title?: string }): string => {\r\n  const base = p.slug || p.title || '';\r\n  return normalizeSlug(base);\r\n};\r\n\r\nconst getCategoryColor = (category: string) => {\r\n  switch (category) {\r\n    case 'Seguridad':\r\n      return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n    case 'Electricidad':\r\n      return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n    case 'Inform├ítica':\r\n      return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n    case 'Sonido':\r\n      return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\r\n    default:\r\n      return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\r\n  }\r\n};\r\n\r\nconst estimateReadTime = (text: string) => {\r\n  const words = text ? text.trim().split(/\\s+/).length : 0;\r\n  const minutes = Math.max(1, Math.round(words / 200));\r\n  return `${minutes} min`;\r\n};\r\n\r\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\r\n  const { slug } = await params;\r\n  const incoming = normalizeSlug(slug);\r\n  const post = await getPostBySlug(incoming);\r\n  if (!post) {\r\n    return {\r\n      title: 'Art├¡culo no encontrado',\r\n      description: 'El art├¡culo que buscas no existe.'\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: `${post.title} - Duartec Blog`,\r\n    description: post.description || undefined,\r\n    openGraph: {\r\n      title: post.title,\r\n      description: post.description || undefined,\r\n      images: post.image ? [cleanSrc(post.image)] : [],\r\n    },\r\n  };\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  const slugs = await getAllSlugs();\r\n  return slugs.map((slug) => ({ slug }));\r\n}\r\n\r\ntype BlogCard = {\r\n  title: string;\r\n  slug: string;\r\n  category: string;\r\n  image: string;\r\n  date: string;\r\n  readTime: string;\r\n  excerpt: string;\r\n};\r\n\r\nconst cleanSrc = (s?: string) => (s || '').replace(/[\\r\\n]+/g, '').trim();\r\n\r\nconst getBlogCards = unstable_cache(\r\n  async (): Promise<{\r\n    title: string;\r\n    slug: string;\r\n    category: string;\r\n    image: string;\r\n    date: string;\r\n    readTime: string;\r\n    excerpt: string;\r\n  }[]> => {\r\n    const all = await getAllPosts();\r\n    return all\r\n      .map((p) => ({\r\n        title: p.title,\r\n        slug: canonicalSlugFor(p),\r\n        category: p.category ?? 'General',\r\n        image: cleanSrc(p.image || '') || '/images/proyectos/CCTV.jpeg',\r\n        date: p.date.toISOString(),\r\n        readTime: estimateReadTime(p.content || ''),\r\n        excerpt: p.description || '',\r\n      }))\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n  },\r\n  ['blog-cards-db-v1'],\r\n  { revalidate: 3600, tags: ['blogs'] }\r\n);\r\n\r\nexport default async function BlogPostPage({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const incoming = normalizeSlug(slug);\r\n  const post = await getPostBySlug(incoming);\r\n  if (!post) {\r\n    notFound();\r\n  }\r\n  const canonical = canonicalSlugFor(post);\r\n  if (slug !== canonical) {\r\n    redirect(`/blog/${canonical}`);\r\n  }\r\n\r\n  const html = (await marked.parse(post.content || '')) as string;\r\n  const readTime = estimateReadTime(post.content || '');\r\n\r\n  const allPosts: BlogCard[] = await getBlogCards();\r\n\r\n  const current: BlogCard = {\r\n    title: post.title,\r\n    slug: canonicalSlugFor(post),\r\n    category: post.category ?? 'General',\r\n    image: post.image || '/images/proyectos/CCTV.jpeg',\r\n    date: post.date.toISOString(),\r\n    readTime,\r\n    excerpt: post.description || '',\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"relative bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 py-20 px-4 overflow-hidden\">\r\n        <div className=\"absolute inset-0\">\r\n          <Image\r\n            src={current.image || '/images/proyectos/CCTV.jpeg'}\r\n            alt={current.title}\r\n            fill\r\n            className=\"object-cover opacity-10\"\r\n          />\r\n        </div>\r\n        <div className=\"relative max-w-4xl mx-auto\">\r\n          <Breadcrumb items={[\r\n            { label: 'Blog', href: '/blog' },\r\n            { label: current.title }\r\n          ]} />\r\n\r\n          <div className=\"flex items-center mb-6\">\r\n            <Link\r\n              href=\"/blog\"\r\n              className=\"flex items-center text-accent hover:text-accent-700 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5 mr-2\" />\r\n              Volver al blog\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"mb-6\">\r\n            <span className={`inline-block px-4 py-2 rounded-full text-sm font-medium ${getCategoryColor((current.category || '') )}`}>\r\n              {current.category}\r\n            </span>\r\n          </div>\r\n\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 text-primary dark:text-white\">\r\n            {current.title}\r\n          </h1>\r\n\r\n          <div className=\"flex items-center text-gray-600 dark:text-gray-300 space-x-6\">\r\n            <div className=\"flex items-center\">\r\n              <Calendar className=\"w-5 h-5 mr-2\" />\r\n              <span>{new Date(current.date).toLocaleDateString('es-ES', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n              })}</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <Clock className=\"w-5 h-5 mr-2\" />\r\n              <span>{current.readTime} de lectura</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-4xl mx-auto py-16 px-4\">\r\n        <article className=\"prose prose-lg dark:prose-invert max-w-none\">\r\n          <div dangerouslySetInnerHTML={{ __html: html }} />\r\n        </article>\r\n\r\n        <RelatedPosts\r\n          currentPost={current}\r\n          allPosts={allPosts}\r\n          maxPosts={3}\r\n        />\r\n\r\n        <div className=\"mt-16 bg-accent rounded-2xl p-8 text-white text-center\">\r\n          <h3 className=\"text-2xl font-bold mb-4\">\r\n            ┬┐Necesitas ayuda con tu proyecto?\r\n          </h3>\r\n          <p className=\"text-lg mb-6 opacity-90\">\r\n            Nuestros expertos est├ín aqu├¡ para ayudarte con cualquier consulta t├®cnica\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Link\r\n              href=\"/contacto\"\r\n              className=\"inline-flex items-center justify-center bg-white text-accent px-8 py-4 rounded-lg font-semibold hover:bg-gray-100 transition-colors duration-200\"\r\n            >\r\n              Contactar expertos\r\n            </Link>\r\n            <a\r\n              href=\"tel:+34947256430\"\r\n              className=\"inline-flex items-center justify-center bg-transparent border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-accent transition-colors duration-200\"\r\n            >\r\n              Llamar ahora\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\blog\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\contacto\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\error.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\global-error.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\aviso-legal\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\condiciones\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\cookies\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\legal\\privacidad\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\proyectos\\[slug]\\page.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":72,"column":65,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":72,"endColumn":107}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/proyectos/[slug]/page.tsx\r\n\r\n2025-09-13T06:20:07.365Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 2416 caracteres, 65 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { getAllProjects, getProjectBySlug } from '../../../lib/db-projects.new';\r\nimport { marked } from 'marked';\r\n\r\nconst normalizeSlug = (s: string) =>\r\n  String(s || '')\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/[^a-z0-9-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n\r\nexport async function generateStaticParams() {\r\n  const items = await getAllProjects();\r\n  return items.map((p) => ({ slug: p.slug }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\r\n  const { slug } = await params;\r\n  const p = await getProjectBySlug(normalizeSlug(slug));\r\n  if (!p) {return { title: 'Proyecto no encontrado' };}\r\n  return {\r\n    title: `${p.title} - Proyecto`,\r\n    description: p.description || undefined,\r\n    openGraph: { title: p.title, description: p.description || undefined, images: p.image ? [p.image] : undefined },\r\n  };\r\n}\r\n\r\nexport default async function ProjectPage({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const p = await getProjectBySlug(normalizeSlug(slug));\r\n  if (!p) {\r\n    return (\r\n      <div className=\"max-w-3xl mx-auto p-8\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Proyecto no encontrado</h1>\r\n        <Link href=\"/proyectos\" className=\"text-accent\">Volver a proyectos</Link>\r\n      </div>\r\n    );\r\n  }\r\n  const html = (await marked.parse(p.content || p.description || '')) as string;\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 py-16 px-4\">\r\n        <div className=\"max-w-5xl mx-auto\">\r\n          <Link href=\"/proyectos\" className=\"text-accent hover:underline\">ÔåÉ Volver a proyectos</Link>\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mt-4 text-primary dark:text-white\">{p.title}</h1>\r\n          {p.image && (\r\n            <div className=\"relative w-full h-72 rounded-xl overflow-hidden mt-6\">\r\n              <Image src={p.image} alt={p.title} fill className=\"object-cover\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-5xl mx-auto py-12 px-4\">\r\n        <article className=\"prose dark:prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: html }} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\proyectos\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":55,"column":54,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":55,"endColumn":57,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2417,2420],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2417,2420],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\napp/proyectos/page.tsx\r\n\r\n2025-09-13T06:20:07.365Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 2690 caracteres, 59 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { Metadata } from 'next';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { ArrowRight } from 'lucide-react';\r\nimport { getAllProjects } from '../../lib/db-projects.new';\r\n\r\nexport const metadata: Metadata = {\r\n  title: 'Proyectos - Duartec Instalaciones Inform├íticas',\r\n  description:\r\n    'Proyectos realizados por Duartec en Burgos. Instalaciones de inform├ítica, videovigilancia, sonido y electricidad.',\r\n};\r\n\r\nexport const dynamic = 'force-dynamic';\r\n\r\nexport default async function ProyectosPage() {\r\n  const proyectos = await getAllProjects();\r\n  // Use fallback from contentlayer if DB query fails (handled inside getAllProjects)\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <section className=\"bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-slate-800 dark:to-slate-900 py-20 px-4\">\r\n        <div className=\"max-w-6xl mx-auto text-center\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 text-primary dark:text-white\">Nuestros Proyectos</h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n            Descubre algunos de los proyectos m├ís destacados que hemos realizado en Burgos y Castilla y Le├│n.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"max-w-6xl mx-auto py-16 px-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {proyectos.map((p) => (\r\n            <div key={p.slug} className=\"bg-white dark:bg-slate-800 rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-200 border border-gray-100 dark:border-slate-700 overflow-hidden\">\r\n              {p.image && (\r\n                <div className=\"relative h-40 w-full\">\r\n                  <Image src={p.image} alt={p.title} fill className=\"object-cover\" />\r\n                </div>\r\n              )}\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-center justify-between mb-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                  <span>{p.category}</span>\r\n                  <span>{p.date ? new Date(p.date as any).getFullYear() : ''}</span>\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold mb-2 text-gray-800 dark:text-white\">{p.title}</h3>\r\n                <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">{p.description}</p>\r\n                <Link href={`/proyectos/${p.slug}`} className=\"flex items-center text-accent hover:text-accent-700 text-sm font-medium transition-colors\">\r\n                  Ver detalles\r\n                  <ArrowRight className=\"w-4 h-4 ml-1\" />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\quienes-somos\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\[slug]\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\electricidad-baja-tension\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\electricidad\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\informatica\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\page_backup__codex.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\sonido\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\servicios\\videovigilancia\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\streaming\\[slug]\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\app\\streaming\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\auto_comment.js","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'fileURLToPath' is defined but never used.","line":22,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":23,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'fetch' is not defined.","line":99,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":99,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":171,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":171,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6150,6178],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6273,6300],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":180,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":180,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6357,6414],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":182,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":182,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6445,6517],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\BlogCategories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\Breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\MapCamaras.client.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\MapCamaras.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\RelatedPosts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\components\\header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\content\\blog\\fix_blog_frontmatter_merge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\content\\blog\\fix_blog_slugs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\contentlayer.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\db\\client.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":75,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":75,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2905,2908],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2905,2908],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'_ignored' is defined but never used.","line":90,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":90,"endColumn":60,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'_ignored2' is defined but never used.","line":92,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":92,"endColumn":61,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":109,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":109,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4243,4246],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4243,4246],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":113,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":113,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4422,4425],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4422,4425],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":113,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":113,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4438,4441],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4438,4441],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ndb/client.ts\r\n\r\n2025-09-13T06:20:07.370Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: client.ts\r\nTama├▒o: 3569 caracteres, 88 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { drizzle } from 'drizzle-orm/postgres-js';\r\nimport postgres from 'postgres';\r\nimport * as schema from './schema';\r\n\r\n// Prefer Supabase-specific env vars when deploying to Vercel/Supabase\r\n// Order of precedence:\r\n// 1. SUPABASE_DB_URL (recommended for Supabase projects)\r\n// 2. POSTGRES_URL (used in this repo scripts)\r\n// 3. DATABASE_URL (generic)\r\n// Support legacy/local env var names (some environments use cxz_ prefix).\r\nconst rawConnectionString =\r\n  process.env.SUPABASE_DB_URL ||\r\n  process.env.POSTGRES_URL ||\r\n  process.env.DATABASE_URL ||\r\n  // fallbacks for local/dev .env that uses cxz_ prefixes\r\n  process.env.cxz_POSTGRES_URL ||\r\n  process.env.cxz_POSTGRES_PRISMA_URL ||\r\n  process.env.cxz_POSTGRES_URL_NON_POOLING ||\r\n  '';\r\n\r\n// Trim accidental surrounding quotes which sometimes appear when env vars\r\n// are injected with quotes (e.g. '\"postgres://...\"'). This prevents\r\n// URL parsing errors like ERR_INVALID_URL.\r\nconst connectionString = rawConnectionString.replace(/^\"|\"$/g, '').trim();\r\n\r\nconst skipDb = process.env.USE_IN_MEMORY_DB === '1' || process.env.SKIP_DB === '1';\r\n\r\nif (!connectionString) {\r\n  throw new Error(\r\n    'No se encontr├│ URL de base de datos. Define SUPABASE_DB_URL, POSTGRES_URL o DATABASE_URL en las variables de entorno.'\r\n  );\r\n}\r\n\r\n// If the environment requested skipping DB access, export a lightweight\r\n// fake `db` that behaves like a thenable query returning empty results.\r\n// This avoids runtime errors during static generation while keeping the\r\n// import surface stable.\r\nlet client: unknown = undefined;\r\nlet dbExport: unknown = undefined;\r\nif (!skipDb) {\r\n  // Try to use @supabase/postgres-js for serverless-friendly connections when available.\r\n  // If it's not installed or fails, fall back to the 'postgres' client.\r\n  let lowLevelClient: unknown;\r\n  try {\r\n    // Dynamic require so code still works if package not installed at runtime.\r\n    const req = eval('require');\r\n    const supabasePg = (() => {\r\n      try { return req('@supabase/postgres-js'); } catch { return undefined; }\r\n    })();\r\n    if (supabasePg && typeof supabasePg.createClient === 'function') {\r\n      lowLevelClient = supabasePg.createClient(connectionString);\r\n    }\r\n  } catch {\r\n    // ignore; we'll fallback to the 'postgres' client below\r\n  }\r\n\r\n  // If @supabase/postgres-js was available and created a client, use it.\r\n  // Otherwise create a client with the 'postgres' package.\r\n  client = lowLevelClient ?? postgres(connectionString, { prepare: false });\r\n\r\n  dbExport = drizzle(client as any, { schema });\r\n} else {\r\n  // Minimal thenable query used as a chainable stub. When awaited it resolves\r\n  // to an empty array. This covers typical usage patterns like\r\n  // `await db.select(...).from(...).where(...);` and count queries.\r\n  class FakeQuery {\r\n    from() { return this; }\r\n    where() { return this; }\r\n    orderBy() { return this; }\r\n    limit() { return this; }\r\n    offset() { return this; }\r\n    groupBy() { return this; }\r\n    then(onfulfilled?: (value: unknown) => unknown): Promise<unknown> {\r\n      if (typeof onfulfilled === 'function') {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        try { onfulfilled([] as unknown); } catch (_ignored) { /* ignore */ }\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        try { onfulfilled([] as unknown); } catch (_ignored2) { /* ignore */ }\r\n      }\r\n      return Promise.resolve([] as unknown);\r\n    }\r\n  }\r\n\r\n  const fakeDb = {\r\n    select: () => new FakeQuery(),\r\n    // count-like queries expect an array with value field; return empty array.\r\n  };\r\n\r\n  dbExport = fakeDb;\r\n}\r\n\r\n// The exports are typed as `any` intentionally to avoid cascading type errors\r\n// during the incremental migration. We'll tighten these later.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const db: any = dbExport;\r\n\r\n// Export the low-level sql client too (may be undefined when DB is skipped)\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const sql: any = client as any;\r\n\r\n// Supabase client (JS) for auth/storage/other APIs. Prefer using\r\n// SUPABASE_URL + SUPABASE_SERVICE_ROLE_KEY (or SUPABASE_ANON_KEY) set in Vercel.\r\n// Accept cxz_ prefixed env vars commonly used in local .env files as fallbacks\r\nconst supabaseUrl = process.env.SUPABASE_URL || process.env.cxz_SUPABASE_URL || process.env.cxz_NEXT_PUBLIC_SUPABASE_URL || '';\r\nconst supabaseKey =\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY ||\r\n  process.env.SUPABASE_ANON_KEY ||\r\n  process.env.cxz_SUPABASE_SERVICE_ROLE_KEY ||\r\n  process.env.cxz_NEXT_PUBLIC_SUPABASE_ANON_KEY ||\r\n  '';\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  // Don't crash - some environments may not need the JS client. Log a helpful warning.\r\n  // In Vercel, set SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY as environment variables.\r\n  // If you only need DB access via Drizzle, the SUPABASE_* JS client is optional.\r\n   \r\n  console.warn(\r\n    'Advertencia: SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY/SUPABASE_ANON_KEY no definidos. Algunas funcionalidades de Supabase (auth/storage) podr├¡an no funcionar.'\r\n  );\r\n}\r\n\r\nexport const supabase = supabaseUrl && supabaseKey\r\n  ? createClient(supabaseUrl, supabaseKey, {\r\n      auth: { autoRefreshToken: false, persistSession: false },\r\n    })\r\n  : undefined;\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\db\\schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\drizzle.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\drizzle\\neon-http.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[703,741],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\ndrizzle/neon-http.ts\r\n\r\n2025-09-13T06:20:07.371Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: neon-http.ts\r\nTama├▒o: 506 caracteres, 19 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// scripts/db/migrate-neon.ts\r\nimport 'dotenv/config'\r\nimport { neon } from '@neondatabase/serverless'\r\nimport { drizzle } from 'drizzle-orm/neon-http'\r\nimport { migrate } from 'drizzle-orm/neon-http/migrator'\r\n\r\nasync function main() {\r\n  const sql = neon(process.env.DATABASE_URL!)\r\n  const db = drizzle(sql, { logger: true })\r\n\r\n  await migrate(db, { migrationsFolder: 'drizzle' })\r\n  console.log('Ô£à Migraciones aplicadas')\r\n}\r\n\r\nmain().catch((err) => {\r\n  console.error('ÔØî Error migrando:', err)\r\n  process.exit(1)\r\n})\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_frontmatter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_frontmatter_merge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_slugs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\fix_blog_slugs_extended.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\instrumentation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\.disabled.contentlayer.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\admin\\projects\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\db\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\env\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\_debug\\ready\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\projects\\[id]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\api\\projects\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\blog\\[slug]\\page.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_err' is defined but never used.","line":24,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":24,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\blog\\page.tsx","messages":[{"ruleId":"react/no-array-index-key","severity":1,"message":"Do not use Array index in keys","line":24,"column":20,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":24,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/blog/page.tsx\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: page.tsx\r\nTama├▒o: 760 caracteres, 25 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport Link from 'next/link';\r\nimport { getAllPosts } from '../../lib/mdx';\r\n\r\nexport default function BlogListPage() {\r\n  const posts = getAllPosts();\r\n  return (\r\n    <main style={{ padding: 24 }}>\r\n      <h1>Blog</h1>\r\n      <ul>\r\n        {posts.map((post, idx) => (\r\n          <li key={idx} style={{ marginBottom: 24 }}>\r\n            <Link href={`/blog/${post.frontmatter.slug}`}>\r\n              <strong>{post.frontmatter.title}</strong>\r\n            </Link>\r\n            <span style={{ marginLeft: 8, color: '#888' }}>{post.frontmatter.date}</span>\r\n            {post.frontmatter.description && (\r\n              <p style={{ margin: '4px 0 0 0', color: '#555' }}>{post.frontmatter.description}</p>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\layout.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":32,"column":19,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":32,"endColumn":142}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/app/layout.tsx\r\n\r\n2025-09-13T06:20:07.374Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .tsx: layout.tsx\r\nTama├▒o: 655 caracteres, 25 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport '../styles/globals.css';\r\n\r\nexport const metadata = {\r\n  title: 'Duartec Intranet',\r\n  description: 'Scaffold de intranet de Duartec',\r\n}\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <html lang=\"es\">\r\n      <body>\r\n        {children}\r\n        {/* Expose debug token to client in non-production for E2E runs only */}\r\n        {process.env.INTRANET_DEBUG_TOKEN && process.env.NODE_ENV !== 'production' ? (\r\n          <script dangerouslySetInnerHTML={{ __html: `window.__INTRANET_DEBUG_TOKEN = ${JSON.stringify(process.env.INTRANET_DEBUG_TOKEN)}` }} />\r\n        ) : null}\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\contentlayer.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\db\\schema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\e2e\\admin-ui.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\lib\\db.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":102,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":102,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":118,"column":63,"nodeType":null,"messageId":"unusedVar","endLine":118,"endColumn":64}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/lib/db.ts\r\n\r\n2025-09-13T06:20:07.375Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: db.ts\r\nTama├▒o: 4101 caracteres, 122 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport postgres from \"postgres\";\r\n\r\n// Provide either a real Postgres client (postgres) or a lightweight\r\n// in-memory adapter used for local E2E when USE_IN_MEMORY_DB=1 is set.\r\nlet sql: any = null;\r\n\r\ndeclare global {\r\n  // Preserve adapter instance across HMR; use let to satisfy ESLint (no-var)\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  let __inMemorySqlAdapter: any | undefined;\r\n}\r\n\r\nfunction createInMemoryAdapter() {\r\n  const state = {\r\n    projects: [] as any[],\r\n    nextId: 1,\r\n  };\r\n\r\n  // sql should be callable as a template tag: sql`SELECT ...`\r\n  const adapter = async function sqlTag(strings: TemplateStringsArray, ...values: any[]) {\r\n    // Reconstruct a best-effort query string for routing decisions\r\n    let q = '';\r\n    for (let i = 0; i < strings.length; i++) {\r\n      q += strings[i];\r\n      if (i < values.length) {q += values[i];}\r\n    }\r\n    const nq = q.replace(/\\s+/g, ' ').trim().toLowerCase();\r\n\r\n    // SELECT all projects\r\n    if (nq.startsWith('select') && nq.includes('from projects')) {\r\n      // Return a shallow copy sorted by created_at desc\r\n      const rows = state.projects.slice().sort((a, b) => (b.created_at || 0) - (a.created_at || 0));\r\n      return rows;\r\n    }\r\n\r\n    // INSERT INTO projects (...) VALUES (${slug}, ${title}, ${description}, ${hero_image}) RETURNING ...\r\n    if (nq.includes('insert into projects')) {\r\n      // values = [slug, title, description, hero_image]\r\n      const [slug, title, description, hero_image] = values;\r\n      const now = Date.now();\r\n      const row = {\r\n        id: state.nextId++,\r\n        slug: slug ?? null,\r\n        title: title ?? null,\r\n        description: description ?? null,\r\n        hero_image: hero_image ?? null,\r\n        created_at: now,\r\n      };\r\n      state.projects.push(row);\r\n      return [row];\r\n    }\r\n\r\n    // UPDATE projects SET ... WHERE id = ${id} RETURNING ...\r\n    if (nq.includes('update projects set')) {\r\n      // Expect values = [slug, title, description, hero_image, id]\r\n      const id = values[values.length - 1];\r\n      const slug = values[0];\r\n      const title = values[1];\r\n      const description = values[2];\r\n      const hero_image = values[3];\r\n      const idx = state.projects.findIndex(p => p.id === Number(id));\r\n      if (idx === -1) {return [];}\r\n      const updated = Object.assign({}, state.projects[idx], {\r\n        slug: slug ?? state.projects[idx].slug,\r\n        title: title ?? state.projects[idx].title,\r\n        description: description ?? state.projects[idx].description,\r\n        hero_image: hero_image ?? state.projects[idx].hero_image,\r\n      });\r\n      state.projects[idx] = updated;\r\n      return [updated];\r\n    }\r\n\r\n    // DELETE FROM projects WHERE id = ${id}\r\n    if (nq.includes('delete from projects')) {\r\n      const id = values[0];\r\n      const idx = state.projects.findIndex(p => p.id === Number(id));\r\n      if (idx !== -1) {state.projects.splice(idx, 1);}\r\n      return { ok: true };\r\n    }\r\n\r\n    // Fallback: return empty\r\n    return [];\r\n  } as any;\r\n\r\n  adapter.end = async function () { /* no-op */ };\r\n  // Attach internal state for debugging/inspection when running in-memory DB\r\n  try {\r\n    (adapter as any).__state = state;\r\n  } catch (e) {\r\n    // ignore if read-only\r\n  }\r\n  return adapter;\r\n}\r\n\r\nexport function getDb() {\r\n  if (!sql) {\r\n    // If requested, use in-memory adapter (useful for local dev/E2E)\r\n    if (process.env.USE_IN_MEMORY_DB === '1' || process.env.USE_IN_MEMORY_DB === 'true') {\r\n      // Preserve adapter instance across HMR / module reloads in Next dev\r\n      if (typeof globalThis.__inMemorySqlAdapter !== 'undefined') {\r\n        sql = (globalThis as any).__inMemorySqlAdapter;\r\n      /* eslint-disable @typescript-eslint/no-explicit-any, no-var */\r\n      } else {\r\n        sql = createInMemoryAdapter();\r\n        try { globalThis.__inMemorySqlAdapter = sql; } catch (e) { /* ignore */ }\r\n      }\r\n      return sql;\r\n    }\r\n\r\n    const dbUrl = process.env.SUPABASE_DB_URL || process.env.DATABASE_URL || process.env.POSTGRES_URL || process.env.cxz_POSTGRES_URL;\r\n    if (!dbUrl) {throw new Error(\"Database URL not configured. Set SUPABASE_DB_URL or DATABASE_URL.\");}\r\n    sql = postgres(dbUrl, { ssl: 'require' });\r\n  }\r\n  return sql;\r\n}\r\n\r\nexport async function closeDb() {\r\n  if (sql) {\r\n    if (typeof sql.end === 'function') {\r\n      await sql.end({ timeout: 5 }).catch(() => { /* ignore */ });\r\n    }\r\n    sql = null;\r\n  }\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\lib\\mdx.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\next-env.d.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/triple-slash-reference","severity":2,"message":"Do not use a triple slash reference for ./.next/types/routes.d.ts, use `import` style instead.","line":5,"column":1,"nodeType":"Line","messageId":"tripleSlashReference","endLine":5,"endColumn":51,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\pages\\_app.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\pages\\_document.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\playwright.config.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":15,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/playwright.config.ts\r\n\r\n2025-09-13T06:20:07.376Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: playwright.config.ts\r\nTama├▒o: 605 caracteres, 28 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\nimport { defineConfig } from '@playwright/test';\r\nimport path from 'path';\r\n\r\nexport default defineConfig({\r\n  testDir: './e2e',\r\n  timeout: 60_000,\r\n  retries: 0,\r\n  use: {\r\n    baseURL: 'http://localhost:3000',\r\n    headless: true,\r\n    viewport: { width: 1280, height: 720 },\r\n    actionTimeout: 10_000,\r\n  },\r\n  projects: [\r\n    { name: 'chromium', use: { browserName: 'chromium' } },\r\n  ],\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\postcss.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\db\\migrate-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\db\\seed-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\demo-crud.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\dev-no-contentlayer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\e2e-crud.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":78,"column":51,"nodeType":null,"messageId":"unusedVar","endLine":78,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/scripts/e2e-crud.js\r\n\r\n2025-09-13T06:20:07.377Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: e2e-crud.js\r\nTama├▒o: 2895 caracteres, 76 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// Better diagnostics: log unhandled errors\r\nprocess.on('unhandledRejection', (reason) => {\r\n  console.error('UNHANDLED REJECTION', reason);\r\n});\r\nprocess.on('uncaughtException', (err) => {\r\n  console.error('UNCAUGHT EXCEPTION', err && err.stack ? err.stack : err);\r\n  process.exit(1);\r\n});\r\n\r\n(async () => {\r\n  // Allow overriding the target base URL via env vars for flexibility in CI/local\r\n  const envBase = process.env.BASE_URL;\r\n  const envPort = process.env.PORT || process.env.E2E_PORT;\r\n  const base = envBase || `http://127.0.0.1:${envPort || 3005}`;\r\n  const hdr = { 'Content-Type': 'application/json' };\r\n\r\n  // wait-for helper: try GET /api/projects until it responds or timeout\r\n  async function waitForServer(ms = 10000) {\r\n    const start = Date.now();\r\n    let attempt = 0;\r\n    while (Date.now() - start < ms) {\r\n      attempt++;\r\n      try {\r\n        const r = await fetch(`${base}/api/projects`);\r\n        if (r.ok) {\r\n          console.log(`server ready after ${attempt} attempt(s)`);\r\n          return true;\r\n        }\r\n        console.log(`waitForServer: got ${r.status}`);\r\n      } catch (e) {\r\n        // log each attempt to help debug connection issues\r\n        if (attempt % 4 === 0) {console.log(`waitForServer: attempt ${attempt} failed: ${e && e.message ? e.message : e}`);}\r\n      }\r\n      await new Promise(res => setTimeout(res, 500));\r\n    }\r\n    throw new Error('Server did not respond within timeout');\r\n  }\r\n\r\n  try {\r\n  console.log('Waiting for server...');\r\n  await waitForServer(30000);\r\n    console.log('CREATE');\r\n    let res = await fetch(`${base}/api/projects`, { method: 'POST', headers: hdr, body: JSON.stringify({ slug: 'test-slug-copilot', title: 'Test Project from Copilot' }) });\r\n    const created = await res.json();\r\n    console.log(JSON.stringify(created, null, 2));\r\n\r\n    console.log('\\nLIST AFTER CREATE');\r\n    res = await fetch(`${base}/api/projects`);\r\n    let list = await res.json();\r\n    console.log(JSON.stringify(list, null, 2));\r\n\r\n    console.log('\\nUPDATE');\r\n    const {id} = created;\r\n    res = await fetch(`${base}/api/projects/${id}`, { method: 'PUT', headers: hdr, body: JSON.stringify({ slug: 'test-slug-copilot-upd', title: 'Updated Title' }) });\r\n    const updated = await res.json();\r\n    console.log(JSON.stringify(updated, null, 2));\r\n\r\n    console.log('\\nLIST AFTER UPDATE');\r\n    res = await fetch(`${base}/api/projects`);\r\n    list = await res.json();\r\n    console.log(JSON.stringify(list, null, 2));\r\n\r\n    console.log('\\nDELETE');\r\n    res = await fetch(`${base}/api/projects/${id}`, { method: 'DELETE' });\r\n    try { console.log(await res.json()); } catch (e) { console.log(await res.text()); }\r\n\r\n    console.log('\\nLIST AFTER DELETE');\r\n    res = await fetch(`${base}/api/projects`);\r\n    list = await res.json();\r\n    console.log(JSON.stringify(list, null, 2));\r\n  } catch (err) {\r\n    console.error('E2E ERROR', err && err.stack ? err.stack : err);\r\n    process.exit(1);\r\n  }\r\n})();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\run-intranet-e2e-simple.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fs' is assigned a value but never used.","line":4,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_e' is defined but never used.","line":60,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":60,"endColumn":20}],"suppressedMessages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'readySignal' is not modified in this loop.","line":38,"column":13,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":38,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { spawn } = require('child_process');\r\nconst { once } = require('events');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nasync function main() {\r\n    const nextBin = require.resolve('next/dist/bin/next');\r\n    const cwd = path.resolve(__dirname, '..');\r\n    const env = Object.assign({}, process.env, {\r\n        USE_IN_MEMORY_DB: process.env.USE_IN_MEMORY_DB || '1',\r\n        SKIP_CONTENTLAYER: process.env.SKIP_CONTENTLAYER || '1',\r\n        INTRANET_DEBUG_TOKEN: process.env.INTRANET_DEBUG_TOKEN || 'test-token-123',\r\n    });\r\n\r\n    console.log('Spawning next from', nextBin);\r\n    const child = spawn(process.execPath, [nextBin, 'dev', '-H', '127.0.0.1', '-p', '3000'], {\r\n        cwd,\r\n        env,\r\n        stdio: ['ignore', 'pipe', 'pipe'],\r\n    });\r\n\r\n    child.stdout.setEncoding('utf8');\r\n    child.stderr.setEncoding('utf8');\r\n\r\n    let readySignal = false;\r\n    child.stdout.on('data', (d) => {\r\n        process.stdout.write(`[next] ${  d}`);\r\n        if (!readySignal && /Ready/.test(d)) {readySignal = true;}\r\n    });\r\n    child.stderr.on('data', (d) => process.stderr.write(`[next-err] ${  d}`));\r\n\r\n    // wait for Ready (configurable via INTRANET_E2E_TIMEOUT ms)\r\n    const nextReadyTimeoutMs = parseInt(process.env.INTRANET_E2E_TIMEOUT || '40000', 10);\r\n    console.log('Waiting up to', nextReadyTimeoutMs, 'ms for Next dev Ready signal');\r\n    const start = Date.now();\r\n    // readySignal is intentionally mutated from the stdout handler above\r\n    // eslint-disable-next-line no-unmodified-loop-condition\r\n    while (!readySignal && Date.now() - start < nextReadyTimeoutMs) {\r\n        await new Promise((r) => setTimeout(r, 500));\r\n    }\r\n    if (!readySignal) {\r\n        console.error('Next did not signal Ready within timeout');\r\n        child.kill();\r\n        process.exit(2);\r\n    }\r\n\r\n    // poll readiness endpoint\r\n    // Number of seconds to poll readiness (INTRANET_E2E_POLL_MAX)\r\n    const maxPoll = parseInt(process.env.INTRANET_E2E_POLL_MAX || '60', 10);\r\n    let ok = false;\r\n    // eslint-disable-next-line no-unmodified-loop-condition\r\n    for (let i = 0; i < maxPoll; i++) {\r\n        try {\r\n            console.log('poll attempt', i + 1, 'of', maxPoll);\r\n            const r = await fetch('http://127.0.0.1:3000/api/_debug/ready');\r\n            console.log('ready status', r.status);\r\n            const txt = await r.text();\r\n            console.log('ready body', txt.substring(0, 2000));\r\n            if (r.ok) { ok = true; break; }\r\n        } catch (_e) {\r\n            // ignore network errors while polling readiness\r\n        }\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n\r\n    if (!ok) {\r\n        console.error('Readiness endpoint did not return ok');\r\n        child.kill();\r\n        process.exit(3);\r\n    }\r\n\r\n    // perform CRUD\r\n    try {\r\n        const slug = `e2e-${  Date.now()}`;\r\n        const payload = { slug, title: 'E2E simple test', description: 'auto', hero_image: '' };\r\n        const p = await fetch('http://127.0.0.1:3000/api/projects', {\r\n            method: 'POST', headers: { 'Content-Type': 'application/json', 'x-debug-token': env.INTRANET_DEBUG_TOKEN }, body: JSON.stringify(payload)\r\n        });\r\n        console.log('post status', p.status);\r\n        const created = await p.json().catch(() => null);\r\n        console.log('post body', created);\r\n        if (p.status !== 201 || !created || !created.id) {throw new Error('POST failed');}\r\n\r\n        const list = await fetch('http://127.0.0.1:3000/api/projects');\r\n        console.log('list status', list.status);\r\n        const items = await list.json().catch(() => []);\r\n        const found = (items || []).find((x) => x.slug === slug);\r\n        if (!found) {throw new Error('Created item not found in list');}\r\n\r\n        const del = await fetch(`http://127.0.0.1:3000/api/projects/${created.id}`, { method: 'DELETE' });\r\n        console.log('delete status', del.status);\r\n        if (!del.ok) {throw new Error('Delete failed');}\r\n\r\n        console.log('E2E simple flow succeeded');\r\n        child.kill();\r\n        await once(child, 'close');\r\n        process.exit(0);\r\n    } catch (e) {\r\n        console.error('E2E flow error', e);\r\n        child.kill();\r\n        await once(child, 'close');\r\n        process.exit(4);\r\n    }\r\n}\r\n\r\nmain().catch((e) => { console.error('script error', e); process.exit(1); });\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\run-intranet-e2e.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'er' is defined but never used.","line":81,"column":40,"nodeType":null,"messageId":"unusedVar","endLine":81,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'er' is defined but never used.","line":103,"column":43,"nodeType":null,"messageId":"unusedVar","endLine":103,"endColumn":45},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":114,"column":40,"nodeType":null,"messageId":"unusedVar","endLine":114,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nintranet-scaffold/scripts/run-intranet-e2e.js\r\n\r\n2025-09-13T06:20:07.377Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .js: run-intranet-e2e.js\r\nTama├▒o: 4021 caracteres, 103 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// (Shebang removed; script executed via `node` to avoid TS 18026 warning when analyzed)\r\nconst { spawn } = require('child_process');\r\nconst path = require('path');\r\n// Use global fetch (Node 18+/22). If not available, throw a helpful error.\r\nif (typeof fetch !== 'function') {\r\n  throw new Error('Global fetch is not available in this Node runtime. Please use Node 18+ or install a fetch polyfill.');\r\n}\r\n\r\nasync function waitForServer(base='http://127.0.0.1:3000', timeoutMs=60000) {\r\n  const start = Date.now();\r\n  let attempt = 0;\r\n  while (Date.now() - start < timeoutMs) {\r\n    attempt++;\r\n    try {\r\n      const res = await fetch(`${base}/api/projects`);\r\n      if (res.ok) {\r\n        console.log('server ready after', attempt, 'attempts');\r\n        return true;\r\n      }\r\n      console.log('waitForServer: got', res.status);\r\n    } catch (e) {\r\n      if (attempt % 5 === 0) {console.log('waitForServer attempt', attempt, 'failed', e && e.message);}\r\n    }\r\n    await new Promise(r => setTimeout(r, 500));\r\n  }\r\n  throw new Error('Server did not respond within timeout');\r\n}\r\n\r\n(async () => {\r\n  const cwd = path.resolve(__dirname, '..');\r\n  console.log('Starting Next dev in', cwd);\r\n  const env = Object.assign({}, process.env, { CONTENTLAYER_SKIP_TYPEGEN: '1', CONTENTLAYER_HIDE_WARNING: '1', SKIP_CONTENTLAYER: '1' });\r\n  // Ensure the runner picks up the same PORT (default 3000) so e2e-crud targets the correct base URL\r\n  env.PORT = env.PORT || '3000';\r\n\r\n  // If a .env.local exists in the repo root, load and merge it so child processes inherit DB params.\r\n  try {\r\n    const fs = require('fs');\r\n    const dotenv = require('dotenv');\r\n    const repoRootEnv = require('path').join(cwd, '..', '.env.local');\r\n    if (fs.existsSync(repoRootEnv)) {\r\n      const parsed = dotenv.parse(fs.readFileSync(repoRootEnv));\r\n      for (const k of Object.keys(parsed)) {\r\n        if (typeof env[k] === 'undefined') {env[k] = parsed[k];}\r\n      }\r\n      console.log('Merged vars from .env.local into orchestrator env');\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load .env.local:', e && e.message ? e.message : e);\r\n  }\r\n\r\n  // If a real DB URL is present, prefer it; otherwise enable in-memory DB for local E2E.\r\n  const hasDbUrl = env.SUPABASE_DB_URL || env.DATABASE_URL || env.POSTGRES_URL;\r\n  if (!hasDbUrl) {\r\n    env.USE_IN_MEMORY_DB = env.USE_IN_MEMORY_DB || '1';\r\n  } else {\r\n    console.log('Database URL detected in environment; running against real DB');\r\n  }\r\n  // dev may be replaced during recovery flow; use let instead of const\r\n  // eslint-disable-next-line prefer-const\r\n  let dev = spawn('pnpm', ['dev'], { cwd, stdio: 'inherit', env });\r\n\r\n  // wait for server (fast check first: 10s)\r\n  try {\r\n  await waitForServer('http://127.0.0.1:3000', 15000);\r\n  } catch (e) {\r\n    console.warn('Initial wait failed:', e && e.message, '- attempting recovery');\r\n    try { dev.kill('SIGINT'); } catch (er) {}\r\n    // remove .next to force fresh build\r\n    const fs = require('fs');\r\n    const nextDir = require('path').join(cwd, '.next');\r\n    try {\r\n      if (fs.existsSync(nextDir)) {\r\n        console.log('Removing .next to recover build...');\r\n        fs.rmSync(nextDir, { recursive: true, force: true });\r\n      }\r\n    } catch (rmErr) { console.warn('Failed to remove .next', rmErr && rmErr.message); }\r\n\r\n    // restart dev and wait longer\r\n    console.log('Restarting dev server and waiting up to 60s...');\r\n    const dev2 = spawn('pnpm', ['dev'], { cwd, stdio: 'inherit', env });\r\n    try {\r\n      await waitForServer('http://127.0.0.1:3000', 60000);\r\n  // replace dev handle for shutdown later\r\n  if (dev && typeof dev.kill === 'function') { dev.kill('SIGINT'); }\r\n  // use dev2 for shutdown\r\n  dev = dev2;\r\n    } catch (e2) {\r\n      console.error('Recovery failed:', e2 && e2.message);\r\n      try { dev2.kill('SIGINT'); } catch (er) {}\r\n      process.exit(1);\r\n    }\r\n  }\r\n\r\n  // run e2e\r\n  console.log('Running E2E script...');\r\n  const runner = spawn(process.execPath, [path.join(cwd, 'scripts', 'e2e-crud.js')], { cwd, stdio: 'inherit', env });\r\n  runner.on('close', (code) => {\r\n    console.log('E2E script finished with code', code);\r\n    // shutdown dev\r\n    try { dev.kill('SIGINT'); } catch (e) {}\r\n    process.exit(code === 0 ? 0 : 1);\r\n  });\r\n})();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\spawn-next-and-test.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":63,"column":63,"nodeType":null,"messageId":"unusedVar","endLine":63,"endColumn":64}],"suppressedMessages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'ready' is not modified in this loop.","line":35,"column":13,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":35,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { spawn } = require('child_process');\r\nconst { once } = require('events');\r\n\r\nasync function main() {\r\n  try {\r\n    const nextBin = require.resolve('next/dist/bin/next');\r\n    const env = Object.assign({}, process.env, {\r\n      USE_IN_MEMORY_DB: '1',\r\n      INTRANET_DEBUG_TOKEN: 'test-token-123',\r\n      SKIP_CONTENTLAYER: '1',\r\n    });\r\n\r\n    console.log('Spawning next from', nextBin);\r\n    const child = spawn(process.execPath, [nextBin, 'dev', '-H', '127.0.0.1', '-p', '3000'], {\r\n      env,\r\n      stdio: ['ignore', 'pipe', 'pipe'],\r\n    });\r\n\r\n    child.stdout.setEncoding('utf8');\r\n    child.stderr.setEncoding('utf8');\r\n\r\n    let ready = false;\r\n    child.stdout.on('data', (d) => {\r\n      process.stdout.write(`[next] ${  d}`);\r\n      if (!ready && /Ready/.test(d)) {\r\n        ready = true;\r\n      }\r\n    });\r\n    child.stderr.on('data', (d) => process.stderr.write(`[next-err] ${  d}`));\r\n\r\n    // Wait up to 40s for Ready\r\n    const start = Date.now();\r\n    // ready is mutated by the stdout handler; disable this rule here\r\n    // eslint-disable-next-line no-unmodified-loop-condition\r\n    while (!ready && Date.now() - start < 40000) {\r\n      await new Promise((r) => setTimeout(r, 500));\r\n    }\r\n\r\n    if (!ready) {\r\n      console.error('Next did not signal Ready within timeout');\r\n      child.kill();\r\n      process.exit(2);\r\n    }\r\n\r\n    // perform requests\r\n    try {\r\n      const r = await fetch('http://127.0.0.1:3000/api/_debug/ready');\r\n      console.log('ready status', r.status);\r\n      console.log('ready body', await r.text());\r\n    } catch (_e) {\r\n      // ignore fetch errors during health check\r\n      console.error('GET /api/_debug/ready failed', _e);\r\n    }\r\n\r\n    try {\r\n      const payload = { slug: `spawn-test-${  Date.now()}`, title: 'Spawn test' };\r\n      const p = await fetch('http://127.0.0.1:3000/api/projects', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'x-debug-token': 'test-token-123' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      console.log('post status', p.status);\r\n      try { console.log('post body', await p.text()); } catch(e){}\r\n    } catch (_e) {\r\n      console.error('POST /api/projects failed', _e);\r\n    }\r\n\r\n    // kill next child\r\n    child.kill();\r\n    await once(child, 'close');\r\n    process.exit(0);\r\n  } catch (err) {\r\n    console.error('script error', err);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nmain();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\start-next-dev.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\scripts\\ui-e2e-runner.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":12,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { spawn } = require('child_process');\r\nconst path = require('path');\r\nconst fetch = globalThis.fetch || require('node-fetch');\r\n\r\nasync function waitForReady(url, token, timeout = 60000) {\r\n  const start = Date.now();\r\n  while (Date.now() - start < timeout) {\r\n    try {\r\n      const res = await fetch(url, { headers: { 'x-debug-token': token } });\r\n      const json = await res.json();\r\n      if (json && json.ready) {return true;}\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n    await new Promise(r => setTimeout(r, 1000));\r\n  }\r\n  throw new Error('Timeout waiting for server ready');\r\n}\r\n\r\nasync function run() {\r\n  const scaffoldDir = path.resolve(__dirname, '..');\r\n  console.log('Starting Next dev in', scaffoldDir);\r\n  const child = spawn('pnpm', ['dev'], {\r\n    cwd: scaffoldDir,\r\n    env: { ...process.env, USE_IN_MEMORY_DB: '1', INTRANET_DEBUG_TOKEN: 'test-token' },\r\n    stdio: ['ignore', 'pipe', 'pipe'],\r\n    shell: true,\r\n  });\r\n\r\n  child.stdout.on('data', d => process.stdout.write(`[dev] ${d}`));\r\n  child.stderr.on('data', d => process.stderr.write(`[dev] ${d}`));\r\n\r\n  try {\r\n    await waitForReady('http://localhost:3000/api/_debug/ready', 'test-token', 60000);\r\n    console.log('Server ready ÔÇö running Playwright scenario');\r\n\r\n    const { chromium } = require('playwright');\r\n    const browser = await chromium.launch();\r\n    const page = await browser.newPage();\r\n    const uid = Date.now();\r\n    const slug = `pw-test-${uid}`;\r\n    const title = `PW Test Title ${uid}`;\r\n    const titleUpdated = `PW Test Title Updated ${uid}`;\r\n\r\n    await page.goto('http://localhost:3000/admin/projects', { waitUntil: 'load' });\r\n    await page.fill('input[placeholder=\"demo-slug\"]', slug);\r\n    await page.fill('input[placeholder=\"Demo Project\"]', title);\r\n    await page.click('button:has-text(\"Crear proyecto\")');\r\n    await page.waitForSelector(`text=${title}`);\r\n\r\n    const row = page.locator('li', { hasText: title }).first();\r\n    await row.locator('button:has-text(\"Editar\")').click();\r\n    await page.fill('input[placeholder=\"Demo Project\"]', titleUpdated);\r\n    await page.click('button:has-text(\"Actualizar proyecto\")');\r\n    await page.waitForSelector(`text=${titleUpdated}`);\r\n\r\n    const rowUpdated = page.locator('li', { hasText: titleUpdated }).first();\r\n    await rowUpdated.locator('button:has-text(\"Borrar\")').click();\r\n    // modal\r\n    await page.waitForSelector('text=Confirmar borrado');\r\n    await page.click('text=Confirmar borrado >> button:has-text(\"Borrar\")');\r\n    // ensure deleted\r\n    await page.waitForTimeout(500);\r\n    const count = await page.locator(`text=${titleUpdated}`).count();\r\n    if (count !== 0) {throw new Error('Item not deleted');}\r\n\r\n    await browser.close();\r\n    console.log('E2E flow completed successfully');\r\n    child.kill();\r\n    process.exit(0);\r\n  } catch (err) {\r\n    console.error('E2E failed:', err);\r\n    child.kill();\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nrun();\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\intranet-scaffold\\test-fetch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\jest.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\blog-data.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-posts.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":43,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":43,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1456,1459],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1456,1459],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":43,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":43,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1468,1471],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1468,1471],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":126,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":126,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3920,3923],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3920,3923],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":126,"column":41,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":126,"endColumn":44,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3933,3936],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3933,3936],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":127,"column":34,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":127,"endColumn":37,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3973,3976],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3973,3976],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":127,"column":47,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":127,"endColumn":50,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3986,3989],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3986,3989],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":128,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":128,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4022,4025],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4022,4025],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":128,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":128,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4035,4038],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4035,4038],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":130,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":130,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4072,4075],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4072,4075],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":137,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":137,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4217,4220],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4217,4220],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":139,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":139,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4329,4332],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4329,4332],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":149,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":149,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4572,4575],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4572,4575],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":169,"column":45,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":169,"endColumn":48,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5205,5208],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5205,5208],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-projects.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-services.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-services.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-streams.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-streams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\lib\\db-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\middleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\next-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\next.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\probe-inline.js","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":2,"column":12,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":2,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":19,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'path' is assigned a value but never used.","line":3,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":11,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":3,"column":14,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":3,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":3,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":21,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'spawnSync' is assigned a value but never used.","line":4,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":4,"column":23,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":4,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":4,"column":23,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":5,"column":18,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":5,"endColumn":37,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":5,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":6,"column":216,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":217,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":16,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":16,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1304,1337],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":18,"column":44,"nodeType":"MemberExpression","messageId":"unexpected","endLine":18,"endColumn":55,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1449,1479],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":18,"column":100,"nodeType":"MemberExpression","messageId":"unexpected","endLine":18,"endColumn":111,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1505,1539],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":18,"column":160,"nodeType":"BlockStatement","messageId":"unexpected","endLine":18,"endColumn":162,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1566,1566],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\probe2-inline.js","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":2,"column":12,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":2,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":19,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":3,"column":18,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":3,"endColumn":37,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":3,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":4,"column":216,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":217,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'URL' is not defined.","line":10,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":49,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":10,"column":81,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":82,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'URL' is not defined.","line":16,"column":173,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":176,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":16,"column":208,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":209,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1514,1550],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":23,"column":24,"nodeType":"MemberExpression","messageId":"unexpected","endLine":23,"endColumn":35,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1574,1597],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":24,"column":28,"nodeType":"MemberExpression","messageId":"unexpected","endLine":24,"endColumn":39,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1626,1649],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1905,1936],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2081,2112],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":39,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":39,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2169,2225],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":40,"column":39,"nodeType":"BlockStatement","messageId":"unexpected","endLine":40,"endColumn":41,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2265,2265],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\router\\route.router.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\check-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\clean_contentlayer.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\clean_contentlayer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\check-version.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[535,538],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[535,538],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\nResumen generado autom├íticamente.\r\n\r\nscripts/db/check-version.ts\r\n\r\n2025-09-13T06:20:07.384Z\r\n\r\nÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇöÔÇö\r\nArchivo .ts: check-version.ts\r\nTama├▒o: 642 caracteres, 21 l├¡neas\r\nResumen b├ísico generado autom├íticamente sin an├ílisis de IA.\r\nContenido detectado basado en extensi├│n y estructura b├ísica.\r\n*/\r\n// scripts/db/check-version.ts\r\n// Small helper to check DB connectivity and version via exported client\r\n(async () => {\r\n  try {\r\n    const mod = await import('../../db/client')\r\n    const exported = (mod as any).default ?? mod\r\n    const {sql} = exported\r\n    if (typeof sql !== 'function') {\r\n      console.error('El cliente sql exportado no es una funci├│n. exports:', Object.keys(exported))\r\n      process.exit(2)\r\n    }\r\n\r\n    const res = await sql`select version()`\r\n    console.log('pg version:', res[0].version)\r\n    await sql.end()\r\n  } catch (err) {\r\n    console.error('Error comprobando versi├│n de Postgres:', err)\r\n    process.exit(1)\r\n  }\r\n})()\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-neon.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-production.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-simple.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\migrate-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\ping-neon.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-comments.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-from-mdx.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-services.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\db\\seed-streams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\dependency-monitor.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\fix_blog_frontmatter_strict.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\fix_text_encoding.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\generate_missing_images_runner.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\generate_missing_images_runner.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\git-pull.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\guard-pm.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\inspect-mdx-frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\lint-changed.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\lint-staged.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\prebuild.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\print-db-env.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\run-playwright-if-needed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\temp-api-ping.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\validate-mdx-frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\validate_and_fix_mdx_frontmatter.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\scripts\\verify-supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\server\\api\\trpc.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[304,307],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[304,307],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":7,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":7,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[333,336],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[333,336],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":10,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":10,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[374,377],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[374,377],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":13,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":13,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[512,515],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[512,515],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":14,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":14,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[550,553],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[550,553],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[655,658],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[655,658],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Minimal tRPC stub used for local type-checking and simple dev runs.\r\n// This file intentionally provides lightweight, 'any'-typed helpers\r\n// matching the shape used across the app. Replace with real tRPC\r\n// initialization when integrating full tRPC backend.\r\n\r\nexport function createTRPCRouter(def: any = {}) {\r\n  return def as any;\r\n}\r\n\r\nexport const publicProcedure: any = {\r\n  // A very small adapter that allows `.input()`/`.query()` chains in code\r\n  input() { return publicProcedure; },\r\n  query(fn?: any) { return fn; },\r\n  mutation(fn?: any) { return fn; },\r\n};\r\n\r\nexport const protectedProcedure = publicProcedure;\r\n\r\nexport default null as any;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\global-setup.ts","messages":[],"suppressedMessages":[{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'signaledReady' is not modified in this loop.","line":51,"column":11,"nodeType":"Identifier","messageId":"loopConditionNotModified","endLine":51,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\global-teardown.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\tests\\e2e\\projects.spec.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":29,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":29,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1080,1083],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1080,1083],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { test, expect } from '@playwright/test';\r\n\r\ntest('projects CRUD via API (in-memory)', async ({ request }) => {\r\n  // Wait for readiness explicitly with retries to avoid compilation race\r\n  const max = 30; // seconds\r\n  let ready;\r\n  for (let i = 0; i < max; i++) {\r\n    ready = await request.get('/api/_debug/ready');\r\n    if (ready.ok()) {break;}\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n  }\r\n  expect(ready && ready.ok()).toBeTruthy();\r\n\r\n  // Create a project\r\n  const slug = `pwtest-${Date.now()}`;\r\n  const res = await request.post('/api/projects', {\r\n    headers: { 'Content-Type': 'application/json', 'x-debug-token': 'test-token-123' },\r\n    data: { slug, title: 'Playwright test', description: 'e2e', hero_image: '' },\r\n  });\r\n  expect(res.status()).toBe(201);\r\n  const body = await res.json();\r\n  expect(body.slug).toBe(slug);\r\n  expect(body.id).toBeTruthy();\r\n\r\n  // Read back list and find it\r\n  const list = await request.get('/api/projects');\r\n  expect(list.ok()).toBeTruthy();\r\n  const items = await list.json();\r\n  const found = items.find((p: any) => p.slug === slug);\r\n  expect(found).toBeTruthy();\r\n\r\n  // Delete the created project\r\n  const del = await request.fetch(`/api/projects/${body.id}`, { method: 'DELETE' });\r\n  expect(del.ok()).toBeTruthy();\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]},{"filePath":"C:\\Users\\kiri_\\cursor-main\\types\\contentlayer-generated.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]}]}]
ÔÇëELIFECYCLEÔÇë Command failed with exit code 1.
